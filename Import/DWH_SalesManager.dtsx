<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/19/2018 9:24:15 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="BRMXL74120SF"
  DTS:CreatorName="CORPORATE\alex.darling"
  DTS:DTSID="{D22272C1-7601-42C8-9588-3466163328A6}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3002.101"
  DTS:LocaleID="2057"
  DTS:ObjectName="DWH_SalesManager"
  DTS:PackageType="5"
  DTS:VersionBuild="122"
  DTS:VersionGUID="{47A050F8-D473-4ED3-A5D2-0D31E4D645B2}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Error Log]"
      DTS:CreationName="ExcelConnectionTF"
      DTS:DTSID="{61E90226-D021-4072-A6C1-093DD5E6AA73}"
      DTS:ObjectName="Excel Error Log">
      <DTS:PropertyExpression
        DTS:Name="FilePath">@[User::ErrorLog]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <ExcelConnectionManager
          ConnectionString="FilePath=\\w2brsrv1\Data\DATA WAREHOUSE\MAPPING TABLES\ErrorLog\ErrorLog.xlsx;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Source]"
      DTS:CreationName="ExcelConnectionTF"
      DTS:DTSID="{FB007D29-33A1-459C-9DC7-2E9CB434E05F}"
      DTS:ObjectName="Excel Source">
      <DTS:PropertyExpression
        DTS:Name="FilePath">@[User::OriginalFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <ExcelConnectionManager
          ConnectionString="FilePath=\\w2brsrv1\Data\DATA WAREHOUSE\MAPPING TABLES\Accounts\SalesTeamMapping.xlsx;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FAA0495B-7AA1-4CF9-82C3-CBD79634A9EF}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::ProcessedFolder]  +   @[User::CopyName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CopyFile">
      <DTS:VariableValue
        DTS:DataType="8">\\w2brsrv1\Data\DATA WAREHOUSE\MAPPING TABLES\Accounts\xlsx Processed\SalesTeamMapping_20180604.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{374F8FAD-FB84-49CF-ABCC-3559BBC3E226}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SalesTeamMapping_&quot;+ (DT_STR, 4, 1252) DATEPART(&quot;yyyy&quot; , GETDATE())&#xA;+ RIGHT(&quot;0&quot; + (DT_STR, 2, 1252) DATEPART(&quot;mm&quot; , GETDATE()), 2)&#xA;+ RIGHT(&quot;0&quot; + (DT_STR, 2, 1252) DATEPART(&quot;dd&quot; , GETDATE()), 2) + &quot;.xlsx&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CopyName">
      <DTS:VariableValue
        DTS:DataType="8">SalesTeamMapping_20180604.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4F9662FE-7610-4245-BD5E-FE26F28E522B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorLog">
      <DTS:VariableValue
        DTS:DataType="8">\\w2brsrv1\Data\DATA WAREHOUSE\MAPPING TABLES\ErrorLog\ErrorLog.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9B6A946B-006F-46DA-8521-C7885D3A1F4B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="LastWriteTime">
      <DTS:VariableValue
        DTS:DataType="7">4/30/2018 3:55:00 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AD1DE9DF-A2AD-4297-9F7A-4C5EBC7EBE13}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OriginalFile">
      <DTS:VariableValue
        DTS:DataType="8">\\w2brsrv1\Data\DATA WAREHOUSE\MAPPING TABLES\Accounts\SalesTeamMapping.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{533CF8D4-C9C3-4034-A518-2EAA4A101E95}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessedFolder">
      <DTS:VariableValue
        DTS:DataType="8">\\w2brsrv1\Data\DATA WAREHOUSE\MAPPING TABLES\Accounts\xlsx Processed\</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Check if any updates to Excel file"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{34765D0D-4421-4C56-83CE-3831C8185DE0}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Check if any updates to Excel file">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Check if any updates to Excel file\Get file properties"
          DTS:CreationName="PW.TaskFactory.FilePropertiesTask"
          DTS:Description="TF File Properties Task"
          DTS:Disabled="True"
          DTS:DTSID="{7767E5B5-CCD7-4EB2-9851-3225470E7A87}"
          DTS:ExecutableType="PW.TaskFactory.FilePropertiesTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get file properties"
          DTS:TaskContact="File Properties Task;Pragmatic Works, Inc; Task Factory (c) 2009 - 2016 Pragmatic Works, Inc; http://www.pragmaticworks.com;support@pragmaticworks.com"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileProperties
              File_FileName=""
              File_Extension=""
              File_CreationTime=""
              File_CreationTimeUtc=""
              File_LastAccessTimeUtc=""
              File_LastAccessTime=""
              File_LastWriteTime="LastWriteTime"
              File_LastWriteTimeUtc=""
              File_FileInUse=""
              File_Hidden=""
              File_Readonly=""
              File_Encrypted=""
              File_Compressed=""
              File_Archived=""
              File_Exists=""
              File_Content=""
              File_Size=""
              StopExecutionOnError="False"
              SelectedSourceType="Variable"
              SelectedVariableOrConnectionManager="OriginalFile" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Check if any updates to Excel file\Product Attribute"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{5888FAFD-8B67-4438-8C78-4B3922C368D4}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Product Attribute">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Check if any updates to Excel file\Product Attribute\Copy Excel to processed folder"
              DTS:CreationName="Microsoft.FileSystemTask"
              DTS:Description="File System Task"
              DTS:DTSID="{A4384C29-581E-441D-8421-3DC2DA497FA9}"
              DTS:ExecutableType="Microsoft.FileSystemTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Copy Excel to processed folder"
              DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <FileSystemData
                  TaskOverwriteDestFile="True"
                  TaskSourcePath="User::OriginalFile"
                  TaskIsSourceVariable="True"
                  TaskDestinationPath="User::CopyFile"
                  TaskIsDestinationVariable="True" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{12152C9F-363B-4E35-88E9-DE3B38D652BC}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Export to CSV"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:EventHandlers>
                <DTS:EventHandler
                  DTS:refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.EventHandlers[OnError]"
                  DTS:CreationName="OnError"
                  DTS:DTSID="{0DE45CBD-F691-486F-947E-CB7A8514D62F}"
                  DTS:EventID="0"
                  DTS:EventName="OnError"
                  DTS:LocaleID="-1">
                  <DTS:Variables>
                    <DTS:Variable
                      DTS:CreationName=""
                      DTS:Description="The propagate property of the event"
                      DTS:DTSID="{E4B6FA90-E264-461B-8AC1-17B5751BAACD}"
                      DTS:IncludeInDebugDump="6789"
                      DTS:Namespace="System"
                      DTS:ObjectName="Propagate">
                      <DTS:VariableValue
                        DTS:DataType="11">-1</DTS:VariableValue>
                    </DTS:Variable>
                  </DTS:Variables>
                  <DTS:Executables />
                </DTS:EventHandler>
              </DTS:EventHandlers>
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
                      name="Error Log"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The Destination database table name."
                          expressionType="Notify"
                          name="TableOrViewName"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."ErrorLog"</property>
                        <property
                          dataType="System.Int32"
                          description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                          expressionType="Notify"
                          name="BatchSize">0</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                          expressionType="Notify"
                          name="CommandTimeout">30</property>
                        <property
                          dataType="System.Boolean"
                          description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                          expressionType="Notify"
                          name="UseBulkInsertWhenPossible">true</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ADONETDestination</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Connections[IDbConnection]"
                          connectionManagerID="{33CC1FB3-144B-4210-A8A5-A7CDB65E4268}:external"
                          connectionManagerRefId="Project.ConnectionManagers[Management]"
                          description="Managed connection manager"
                          name="IDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input]"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="ADO NET Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input].Columns[ErrorCode]"
                              cachedDataType="i4"
                              cachedName="ErrorCode"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorCode]"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorCode]" />
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input].Columns[ErrorColumn]"
                              cachedDataType="i4"
                              cachedName="ErrorColumn"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorColumn]"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorColumn]" />
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input].Columns[ErrorDescription]"
                              cachedDataType="wstr"
                              cachedLength="1024"
                              cachedName="ErrorDescription"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorDescription]"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorDescription]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorLogID]"
                              dataType="i4"
                              name="ErrorLogID" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorCode]"
                              dataType="wstr"
                              length="50"
                              name="ErrorCode" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorColumn]"
                              dataType="wstr"
                              length="250"
                              name="ErrorColumn" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorDescription]"
                              dataType="wstr"
                              length="1024"
                              name="ErrorDescription" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[OtherDetails]"
                              dataType="wstr"
                              length="2147483647"
                              name="OtherDetails" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorDate]"
                              dataType="dbTimeStamp"
                              name="ErrorDate" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Outputs[ADO NET Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="ADO NET Destination Error Output"
                          synchronousInputId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
                      name="Error Log 1"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The Destination database table name."
                          expressionType="Notify"
                          name="TableOrViewName"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."ErrorLog"</property>
                        <property
                          dataType="System.Int32"
                          description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                          expressionType="Notify"
                          name="BatchSize">0</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                          expressionType="Notify"
                          name="CommandTimeout">30</property>
                        <property
                          dataType="System.Boolean"
                          description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                          expressionType="Notify"
                          name="UseBulkInsertWhenPossible">true</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ADONETDestination</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Connections[IDbConnection]"
                          connectionManagerID="{33CC1FB3-144B-4210-A8A5-A7CDB65E4268}:external"
                          connectionManagerRefId="Project.ConnectionManagers[Management]"
                          description="Managed connection manager"
                          name="IDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input]"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="ADO NET Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].Columns[ErrorCode]"
                              cachedDataType="i4"
                              cachedName="ErrorCode"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[ErrorCode]"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]" />
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].Columns[ErrorColumn]"
                              cachedDataType="i4"
                              cachedName="ErrorColumn"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[ErrorColumn]"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]" />
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].Columns[ErrorDescription]"
                              cachedDataType="wstr"
                              cachedLength="1024"
                              cachedName="ErrorDescription"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[ErrorDescription]"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorDescription]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[ErrorLogID]"
                              dataType="i4"
                              name="ErrorLogID" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[ErrorCode]"
                              dataType="wstr"
                              length="50"
                              name="ErrorCode" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[ErrorColumn]"
                              dataType="wstr"
                              length="250"
                              name="ErrorColumn" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[ErrorDescription]"
                              dataType="wstr"
                              length="1024"
                              name="ErrorDescription" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[OtherDetails]"
                              dataType="wstr"
                              length="2147483647"
                              name="OtherDetails" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[ErrorDate]"
                              dataType="dbTimeStamp"
                              name="ErrorDate" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Outputs[ADO NET Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="ADO NET Destination Error Output"
                          synchronousInputId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="TF Excel Source;Pragmatic Works, Inc; Task Factory (c) 2009 - 2017 Pragmatic Works, Inc; http://www.pragmaticworks.com;support@pragmaticworks.com"
                      description="TF Excel Source"
                      name="Excel Source"
                      usesDispositions="true"
                      validateExternalMetadata="False">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="DebugMode">false</property>
                        <property
                          dataType="System.Int32"
                          description="The first column to read data from"
                          expressionType="Notify"
                          name="Column Start">1</property>
                        <property
                          dataType="System.Int32"
                          description="The last column to read data from"
                          expressionType="Notify"
                          name="Column End">-1</property>
                        <property
                          dataType="System.Int32"
                          description="The first row to read data from"
                          expressionType="Notify"
                          name="Row Start">1</property>
                        <property
                          dataType="System.Int32"
                          description="The last row to read data from"
                          expressionType="Notify"
                          name="Row End">-1</property>
                        <property
                          dataType="System.String"
                          description="The name of the worksheet to read data from"
                          expressionType="Notify"
                          name="Worksheet Name">SalesTeamMapping</property>
                        <property
                          dataType="System.String"
                          description="Named range to use when reading data"
                          expressionType="Notify"
                          name="Named Range"></property>
                        <property
                          dataType="System.Int32"
                          description="The mode of which to read the region from the excel spreadsheet"
                          expressionType="Notify"
                          name="Region Mode"
                          typeConverter="PragmaticWorks.TaskFactory.Components.Sources.Excel+RegionMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicated if the first row of data contains the column names"
                          expressionType="Notify"
                          name="First Row Contains Column Name">true</property>
                        <property
                          dataType="System.Int32"
                          description="The format to read the rows out of the spreadsheet"
                          expressionType="Notify"
                          name="Output Format"
                          typeConverter="PragmaticWorks.TaskFactory.Components.Sources.Excel+OutputFormatStyle">1</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">PragmaticWorks.TaskFactory.ExcelSource</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Connections[EXCELCONNECTION]"
                          connectionManagerID="Package.ConnectionManagers[Excel Source]"
                          connectionManagerRefId="Package.ConnectionManagers[Excel Source]"
                          description="Excel Connection"
                          name="EXCELCONNECTION" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output]"
                          errorRowDisposition="RedirectRow"
                          name="Excel Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[Sales Manager]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sales Manager]"
                              length="250"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[Sales Manager]"
                              name="Sales Manager" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[Sales Manager Code]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sales Manager Code]"
                              length="250"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[Sales Manager Code]"
                              name="Sales Manager Code" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[Sales Manager Name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sales Manager Name]"
                              length="250"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[Sales Manager Name]"
                              name="Sales Manager Name" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[Sales Channel]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sales Channel]"
                              length="250"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[Sales Channel]"
                              name="Sales Channel" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[SalesTeam]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[SalesTeam]"
                              length="250"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[SalesTeam]"
                              name="SalesTeam" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sales Manager]"
                              dataType="wstr"
                              length="250"
                              name="Sales Manager">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  expressionType="Notify"
                                  name="Index">1</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sales Manager Code]"
                              dataType="wstr"
                              length="250"
                              name="Sales Manager Code">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  expressionType="Notify"
                                  name="Index">2</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sales Manager Name]"
                              dataType="wstr"
                              length="250"
                              name="Sales Manager Name">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  expressionType="Notify"
                                  name="Index">3</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sales Channel]"
                              dataType="wstr"
                              length="250"
                              name="Sales Channel">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  expressionType="Notify"
                                  name="Index">4</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[SalesTeam]"
                              dataType="wstr"
                              length="250"
                              name="SalesTeam">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  expressionType="Notify"
                                  name="Index">5</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output]"
                          isErrorOut="true"
                          name="Excel Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorDescription]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorDescription]"
                              name="ErrorDescription" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[Sales Manager]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[Sales Manager]"
                              length="250"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[Sales Manager]"
                              name="Sales Manager" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[Sales Manager Code]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[Sales Manager Code]"
                              length="250"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[Sales Manager Code]"
                              name="Sales Manager Code" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[Sales Manager Name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[Sales Manager Name]"
                              length="250"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[Sales Manager Name]"
                              name="Sales Manager Name" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[Sales Channel]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[Sales Channel]"
                              length="250"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[Sales Channel]"
                              name="Sales Channel" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[SalesTeam]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[SalesTeam]"
                              length="250"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[SalesTeam]"
                              name="SalesTeam" />
                          </outputColumns>
                          <externalMetadataColumns>
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[Sales Manager]"
                              dataType="wstr"
                              length="250"
                              name="Sales Manager" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[Sales Manager Code]"
                              dataType="wstr"
                              length="250"
                              name="Sales Manager Code" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[Sales Manager Name]"
                              dataType="wstr"
                              length="250"
                              name="Sales Manager Name" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[Sales Channel]"
                              dataType="wstr"
                              length="250"
                              name="Sales Channel" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[SalesTeam]"
                              dataType="wstr"
                              length="250"
                              name="SalesTeam" />
                          </externalMetadataColumns>
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Upsert Destinaton; Pragmatic Works, Inc; Task Factory (c) 2009 - 2016 Pragmatic Works, Inc; http://www.pragmaticworks.com;support@pragmaticworks.com"
                      description="The Upsert Destination takes input data coming from the pipeline and then conditionally inserts, updates or deletes data from the destination."
                      name="TF Upsert Destination"
                      usesDispositions="true"
                      version="13">
                      <properties>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="DESTINATION_TABLE_NAME">[dbo].[DimSalesManager]</property>
                        <property
                          dataType="System.Boolean"
                          expressionType="Notify"
                          name="ENABLE_IDENTITY_INSERT">true</property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="INSERT_ROWS_COUNT_VARIABLE">&lt;Select Variable&gt;</property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="UPDATE_ROWS_COUNT_VARIABLE">&lt;Select Variable&gt;</property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="COMMAND_TIMEOUT">0</property>
                        <property
                          dataType="System.Int32"
                          expressionType="Notify"
                          name="UPDATE_METHOD"
                          typeConverter="PW.TaskFactory.Enums+UpsertUpdateMethod">1</property>
                        <property
                          dataType="System.Boolean"
                          expressionType="Notify"
                          name="ACTION_UPDATE">true</property>
                        <property
                          dataType="System.Boolean"
                          expressionType="Notify"
                          name="ACTION_INSERT">true</property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="POST_UPDATE_COLUMN">ETLLastUpdatedDate</property>
                        <property
                          dataType="System.Boolean"
                          expressionType="Notify"
                          name="TURN_OFF_INTERNAL_TRANSACTION">false</property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="ROW_FLAG_COLUMN"></property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="ROW_FLAG_COLUMN_INSERT_VALUE"></property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="ROW_FLAG_COLUMN_DELETE_VALUE"></property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="ROW_FLAG_COLUMN_REJECT_VALUE"></property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="ROW_FLAG_COLUMN_UPDATE_VALUE"></property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.Int32"
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="PW.TaskFactory.Enums+UpsertAccessModeEnum">0</property>
                        <property
                          dataType="System.Int32"
                          expressionType="Notify"
                          name="UPSERT_METHOD"
                          typeConverter="PW.TaskFactory.Enums+UpsertMethod">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates the Upsert destination will use a custom definition for it's temp table creation"
                          expressionType="Notify"
                          name="Use Custom Temp Table">false</property>
                        <property
                          dataType="System.String"
                          description="Definition of the custom temp table script"
                          expressionType="Notify"
                          name="Custom Temp Table Definition"></property>
                        <property
                          dataType="System.Boolean"
                          description="Use a merge statement for the insert and updates instead of two seperate insert and update statements"
                          expressionType="Notify"
                          name="Use Merge Statement">false</property>
                        <property
                          dataType="System.String"
                          description="The script to run before each buffer is sent to the destination"
                          expressionType="Notify"
                          name="Before Script"></property>
                        <property
                          dataType="System.String"
                          description="The script to run after each buffer is sent to the destination"
                          expressionType="Notify"
                          name="After Script"></property>
                        <property
                          dataType="System.Boolean"
                          description="Set to true if you want the component to fail if the before script throws an exception."
                          expressionType="Notify"
                          name="Fail Component If Before Script Throws Exception">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set to true if you want the component to fail if the after script throws an exception."
                          expressionType="Notify"
                          name="Fail Component If After Script Throws Exception">false</property>
                        <property
                          dataType="System.String"
                          description="Allows you to set a table hint for the destination table (e.g. NOLOCK - SNAPSHOT)."
                          expressionType="Notify"
                          name="Table Hint"></property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">PW.TaskFactory.UpsertDestination</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Connections[DestinationConnection]"
                          connectionManagerID="{79D4C6B0-FA7C-445C-9C85-8B4167C1887B}:external"
                          connectionManagerRefId="Project.ConnectionManagers[Presentation]"
                          description="Connection for the destination"
                          name="DestinationConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input]"
                          errorOrTruncationOperation="Error or Truncation"
                          errorRowDisposition="RedirectRow"
                          hasSideEffects="true"
                          name="Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].Columns[Sales Manager Code]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="Sales Manager Code"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[SalesManagerCode]"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[Sales Manager Code]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Mapped Column for Destination"
                                  name="DestinationColumn">SalesManagerCode</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column A Key Column"
                                  name="IsKeyColumn">true</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column An Identity Column"
                                  name="IsIdentityColumn">false</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].Columns[Sales Manager Name]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="Sales Manager Name"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[SalesManagerName]"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[Sales Manager Name]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Mapped Column for Destination"
                                  name="DestinationColumn">SalesManagerName</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column A Key Column"
                                  name="IsKeyColumn">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column An Identity Column"
                                  name="IsIdentityColumn">false</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].Columns[Sales Channel]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="Sales Channel"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[SalesChannel]"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[Sales Channel]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Mapped Column for Destination"
                                  name="DestinationColumn">SalesChannel</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column A Key Column"
                                  name="IsKeyColumn">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column An Identity Column"
                                  name="IsIdentityColumn">false</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].Columns[SalesTeam]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="SalesTeam"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[SalesTeam]"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[SalesTeam]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Mapped Column for Destination"
                                  name="DestinationColumn">SalesTeam</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column A Key Column"
                                  name="IsKeyColumn">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column An Identity Column"
                                  name="IsIdentityColumn">false</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[SalesManagerKey]"
                              dataType="i4"
                              name="SalesManagerKey" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[SalesManagerCode]"
                              dataType="wstr"
                              length="4"
                              name="SalesManagerCode" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[SalesManagerName]"
                              dataType="wstr"
                              length="100"
                              name="SalesManagerName" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[SalesChannel]"
                              dataType="wstr"
                              length="100"
                              name="SalesChannel" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[SalesTeam]"
                              dataType="wstr"
                              length="100"
                              name="SalesTeam" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Outputs[Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Error Output"
                          synchronousInputId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorDescription]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorDescription]"
                              name="ErrorDescription" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.Paths[Error Output]"
                      endId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input]"
                      name="Error Output"
                      startId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Outputs[Error Output]" />
                    <path
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.Paths[Excel Source Error Output]"
                      endId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input]"
                      name="Excel Source Error Output"
                      startId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output]" />
                    <path
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.Paths[Excel Source Output]"
                      endId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input]"
                      name="Excel Source Output"
                      startId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Check if any updates to Excel file\Product Attribute.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{86B3F382-5E0F-4B0D-9728-EB7F82554E47}"
              DTS:From="Package\Check if any updates to Excel file\Product Attribute\Export to CSV"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Check if any updates to Excel file\Product Attribute\Copy Excel to processed folder" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Check if any updates to Excel file.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{EB45474B-DAF2-4947-A5C4-AE4E1BDF738C}"
          DTS:EvalOp="1"
          DTS:Expression="DATEDIFF( &quot;hour&quot;, @[User::LastWriteTime] , GETDATE()  ) &lt;= 24 ? TRUE : FALSE"
          DTS:From="Package\Check if any updates to Excel file\Get file properties"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Check if any updates to Excel file\Product Attribute" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{84AED559-42A7-46CC-BDB0-97B5E0E43E28}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{614779A2-9531-4D74-860F-76D89FA19B88}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Check if any updates to Excel file\Get file properties"
          TopLeft="20,5.5" />
        <NodeLayout
          Size="181,42"
          Id="Package\Check if any updates to Excel file\Product Attribute\Copy Excel to processed folder"
          TopLeft="5.50000000000001,107.5" />
        <NodeLayout
          Size="144,42"
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV"
          TopLeft="24,5.5" />
        <EdgeLayout
          Id="Package\Check if any updates to Excel file\Product Attribute.PrecedenceConstraints[Constraint]"
          TopLeft="96,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="192,205"
          Size="192,248"
          Id="Package\Check if any updates to Excel file\Product Attribute"
          TopLeft="5.50000000000004,107.5" />
        <EdgeLayout
          Id="Package\Check if any updates to Excel file.PrecedenceConstraints[Constraint]"
          TopLeft="101.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,18.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="203,411"
          Size="203,454"
          Id="Package\Check if any updates to Excel file"
          TopLeft="15,108.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Check if any updates to Excel file\Product Attribute\Export to CSV">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="139,42"
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source"
          TopLeft="239.5,5.5" />
        <NodeLayout
          Size="181,42"
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination"
          TopLeft="5.50000000000003,107.5" />
        <NodeLayout
          Size="123,42"
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1"
          TopLeft="247.5,107.5" />
        <NodeLayout
          Size="123,42"
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log"
          TopLeft="34.5000000000001,209.5" />
        <EdgeLayout
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.Paths[Excel Source Output]"
          TopLeft="287.166666666667,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-191.166666666667,60"
              Start="0,0"
              End="-191.166666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4096728307255"
                    Point2="0,24.4096728307255"
                    Point3="-4,24.4096728307255" />
                  <mssgle:LineSegment
                    End="-187.166666666667,24.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="-187.166666666667,24.4096728307255"
                    Point2="-191.166666666667,24.4096728307255"
                    Point3="-191.166666666667,28.4096728307255" />
                  <mssgle:LineSegment
                    End="-191.166666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.Paths[Excel Source Error Output]"
          TopLeft="330.833333333333,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-21.8333333333333,60"
              Start="0,0"
              End="-21.8333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4096728307255"
                    Point2="0,24.4096728307255"
                    Point3="-4,24.4096728307255" />
                  <mssgle:LineSegment
                    End="-17.8333333333333,24.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="-17.8333333333333,24.4096728307255"
                    Point2="-21.8333333333333,24.4096728307255"
                    Point3="-21.8333333333333,28.4096728307255" />
                  <mssgle:LineSegment
                    End="-21.8333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-68.7680533854166,29.4096728307255,115.7027734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.Paths[Error Output]"
          TopLeft="96,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-28.33638671875,20.533203125,56.6727734375,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <DtsEventHandler
    design-time-name="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="150,42"
          Id="{E8A3C6C2-186E-4879-A247-C709C7A5FA3F}"
          TopLeft="604,213" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <PipelineComponentMetadata
    design-time-name="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>