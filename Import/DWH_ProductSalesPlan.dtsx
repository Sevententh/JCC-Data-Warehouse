<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/19/2018 9:24:15 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="BRMXL74120SF"
  DTS:CreatorName="CORPORATE\alex.darling"
  DTS:DTSID="{088A0C38-6404-4518-AF0A-28C731BBD3D2}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3002.101"
  DTS:LocaleID="2057"
  DTS:ObjectName="DWH_ProductSalesPlan"
  DTS:PackageType="5"
  DTS:VersionBuild="129"
  DTS:VersionGUID="{FD2845F9-3BA5-4C4D-A2A3-07790F795119}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Source]"
      DTS:CreationName="ExcelConnectionTF"
      DTS:DTSID="{D864FE70-0BE3-4E2E-B041-6CD6B97F4D92}"
      DTS:ObjectName="Excel Source">
      <DTS:PropertyExpression
        DTS:Name="FilePath">@[User::OriginalFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <ExcelConnectionManager
          ConnectionString="FilePath=\\w2brsrv1\Data\DATA WAREHOUSE\MAPPING TABLES\Sales\ProductSalesPlan.xlsx;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost.JCC_DW_PRD_Presentation1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{06EAB22C-A939-4F86-8B37-0C05C292A9A2}"
      DTS:ObjectName="localhost.JCC_DW_PRD_Presentation1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=localhost;Initial Catalog=JCC_DW_PRD_Presentation;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FE2BF4A5-EC32-40F8-954D-55B136FEF035}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::ProcessedFolder]  +   @[User::CopyName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CopyFile">
      <DTS:VariableValue
        DTS:DataType="8">\\w2brsrv1\Data\DATA WAREHOUSE\MAPPING TABLES\Sales\xlsx Processed\ProductSalesPlan_20180604.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D8AFC62C-C746-46C6-9B83-A25498DC1A1B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;ProductSalesPlan_&quot;+ (DT_STR, 4, 1252) DATEPART(&quot;yyyy&quot; , GETDATE())&#xA;+ RIGHT(&quot;0&quot; + (DT_STR, 2, 1252) DATEPART(&quot;mm&quot; , GETDATE()), 2)&#xA;+ RIGHT(&quot;0&quot; + (DT_STR, 2, 1252) DATEPART(&quot;dd&quot; , GETDATE()), 2) + &quot;.xlsx&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CopyName">
      <DTS:VariableValue
        DTS:DataType="8">ProductSalesPlan_20180604.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E574E1D4-1CB5-46A7-824C-69C083F0D8F9}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="LastWriteTime">
      <DTS:VariableValue
        DTS:DataType="7">4/30/2018 3:55:00 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6FB566BF-FE0A-4A9C-B02C-0AFE45471504}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OriginalFile">
      <DTS:VariableValue
        DTS:DataType="8">\\w2brsrv1\Data\DATA WAREHOUSE\MAPPING TABLES\Sales\ProductSalesPlan.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{16133B91-5802-4542-9445-2B38B3FF1F49}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessedFolder">
      <DTS:VariableValue
        DTS:DataType="8">\\w2brsrv1\Data\DATA WAREHOUSE\MAPPING TABLES\Sales\xlsx Processed\</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Check if any updates to Excel file"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{760D81AA-0C4C-48C1-8ACB-397D1C9B446E}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Check if any updates to Excel file">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Check if any updates to Excel file\Get file properties"
          DTS:CreationName="PW.TaskFactory.FilePropertiesTask"
          DTS:Description="TF File Properties Task"
          DTS:Disabled="True"
          DTS:DTSID="{7D42311E-7E07-4495-AFED-103D59A3F052}"
          DTS:ExecutableType="PW.TaskFactory.FilePropertiesTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get file properties"
          DTS:TaskContact="File Properties Task;Pragmatic Works, Inc; Task Factory (c) 2009 - 2016 Pragmatic Works, Inc; http://www.pragmaticworks.com;support@pragmaticworks.com"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileProperties
              File_FileName=""
              File_Extension=""
              File_CreationTime=""
              File_CreationTimeUtc=""
              File_LastAccessTimeUtc=""
              File_LastAccessTime=""
              File_LastWriteTime="LastWriteTime"
              File_LastWriteTimeUtc=""
              File_FileInUse=""
              File_Hidden=""
              File_Readonly=""
              File_Encrypted=""
              File_Compressed=""
              File_Archived=""
              File_Exists=""
              File_Content=""
              File_Size=""
              StopExecutionOnError="False"
              SelectedSourceType="Variable"
              SelectedVariableOrConnectionManager="OriginalFile" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Check if any updates to Excel file\Product Attribute"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{B1F3D310-7F29-44B4-BC84-0718FDBF9F1F}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Product Attribute">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Check if any updates to Excel file\Product Attribute\Copy Excel to processed folder"
              DTS:CreationName="Microsoft.FileSystemTask"
              DTS:Description="File System Task"
              DTS:DTSID="{0DC7F1EE-EAF4-47DF-BBC3-9C230CB3ED74}"
              DTS:ExecutableType="Microsoft.FileSystemTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Copy Excel to processed folder"
              DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <FileSystemData
                  TaskOverwriteDestFile="True"
                  TaskSourcePath="User::OriginalFile"
                  TaskIsSourceVariable="True"
                  TaskDestinationPath="User::CopyFile"
                  TaskIsDestinationVariable="True" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{337A778B-27A7-44C6-8722-731E904BFE4F}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Export to CSV"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:EventHandlers>
                <DTS:EventHandler
                  DTS:refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.EventHandlers[OnError]"
                  DTS:CreationName="OnError"
                  DTS:DTSID="{19C26D8C-5A29-4207-87AF-2D658266F7DD}"
                  DTS:EventID="0"
                  DTS:EventName="OnError"
                  DTS:LocaleID="-1">
                  <DTS:Variables>
                    <DTS:Variable
                      DTS:CreationName=""
                      DTS:Description="The propagate property of the event"
                      DTS:DTSID="{B2D4B5AE-A839-4665-9394-060FE98D64F7}"
                      DTS:IncludeInDebugDump="6789"
                      DTS:Namespace="System"
                      DTS:ObjectName="Propagate">
                      <DTS:VariableValue
                        DTS:DataType="11">-1</DTS:VariableValue>
                    </DTS:Variable>
                  </DTS:Variables>
                  <DTS:Executables />
                </DTS:EventHandler>
              </DTS:EventHandlers>
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\DER Look up field default values"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Updates column values using expressions"
                      name="DER Look up field default values"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\DER Look up field default values.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\DER Look up field default values.Inputs[Derived Column Input].Columns[PlanMonthDateKey]"
                              cachedDataType="i4"
                              cachedName="PlanMonthDateKey"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Output].Columns[PlanMonthDateKey]"
                              truncationRowDisposition="FailComponent"
                              usageType="readWrite">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[ISNULL](#{Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[PlanMonth]}) ? -2 : [ISNULL](#{Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Output].Columns[PlanMonthDateKey]}) ? -1 : #{Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Output].Columns[PlanMonthDateKey]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">ISNULL(PlanMonth) ? -2 : ISNULL(PlanMonthDateKey) ? -1 : PlanMonthDateKey</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\DER Look up field default values.Inputs[Derived Column Input].Columns[ReportYearDateKey]"
                              cachedDataType="i4"
                              cachedName="ReportYearDateKey"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Output].Columns[ReportYearDateKey]"
                              truncationRowDisposition="FailComponent"
                              usageType="readWrite">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[ISNULL](#{Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[ReportYear]}) ? -2 : [ISNULL](#{Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Output].Columns[ReportYearDateKey]}) ? -1 : #{Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Output].Columns[ReportYearDateKey]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">ISNULL(ReportYear) ? -2 : ISNULL(ReportYearDateKey) ? -1 : ReportYearDateKey</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\DER Look up field default values.Inputs[Derived Column Input].Columns[ProductCode]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="25"
                              cachedName="ProductCode"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[ProductCode]" />
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\DER Look up field default values.Inputs[Derived Column Input].Columns[ProductKey]"
                              cachedDataType="i4"
                              cachedName="ProductKey"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup products.Outputs[Lookup Match Output].Columns[ProductKey]"
                              truncationRowDisposition="FailComponent"
                              usageType="readWrite">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[ISNULL](#{Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[ProductCode]}) || #{Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[ProductCode]} == "" ? -2 : [ISNULL](#{Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup products.Outputs[Lookup Match Output].Columns[ProductKey]}) ? -1 : #{Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup products.Outputs[Lookup Match Output].Columns[ProductKey]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">ISNULL(ProductCode) || ProductCode == "" ? -2 : ISNULL(ProductKey) ? -1 : ProductKey</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\DER Look up field default values.Inputs[Derived Column Input].Columns[LoadDateKey]"
                              cachedDataType="i4"
                              cachedName="LoadDateKey"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Output].Columns[LoadDateKey]" />
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\DER Look up field default values.Inputs[Derived Column Input].Columns[FinancialPlanTypeCode]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="FinancialPlanTypeCode"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[FinancialPlanTypeCode]" />
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\DER Look up field default values.Inputs[Derived Column Input].Columns[FinancialPlanTypeKey]"
                              cachedDataType="i4"
                              cachedName="FinancialPlanTypeKey"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup FinancialPlanKey.Outputs[Lookup Match Output].Columns[FinancialPlanTypeKey]"
                              truncationRowDisposition="FailComponent"
                              usageType="readWrite">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[ISNULL](#{Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[FinancialPlanTypeCode]}) || #{Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[FinancialPlanTypeCode]} == "" ? -2 : [ISNULL](#{Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup FinancialPlanKey.Outputs[Lookup Match Output].Columns[FinancialPlanTypeKey]}) ? -1 : #{Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup FinancialPlanKey.Outputs[Lookup Match Output].Columns[FinancialPlanTypeKey]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">ISNULL(FinancialPlanTypeCode) || FinancialPlanTypeCode == "" ? -2 : ISNULL(FinancialPlanTypeKey) ? -1 : FinancialPlanTypeKey</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\DER Look up field default values.Inputs[Derived Column Input].Columns[ReportYear]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="ReportYear"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[ReportYear]" />
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\DER Look up field default values.Inputs[Derived Column Input].Columns[PlanMonth]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="PlanMonth"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[PlanMonth]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\DER Look up field default values.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\DER Look up field default values.Inputs[Derived Column Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\DER Look up field default values.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\DER Look up field default values.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\DER Look up field default values.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\DER Look up field default values.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\DER Look up field default values.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\DER Look up field default values.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Derived Column"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Inputs[Derived Column Input].Columns[ReportYear]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="ReportYear"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[ReportYear]" />
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Inputs[Derived Column Input].Columns[PlanMonth]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="PlanMonth"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[PlanMonth]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Output].Columns[ReportYearDateKey]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Output].Columns[ReportYearDateKey]"
                              name="ReportYearDateKey"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_I4)#{Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[ReportYear]} + (DT_I4)"0101"</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_I4)ReportYear + (DT_I4)"0101"</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Output].Columns[PlanMonthDateKey]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Output].Columns[PlanMonthDateKey]"
                              name="PlanMonthDateKey"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_I4)((DT_STR,4,1252)[DATEPART]("yy",[GETDATE]()) + [RIGHT]("0" + (DT_STR,2,1252)[REPLACE](#{Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[PlanMonth]},"-",""),2) + "01")</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_I4)((DT_STR,4,1252)DATEPART("yy",GETDATE()) + RIGHT("0" + (DT_STR,2,1252)REPLACE(PlanMonth,"-",""),2) + "01")</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Output].Columns[ActiveFlagCode]"
                              codePage="1250"
                              dataType="str"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="1"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Output].Columns[ActiveFlagCode]"
                              name="ActiveFlagCode"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_STR,1,1250)"Y"</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_STR,1,1250)"Y"</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Output].Columns[LoadDateKey]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Output].Columns[LoadDateKey]"
                              name="LoadDateKey"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_I4)((DT_STR,4,1252)[DATEPART]("yy",[GETDATE]()) + [RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("mm",[GETDATE]()),2) + [RIGHT]("0" + (DT_STR,2,1252)[DATEPART]("dd",[GETDATE]()),2))</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_I4)((DT_STR,4,1252)DATEPART("yy",GETDATE()) + RIGHT("0" + (DT_STR,2,1252)DATEPART("mm",GETDATE()),2) + RIGHT("0" + (DT_STR,2,1252)DATEPART("dd",GETDATE()),2))</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Output].Columns[SourceItemID]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Output].Columns[SourceItemID]"
                              name="SourceItemID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">-1</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">-1</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column 1"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Derived Column 1"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column 1.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column 1.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column 1.Inputs[Derived Column Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column 1.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column 1.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
                      name="Error Log"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The Destination database table name."
                          expressionType="Notify"
                          name="TableOrViewName"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."ErrorLog"</property>
                        <property
                          dataType="System.Int32"
                          description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                          expressionType="Notify"
                          name="BatchSize">0</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                          expressionType="Notify"
                          name="CommandTimeout">30</property>
                        <property
                          dataType="System.Boolean"
                          description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                          expressionType="Notify"
                          name="UseBulkInsertWhenPossible">true</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ADONETDestination</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Connections[IDbConnection]"
                          connectionManagerID="{33CC1FB3-144B-4210-A8A5-A7CDB65E4268}:external"
                          connectionManagerRefId="Project.ConnectionManagers[Management]"
                          description="Managed connection manager"
                          name="IDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input]"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="ADO NET Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input].Columns[ErrorCode]"
                              cachedDataType="i4"
                              cachedName="ErrorCode"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorCode]"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorCode]" />
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input].Columns[ErrorColumn]"
                              cachedDataType="i4"
                              cachedName="ErrorColumn"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorColumn]"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorColumn]" />
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input].Columns[ErrorDescription]"
                              cachedDataType="wstr"
                              cachedLength="1024"
                              cachedName="ErrorDescription"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorDescription]"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorDescription]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorLogID]"
                              dataType="i4"
                              name="ErrorLogID" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorCode]"
                              dataType="wstr"
                              length="50"
                              name="ErrorCode" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorColumn]"
                              dataType="wstr"
                              length="250"
                              name="ErrorColumn" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorDescription]"
                              dataType="wstr"
                              length="1024"
                              name="ErrorDescription" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[OtherDetails]"
                              dataType="wstr"
                              length="2147483647"
                              name="OtherDetails" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorDate]"
                              dataType="wstr"
                              length="50"
                              name="ErrorDate" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Outputs[ADO NET Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="ADO NET Destination Error Output"
                          synchronousInputId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
                      name="Error Log 1"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The Destination database table name."
                          expressionType="Notify"
                          name="TableOrViewName"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."ErrorLog"</property>
                        <property
                          dataType="System.Int32"
                          description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                          expressionType="Notify"
                          name="BatchSize">0</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                          expressionType="Notify"
                          name="CommandTimeout">30</property>
                        <property
                          dataType="System.Boolean"
                          description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                          expressionType="Notify"
                          name="UseBulkInsertWhenPossible">true</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ADONETDestination</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Connections[IDbConnection]"
                          connectionManagerID="{33CC1FB3-144B-4210-A8A5-A7CDB65E4268}:external"
                          connectionManagerRefId="Project.ConnectionManagers[Management]"
                          description="Managed connection manager"
                          name="IDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input]"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="ADO NET Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].Columns[ErrorCode]"
                              cachedDataType="i4"
                              cachedName="ErrorCode"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[ErrorCode]"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]" />
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].Columns[ErrorColumn]"
                              cachedDataType="i4"
                              cachedName="ErrorColumn"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[ErrorColumn]"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]" />
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].Columns[ErrorDescription]"
                              cachedDataType="wstr"
                              cachedLength="1024"
                              cachedName="ErrorDescription"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[ErrorDescription]"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorDescription]" />
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].Columns[FinancialPlanTypeCode]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="FinancialPlanTypeCode"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[OtherDetails]"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[FinancialPlanTypeCode]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[ErrorLogID]"
                              dataType="i4"
                              name="ErrorLogID" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[ErrorCode]"
                              dataType="wstr"
                              length="50"
                              name="ErrorCode" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[ErrorColumn]"
                              dataType="wstr"
                              length="250"
                              name="ErrorColumn" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[ErrorDescription]"
                              dataType="wstr"
                              length="1024"
                              name="ErrorDescription" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[OtherDetails]"
                              dataType="wstr"
                              length="2147483647"
                              name="OtherDetails" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[ErrorDate]"
                              dataType="wstr"
                              length="50"
                              name="ErrorDate" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Outputs[ADO NET Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="ADO NET Destination Error Output"
                          synchronousInputId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="TF Excel Source;Pragmatic Works, Inc; Task Factory (c) 2009 - 2017 Pragmatic Works, Inc; http://www.pragmaticworks.com;support@pragmaticworks.com"
                      description="TF Excel Source"
                      name="Excel Source"
                      usesDispositions="true"
                      validateExternalMetadata="False">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="DebugMode">false</property>
                        <property
                          dataType="System.Int32"
                          description="The first column to read data from"
                          expressionType="Notify"
                          name="Column Start">1</property>
                        <property
                          dataType="System.Int32"
                          description="The last column to read data from"
                          expressionType="Notify"
                          name="Column End">-1</property>
                        <property
                          dataType="System.Int32"
                          description="The first row to read data from"
                          expressionType="Notify"
                          name="Row Start">1</property>
                        <property
                          dataType="System.Int32"
                          description="The last row to read data from"
                          expressionType="Notify"
                          name="Row End">-1</property>
                        <property
                          dataType="System.String"
                          description="The name of the worksheet to read data from"
                          expressionType="Notify"
                          name="Worksheet Name">ProductSalesPlan</property>
                        <property
                          dataType="System.String"
                          description="Named range to use when reading data"
                          expressionType="Notify"
                          name="Named Range"></property>
                        <property
                          dataType="System.Int32"
                          description="The mode of which to read the region from the excel spreadsheet"
                          expressionType="Notify"
                          name="Region Mode"
                          typeConverter="PragmaticWorks.TaskFactory.Components.Sources.Excel+RegionMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicated if the first row of data contains the column names"
                          expressionType="Notify"
                          name="First Row Contains Column Name">true</property>
                        <property
                          dataType="System.Int32"
                          description="The format to read the rows out of the spreadsheet"
                          expressionType="Notify"
                          name="Output Format"
                          typeConverter="PragmaticWorks.TaskFactory.Components.Sources.Excel+OutputFormatStyle">1</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">PragmaticWorks.TaskFactory.ExcelSource</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Connections[EXCELCONNECTION]"
                          connectionManagerID="Package.ConnectionManagers[Excel Source]"
                          connectionManagerRefId="Package.ConnectionManagers[Excel Source]"
                          description="Excel Connection"
                          name="EXCELCONNECTION" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output]"
                          errorRowDisposition="RedirectRow"
                          name="Excel Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[FinancialPlanTypeCode]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[FinancialPlanTypeCode]"
                              length="255"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[FinancialPlanTypeCode]"
                              name="FinancialPlanTypeCode" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[ReportYear]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[ReportYear]"
                              length="250"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[ReportYear]"
                              name="ReportYear" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[PlanMonth]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[PlanMonth]"
                              length="250"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[PlanMonth]"
                              name="PlanMonth" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[ProductCode]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[ProductCode]"
                              length="25"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[ProductCode]"
                              name="ProductCode" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[PlanQty]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[PlanQty]"
                              length="250"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[PlanQty]"
                              name="PlanQty" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[FinancialPlanTypeCode]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="FinancialPlanTypeCode">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  expressionType="Notify"
                                  name="Index">1</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[ReportYear]"
                              dataType="wstr"
                              length="250"
                              name="ReportYear">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  expressionType="Notify"
                                  name="Index">2</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[PlanMonth]"
                              dataType="wstr"
                              length="250"
                              name="PlanMonth">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  expressionType="Notify"
                                  name="Index">3</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[ProductCode]"
                              codePage="1252"
                              dataType="str"
                              length="25"
                              name="ProductCode">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  expressionType="Notify"
                                  name="Index">4</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[PlanQty]"
                              dataType="wstr"
                              length="250"
                              name="PlanQty">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  expressionType="Notify"
                                  name="Index">5</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output]"
                          isErrorOut="true"
                          name="Excel Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorDescription]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorDescription]"
                              name="ErrorDescription" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[FinancialPlanTypeCode]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[FinancialPlanTypeCode]"
                              length="255"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[FinancialPlanTypeCode]"
                              name="FinancialPlanTypeCode" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ReportYear]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[ReportYear]"
                              length="250"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ReportYear]"
                              name="ReportYear" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[PlanMonth]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[PlanMonth]"
                              length="250"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[PlanMonth]"
                              name="PlanMonth" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ProductCode]"
                              codePage="1252"
                              dataType="str"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[ProductCode]"
                              length="25"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ProductCode]"
                              name="ProductCode" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[PlanQty]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[PlanQty]"
                              length="250"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[PlanQty]"
                              name="PlanQty" />
                          </outputColumns>
                          <externalMetadataColumns>
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[FinancialPlanTypeCode]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="FinancialPlanTypeCode" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[ReportYear]"
                              dataType="wstr"
                              length="250"
                              name="ReportYear" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[PlanMonth]"
                              dataType="wstr"
                              length="250"
                              name="PlanMonth" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[ProductCode]"
                              codePage="1252"
                              dataType="str"
                              length="25"
                              name="ProductCode" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[PlanQty]"
                              dataType="wstr"
                              length="250"
                              name="PlanQty" />
                          </externalMetadataColumns>
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup FinancialPlanKey"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Lookup FinancialPlanKey"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT [FinancialPlanTypeKey], [FinancialPlanTypeCode]
FROM [DimFinancialPlanType]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT [FinancialPlanTypeKey], [FinancialPlanTypeCode]
FROM [DimFinancialPlanType]) [refTable]
where [refTable].[FinancialPlanTypeCode] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="FinancialPlanTypeKey" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FinancialPlanTypeCode" dataType="DT_STR" length="25" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[FinancialPlanTypeCode]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup FinancialPlanKey.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[localhost.JCC_DW_PRD_Presentation1]"
                          connectionManagerRefId="Package.ConnectionManagers[localhost.JCC_DW_PRD_Presentation1]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup FinancialPlanKey.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup FinancialPlanKey.Inputs[Lookup Input].Columns[FinancialPlanTypeCode]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="FinancialPlanTypeCode"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[FinancialPlanTypeCode]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">FinancialPlanTypeCode</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup FinancialPlanKey.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup FinancialPlanKey.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup FinancialPlanKey.Outputs[Lookup Match Output].Columns[FinancialPlanTypeKey]"
                              dataType="i4"
                              errorOrTruncationOperation="Copy Column"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup FinancialPlanKey.Outputs[Lookup Match Output].Columns[FinancialPlanTypeKey]"
                              name="FinancialPlanTypeKey"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn">FinancialPlanTypeKey</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup FinancialPlanKey.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup FinancialPlanKey.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup FinancialPlanKey.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup FinancialPlanKey.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup FinancialPlanKey.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup FinancialPlanKey.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup FinancialPlanKey.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup FinancialPlanKey.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup Flag"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Lookup Flag"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT [FlagKey], [FlagCode] 
FROM 
[dbo].[DimFlag]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT [FlagKey], [FlagCode] 
FROM 
[dbo].[DimFlag]) [refTable]
where [refTable].[FlagCode] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="FlagKey" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FlagCode" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Output].Columns[ActiveFlagCode]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup Flag.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[localhost.JCC_DW_PRD_Presentation1]"
                          connectionManagerRefId="Package.ConnectionManagers[localhost.JCC_DW_PRD_Presentation1]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup Flag.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup Flag.Inputs[Lookup Input].Columns[ActiveFlagCode]"
                              cachedCodepage="1250"
                              cachedDataType="str"
                              cachedLength="1"
                              cachedName="ActiveFlagCode"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Output].Columns[ActiveFlagCode]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">FlagCode</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup Flag.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup Flag.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup Flag.Outputs[Lookup Match Output].Columns[FlagKey]"
                              dataType="i4"
                              errorOrTruncationOperation="Copy Column"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup Flag.Outputs[Lookup Match Output].Columns[FlagKey]"
                              name="FlagKey"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn">FlagKey</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup Flag.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup Flag.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup Flag.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup Flag.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup Flag.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup Flag.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup Flag.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup Flag.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup products"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Lookup products"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[DimProduct]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[DimProduct]) [refTable]
where [refTable].[ProductCode] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ProductKey" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CurrentManualClassificationKey" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CurrentCalculatedClassificationKey" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CurrentSupplierKey" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ProductCode" dataType="DT_STR" length="25" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="ProductName" dataType="DT_STR" length="80" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="ActiveStatus" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AssemblyType" dataType="DT_STR" length="1" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="CartonVolume" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DiscontinuedFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FirstDateSold" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="InCatalogue" dataType="DT_STR" length="30" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="LeadTime" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Lightsource" dataType="DT_STR" length="20" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="ProductGroup" dataType="DT_STR" length="20" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="ProductPreviousCode" dataType="DT_STR" length="25" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="PurchaseWeight" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="SellWeight" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="SpeedOfLight" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="SupercededCode" dataType="DT_STR" length="20" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="VerticalMarket" dataType="DT_STR" length="20" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="CategoryCode" dataType="DT_STR" length="2" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="CategoryName" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="AgreedResolutionProvision" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="BeamAngle" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="BodyMaterial" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="CeilingType" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ColourRendering" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ColourTemp" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CostComparison" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Diffuser" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="EarthClass" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Finish" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="FireRatedFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GenericDescription" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="IPRating" dataType="DT_STR" length="10" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="LampCap" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="LampIncludedFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LampLife" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LampModel" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="LampQty" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LampWattage" dataType="DT_STR" length="10" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="LastCatalogueAppearance" dataType="DT_STR" length="10" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Location" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Lumens" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="PowerSupply" dataType="DT_STR" length="10" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Range" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Subrange" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="UtilisationFactor" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="WebsiteLiveDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="WebsiteRemovedDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IsDaliFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IsDIMFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IsDISFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IsMicrowaveFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TargetFIFOMonth" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ProvisionMultiplier" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FamilyCode" dataType="DT_STR" length="10" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="FamilyDescription" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="GroupFamilyAccControlSystemFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyAccDriverFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyAccessoryFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyAccFirehoodFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyAccLampFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyAccTransformerFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyCommercialFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyCommInBulkheadFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyCommInColourChangingLEDFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyCommInDownlightFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyCommInFIreRatedDownlightFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyCommInFlatPanelFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyCommInHighBayFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyCommInSurfaceMountedFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyCommInSuspendedFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyCommInTrackSpotFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyCommInWallLightFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyCommOutBollardFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyCommOutColourChangingLEDFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyCommOutFloodSpotLightFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyCommOutLanternFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyCommOutRecessedWalGroundFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyCommOutWallLightFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyCommPendantFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyDomesticFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyDomInDownlightFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyDomInFireRatedDownlightFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyDomInTrackSpotFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyDomInUndershelfCabinetFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyDomInUplightFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyDomInWallCeilingLightFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyDomOutBollardFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyDomOutColourChangingLEDFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyDomOutFloodSpotLightFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyDomOutLanternFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyDomOutRecessedWallGroundFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyDomOutWallLightFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyIndoorFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="GroupFamilyOutdoorFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AppFamilyCommEducationFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AppFamilyCommercialFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AppFamilyCommExteriorFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AppFamilyCommHealthcareFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AppFamilyCommHospitalityFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AppFamilyCommHousingFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AppFamilyCommIndustrialBuildingFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AppFamilyCommOfficeFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AppFamilyCommRetailFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AppFamilyCommSportLeisureFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AppFamilyCommStreetUrbanFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AppFamilyDomBathroomFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AppFamilyDomBedroomFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AppFamilyDomesticFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AppFamilyDomGarageFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AppFamilyDomHallwayStairFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AppFamilyDomHomeOfficeFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AppFamilyDomKitchenFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AppFamilyDomLivingDiningFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AppFamilyDomOutdoorGardenFlag" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ProductCategory" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FinanceClassificationKey" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[ProductCode]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup products.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[localhost.JCC_DW_PRD_Presentation1]"
                          connectionManagerRefId="Package.ConnectionManagers[localhost.JCC_DW_PRD_Presentation1]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup products.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup products.Inputs[Lookup Input].Columns[ProductCode]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="25"
                              cachedName="ProductCode"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[ProductCode]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">ProductCode</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup products.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup products.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup products.Outputs[Lookup Match Output].Columns[ProductKey]"
                              dataType="i4"
                              errorOrTruncationOperation="Copy Column"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup products.Outputs[Lookup Match Output].Columns[ProductKey]"
                              name="ProductKey"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn">ProductKey</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup products.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup products.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup products.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup products.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup products.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup products.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup products.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup products.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Upsert Destinaton; Pragmatic Works, Inc; Task Factory (c) 2009 - 2016 Pragmatic Works, Inc; http://www.pragmaticworks.com;support@pragmaticworks.com"
                      description="The Upsert Destination takes input data coming from the pipeline and then conditionally inserts, updates or deletes data from the destination."
                      name="TF Upsert Destination"
                      usesDispositions="true"
                      version="13">
                      <properties>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="DESTINATION_TABLE_NAME">[dbo].[FactProductSalesPlan]</property>
                        <property
                          dataType="System.Boolean"
                          expressionType="Notify"
                          name="ENABLE_IDENTITY_INSERT">false</property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="INSERT_ROWS_COUNT_VARIABLE">&lt;Select Variable&gt;</property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="UPDATE_ROWS_COUNT_VARIABLE">&lt;Select Variable&gt;</property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="COMMAND_TIMEOUT">0</property>
                        <property
                          dataType="System.Int32"
                          expressionType="Notify"
                          name="UPDATE_METHOD"
                          typeConverter="PW.TaskFactory.Enums+UpsertUpdateMethod">1</property>
                        <property
                          dataType="System.Boolean"
                          expressionType="Notify"
                          name="ACTION_UPDATE">false</property>
                        <property
                          dataType="System.Boolean"
                          expressionType="Notify"
                          name="ACTION_INSERT">true</property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="POST_UPDATE_COLUMN">ETLLastUpdatedDate</property>
                        <property
                          dataType="System.Boolean"
                          expressionType="Notify"
                          name="TURN_OFF_INTERNAL_TRANSACTION">false</property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="ROW_FLAG_COLUMN"></property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="ROW_FLAG_COLUMN_INSERT_VALUE"></property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="ROW_FLAG_COLUMN_DELETE_VALUE"></property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="ROW_FLAG_COLUMN_REJECT_VALUE"></property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="ROW_FLAG_COLUMN_UPDATE_VALUE"></property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.Int32"
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="PW.TaskFactory.Enums+UpsertAccessModeEnum">0</property>
                        <property
                          dataType="System.Int32"
                          expressionType="Notify"
                          name="UPSERT_METHOD"
                          typeConverter="PW.TaskFactory.Enums+UpsertMethod">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates the Upsert destination will use a custom definition for it's temp table creation"
                          expressionType="Notify"
                          name="Use Custom Temp Table">false</property>
                        <property
                          dataType="System.String"
                          description="Definition of the custom temp table script"
                          expressionType="Notify"
                          name="Custom Temp Table Definition"></property>
                        <property
                          dataType="System.Boolean"
                          description="Use a merge statement for the insert and updates instead of two seperate insert and update statements"
                          expressionType="Notify"
                          name="Use Merge Statement">false</property>
                        <property
                          dataType="System.String"
                          description="The script to run before each buffer is sent to the destination"
                          expressionType="Notify"
                          name="Before Script"></property>
                        <property
                          dataType="System.String"
                          description="The script to run after each buffer is sent to the destination"
                          expressionType="Notify"
                          name="After Script"></property>
                        <property
                          dataType="System.Boolean"
                          description="Set to true if you want the component to fail if the before script throws an exception."
                          expressionType="Notify"
                          name="Fail Component If Before Script Throws Exception">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set to true if you want the component to fail if the after script throws an exception."
                          expressionType="Notify"
                          name="Fail Component If After Script Throws Exception">false</property>
                        <property
                          dataType="System.String"
                          description="Allows you to set a table hint for the destination table (e.g. NOLOCK - SNAPSHOT)."
                          expressionType="Notify"
                          name="Table Hint"></property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">PW.TaskFactory.UpsertDestination</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Connections[DestinationConnection]"
                          connectionManagerID="{79D4C6B0-FA7C-445C-9C85-8B4167C1887B}:external"
                          connectionManagerRefId="Project.ConnectionManagers[Presentation]"
                          description="Connection for the destination"
                          name="DestinationConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input]"
                          errorOrTruncationOperation="Error or Truncation"
                          errorRowDisposition="RedirectRow"
                          hasSideEffects="true"
                          name="Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].Columns[PlanMonthDateKey]"
                              cachedDataType="i4"
                              cachedName="PlanMonthDateKey"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[PlanMonthDateKey]"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Output].Columns[PlanMonthDateKey]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Mapped Column for Destination"
                                  name="DestinationColumn">PlanMonthDateKey</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column A Key Column"
                                  name="IsKeyColumn">true</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column An Identity Column"
                                  name="IsIdentityColumn">false</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].Columns[ProductKey]"
                              cachedDataType="i4"
                              cachedName="ProductKey"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[ProductKey]"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup products.Outputs[Lookup Match Output].Columns[ProductKey]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Mapped Column for Destination"
                                  name="DestinationColumn">ProductKey</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column A Key Column"
                                  name="IsKeyColumn">true</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column An Identity Column"
                                  name="IsIdentityColumn">false</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].Columns[ReportYearDateKey]"
                              cachedDataType="i4"
                              cachedName="ReportYearDateKey"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[ReportYearDateKey]"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Output].Columns[ReportYearDateKey]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Mapped Column for Destination"
                                  name="DestinationColumn">ReportYearDateKey</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column A Key Column"
                                  name="IsKeyColumn">true</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column An Identity Column"
                                  name="IsIdentityColumn">false</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].Columns[PlanQty]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="PlanQty"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[PlanQty]"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[PlanQty]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Mapped Column for Destination"
                                  name="DestinationColumn">PlanQty</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column A Key Column"
                                  name="IsKeyColumn">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column An Identity Column"
                                  name="IsIdentityColumn">false</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].Columns[FinancialPlanTypeKey]"
                              cachedDataType="i4"
                              cachedName="FinancialPlanTypeKey"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[FinancialPlanTypeKey]"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup FinancialPlanKey.Outputs[Lookup Match Output].Columns[FinancialPlanTypeKey]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Mapped Column for Destination"
                                  name="DestinationColumn">FinancialPlanTypeKey</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column A Key Column"
                                  name="IsKeyColumn">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column An Identity Column"
                                  name="IsIdentityColumn">false</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].Columns[LoadDateKey]"
                              cachedDataType="i4"
                              cachedName="LoadDateKey"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[LoadDateKey]"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Output].Columns[LoadDateKey]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Mapped Column for Destination"
                                  name="DestinationColumn">LoadDateKey</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column A Key Column"
                                  name="IsKeyColumn">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column An Identity Column"
                                  name="IsIdentityColumn">false</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].Columns[FlagKey]"
                              cachedDataType="i4"
                              cachedName="FlagKey"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[ActiveFlagKey]"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup Flag.Outputs[Lookup Match Output].Columns[FlagKey]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Mapped Column for Destination"
                                  name="DestinationColumn">ActiveFlagKey</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column A Key Column"
                                  name="IsKeyColumn">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column An Identity Column"
                                  name="IsIdentityColumn">false</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].Columns[SourceItemID]"
                              cachedDataType="i4"
                              cachedName="SourceItemID"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Output].Columns[SourceItemID]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[MT_ProductSalesPlanKey]"
                              dataType="i4"
                              name="MT_ProductSalesPlanKey" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[ActiveFlagKey]"
                              dataType="i4"
                              name="ActiveFlagKey" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[FinancialPlanTypeKey]"
                              dataType="i4"
                              name="FinancialPlanTypeKey" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[LoadDateKey]"
                              dataType="i4"
                              name="LoadDateKey" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[PlanMonthDateKey]"
                              dataType="i4"
                              name="PlanMonthDateKey" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[ProductKey]"
                              dataType="i4"
                              name="ProductKey" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[ReportYearDateKey]"
                              dataType="i4"
                              name="ReportYearDateKey" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[PlanQty]"
                              dataType="r8"
                              name="PlanQty" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Outputs[Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Error Output"
                          synchronousInputId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorDescription]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorDescription]"
                              name="ErrorDescription" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.Paths[Derived Column Output]"
                      endId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Inputs[Input]"
                      name="Derived Column Output"
                      startId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\DER Look up field default values.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.Paths[Derived Column Output1]"
                      endId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column 1.Inputs[Derived Column Input]"
                      name="Derived Column Output"
                      startId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.Paths[Derived Column Output2]"
                      endId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup FinancialPlanKey.Inputs[Lookup Input]"
                      name="Derived Column Output"
                      startId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column 1.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.Paths[Error Output]"
                      endId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log.Inputs[ADO NET Destination Input]"
                      name="Error Output"
                      startId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination.Outputs[Error Output]" />
                    <path
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.Paths[Excel Source Error Output]"
                      endId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input]"
                      name="Excel Source Error Output"
                      startId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Error Output]" />
                    <path
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.Paths[Excel Source Output]"
                      endId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup products.Inputs[Lookup Input]"
                      name="Excel Source Output"
                      startId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source.Outputs[Excel Source Output]" />
                    <path
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.Paths[Lookup Match Output]"
                      endId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column.Inputs[Derived Column Input]"
                      name="Lookup Match Output"
                      startId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup products.Outputs[Lookup Match Output]" />
                    <path
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.Paths[Lookup Match Output1]"
                      endId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup Flag.Inputs[Lookup Input]"
                      name="Lookup Match Output"
                      startId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup FinancialPlanKey.Outputs[Lookup Match Output]" />
                    <path
                      refId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.Paths[Lookup Match Output2]"
                      endId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\DER Look up field default values.Inputs[Derived Column Input]"
                      name="Lookup Match Output"
                      startId="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup Flag.Outputs[Lookup Match Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Check if any updates to Excel file\Product Attribute.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{65D31676-B65A-43BF-9801-8DE73F40EE24}"
              DTS:From="Package\Check if any updates to Excel file\Product Attribute\Export to CSV"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Check if any updates to Excel file\Product Attribute\Copy Excel to processed folder" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Check if any updates to Excel file.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{8025D06F-13C2-4CEF-B872-D9B7EBF92DFE}"
          DTS:EvalOp="1"
          DTS:Expression="DATEDIFF( &quot;hour&quot;, @[User::LastWriteTime] , GETDATE()  ) &lt;= 24 ? TRUE : FALSE"
          DTS:From="Package\Check if any updates to Excel file\Get file properties"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Check if any updates to Excel file\Product Attribute" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{A4056530-6787-4A34-BCB9-46B5BECBDE6A}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{C96A4D87-1A82-408B-AF7A-86474475C331}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Check if any updates to Excel file\Get file properties"
          TopLeft="20,5.5" />
        <NodeLayout
          Size="181,42"
          Id="Package\Check if any updates to Excel file\Product Attribute\Copy Excel to processed folder"
          TopLeft="5.50000000000001,107.5" />
        <NodeLayout
          Size="144,42"
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV"
          TopLeft="24,5.5" />
        <EdgeLayout
          Id="Package\Check if any updates to Excel file\Product Attribute.PrecedenceConstraints[Constraint]"
          TopLeft="96,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="192,205"
          Size="192,248"
          Id="Package\Check if any updates to Excel file\Product Attribute"
          TopLeft="5.50000000000004,107.5" />
        <EdgeLayout
          Id="Package\Check if any updates to Excel file.PrecedenceConstraints[Constraint]"
          TopLeft="101.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,18.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="203,411"
          Size="203,454"
          Id="Package\Check if any updates to Excel file"
          TopLeft="15,108.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Check if any updates to Excel file\Product Attribute\Export to CSV">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="194,42"
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup FinancialPlanKey"
          TopLeft="5.50000000000006,413.5" />
        <NodeLayout
          Size="181,42"
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\TF Upsert Destination"
          TopLeft="12.0000000000001,721.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column"
          TopLeft="25.5,209.5" />
        <NodeLayout
          Size="136,42"
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup Flag"
          TopLeft="34.5000000000001,515.5" />
        <NodeLayout
          Size="139,42"
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Excel Source"
          TopLeft="234,5.5" />
        <NodeLayout
          Size="157,42"
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup products"
          TopLeft="24,107.5" />
        <NodeLayout
          Size="123,42"
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1"
          TopLeft="242,107.5" />
        <NodeLayout
          Size="136,44"
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\DER Look up field default values"
          TopLeft="34.5000000000001,617.5" />
        <NodeLayout
          Size="123,42"
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log"
          TopLeft="41.0000000000001,823.5" />
        <EdgeLayout
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.Paths[Lookup Match Output2]"
          TopLeft="102.5,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,20.4453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.Paths[Lookup Match Output1]"
          TopLeft="102.5,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,20.4453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.Paths[Lookup Match Output]"
          TopLeft="102.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,20.4453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.Paths[Excel Source Output]"
          TopLeft="281.666666666667,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-179.166666666667,60"
              Start="0,0"
              End="-179.166666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4096728307255"
                    Point2="0,24.4096728307255"
                    Point3="-4,24.4096728307255" />
                  <mssgle:LineSegment
                    End="-175.166666666667,24.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="-175.166666666667,24.4096728307255"
                    Point2="-179.166666666667,24.4096728307255"
                    Point3="-179.166666666667,28.4096728307255" />
                  <mssgle:LineSegment
                    End="-179.166666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.Paths[Excel Source Error Output]"
          TopLeft="325.333333333333,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-21.8333333333333,60"
              Start="0,0"
              End="-21.8333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4096728307255"
                    Point2="0,24.4096728307255"
                    Point3="-4,24.4096728307255" />
                  <mssgle:LineSegment
                    End="-17.8333333333333,24.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="-17.8333333333333,24.4096728307255"
                    Point2="-21.8333333333333,24.4096728307255"
                    Point3="-21.8333333333333,28.4096728307255" />
                  <mssgle:LineSegment
                    End="-21.8333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-68.7680533854167,29.4096728307255,115.7027734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.Paths[Error Output]"
          TopLeft="102.5,763.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-28.33638671875,20.533203125,56.6727734375,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.Paths[Derived Column Output]"
          TopLeft="102.5,661.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="163,42"
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Derived Column 1"
          TopLeft="21.0000000000001,311.5" />
        <EdgeLayout
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.Paths[Derived Column Output1]"
          TopLeft="102.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.Paths[Derived Column Output2]"
          TopLeft="102.5,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <DtsEventHandler
    design-time-name="Package\Check if any updates to Excel file\Product Attribute\Export to CSV.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="150,42"
          Id="{E8A3C6C2-186E-4879-A247-C709C7A5FA3F}"
          TopLeft="604,213" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <PipelineComponentMetadata
    design-time-name="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup FinancialPlanKey">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup Flag">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Lookup products">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[DimProduct]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Check if any updates to Excel file\Product Attribute\Export to CSV\Error Log 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>