<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/19/2018 9:24:15 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="BRMXL74120SF"
  DTS:CreatorName="CORPORATE\alex.darling"
  DTS:DTSID="{3FB2661A-829D-4345-8DA1-244B669A47D9}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3002.101"
  DTS:LocaleID="2057"
  DTS:ObjectName="DWH_Customers"
  DTS:PackageType="5"
  DTS:VersionBuild="129"
  DTS:VersionGUID="{799C80DB-8001-40E4-86C4-CC34765B24F4}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Error Log]"
      DTS:CreationName="ExcelConnectionTF"
      DTS:DTSID="{A77E0E5A-5F32-4A3A-9FB1-7C4D309CFA9F}"
      DTS:ObjectName="Excel Error Log">
      <DTS:PropertyExpression
        DTS:Name="FilePath">@[User::ErrorLog]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <ExcelConnectionManager
          ConnectionString="FilePath=\\w2brsrv1\Data\DATA WAREHOUSE\MAPPING TABLES\ErrorLog\ErrorLog.xlsx;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Error Log 1]"
      DTS:CreationName="ExcelConnectionTF"
      DTS:DTSID="{8D1000AD-71F6-4187-A8C1-36DB43C7AA2C}"
      DTS:ObjectName="Excel Error Log 1">
      <DTS:PropertyExpression
        DTS:Name="FilePath">@[User::ErrorLog]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <ExcelConnectionManager
          ConnectionString="FilePath=\\w2brsrv1\Data\DATA WAREHOUSE\MAPPING TABLES\ErrorLog\ErrorLog.xlsx;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Source]"
      DTS:CreationName="ExcelConnectionTF"
      DTS:DTSID="{C440AE72-172B-43FD-A16A-89726E5EC8E2}"
      DTS:ObjectName="Excel Source">
      <DTS:PropertyExpression
        DTS:Name="FilePath">@[User::OriginalFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <ExcelConnectionManager
          ConnectionString="FilePath=\\w2brsrv1\Data\DATA WAREHOUSE\MAPPING TABLES\Customer\Customer Region.xlsx;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E5F017E4-804B-43D7-BA2B-DB736036BCC9}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::ProcessedFolder]  +   @[User::CopyName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CopyFile">
      <DTS:VariableValue
        DTS:DataType="8">\\w2brsrv1\Data\DATA WAREHOUSE\MAPPING TABLES\Customer\xlsx Processed\CustomerRegion_20180601.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A47E9111-21A1-42E2-97F1-A7977CE8C6AE}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;CustomerRegion_&quot;+ (DT_STR, 4, 1252) DATEPART(&quot;yyyy&quot; , GETDATE())&#xA;+ RIGHT(&quot;0&quot; + (DT_STR, 2, 1252) DATEPART(&quot;mm&quot; , GETDATE()), 2)&#xA;+ RIGHT(&quot;0&quot; + (DT_STR, 2, 1252) DATEPART(&quot;dd&quot; , GETDATE()), 2) + &quot;.xlsx&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CopyName">
      <DTS:VariableValue
        DTS:DataType="8">CustomerRegion_20180601.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A334AE16-0A30-40B1-AF8E-E0A17F26FFE2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorLog">
      <DTS:VariableValue
        DTS:DataType="8">\\w2brsrv1\Data\DATA WAREHOUSE\MAPPING TABLES\ErrorLog\ErrorLog.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{29A00A0F-BC32-4E81-A275-BD3859F24142}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="LastWriteTime">
      <DTS:VariableValue
        DTS:DataType="7">4/30/2018 3:55:00 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C8D33B8C-48F1-4DDE-9A73-3C137473FD4F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OriginalFile">
      <DTS:VariableValue
        DTS:DataType="8">\\w2brsrv1\Data\DATA WAREHOUSE\MAPPING TABLES\Customer\Customer Region.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0401287D-BB10-452E-B8B6-8228FBC44ADA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessedFolder">
      <DTS:VariableValue
        DTS:DataType="8">\\w2brsrv1\Data\DATA WAREHOUSE\MAPPING TABLES\Customer\xlsx Processed\</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Check if any updates to Excel file"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{621BC39F-1BC3-4FA7-B652-147AA6FCABAC}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Check if any updates to Excel file">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Check if any updates to Excel file\Customer Region"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{74876134-41B4-424C-A99C-D625A4654B01}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Customer Region">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Check if any updates to Excel file\Customer Region\Copy Excel to processed folder"
              DTS:CreationName="Microsoft.FileSystemTask"
              DTS:Description="File System Task"
              DTS:DTSID="{4011E111-07A5-4A21-A330-BA6927ACC294}"
              DTS:ExecutableType="Microsoft.FileSystemTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Copy Excel to processed folder"
              DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <FileSystemData
                  TaskOverwriteDestFile="True"
                  TaskSourcePath="User::OriginalFile"
                  TaskIsSourceVariable="True"
                  TaskDestinationPath="User::CopyFile"
                  TaskIsDestinationVariable="True" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{61060221-2F22-45C6-BEE8-FBFE8CC92348}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Export to CSV"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:EventHandlers>
                <DTS:EventHandler
                  DTS:refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV.EventHandlers[OnError]"
                  DTS:CreationName="OnError"
                  DTS:DTSID="{499CF66D-B5C8-4149-94BC-827A86883E07}"
                  DTS:EventID="0"
                  DTS:EventName="OnError"
                  DTS:LocaleID="-1">
                  <DTS:Variables>
                    <DTS:Variable
                      DTS:CreationName=""
                      DTS:Description="The propagate property of the event"
                      DTS:DTSID="{39D91A29-B302-4B22-B6C7-5C6C3B79D620}"
                      DTS:IncludeInDebugDump="6789"
                      DTS:Namespace="System"
                      DTS:ObjectName="Propagate">
                      <DTS:VariableValue
                        DTS:DataType="11">-1</DTS:VariableValue>
                    </DTS:Variable>
                  </DTS:Variables>
                  <DTS:Executables />
                </DTS:EventHandler>
              </DTS:EventHandlers>
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
                      name="Error Log"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The Destination database table name."
                          expressionType="Notify"
                          name="TableOrViewName"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."ErrorLog"</property>
                        <property
                          dataType="System.Int32"
                          description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                          expressionType="Notify"
                          name="BatchSize">0</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                          expressionType="Notify"
                          name="CommandTimeout">30</property>
                        <property
                          dataType="System.Boolean"
                          description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                          expressionType="Notify"
                          name="UseBulkInsertWhenPossible">true</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ADONETDestination</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log.Connections[IDbConnection]"
                          connectionManagerID="{33CC1FB3-144B-4210-A8A5-A7CDB65E4268}:external"
                          connectionManagerRefId="Project.ConnectionManagers[Management]"
                          description="Managed connection manager"
                          name="IDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log.Inputs[ADO NET Destination Input]"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="ADO NET Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log.Inputs[ADO NET Destination Input].Columns[ErrorCode]"
                              cachedDataType="i4"
                              cachedName="ErrorCode"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorCode]"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorCode]" />
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log.Inputs[ADO NET Destination Input].Columns[ErrorColumn]"
                              cachedDataType="i4"
                              cachedName="ErrorColumn"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorColumn]"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorColumn]" />
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log.Inputs[ADO NET Destination Input].Columns[ErrorDescription]"
                              cachedDataType="wstr"
                              cachedLength="1024"
                              cachedName="ErrorDescription"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorDescription]"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorDescription]" />
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log.Inputs[ADO NET Destination Input].Columns[Customer Code]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="Customer Code"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[OtherDetails]"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[Customer Code]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorLogID]"
                              dataType="i4"
                              name="ErrorLogID" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorCode]"
                              dataType="wstr"
                              length="50"
                              name="ErrorCode" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorColumn]"
                              dataType="wstr"
                              length="250"
                              name="ErrorColumn" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorDescription]"
                              dataType="wstr"
                              length="1024"
                              name="ErrorDescription" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[OtherDetails]"
                              dataType="wstr"
                              length="2147483647"
                              name="OtherDetails" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorDate]"
                              dataType="wstr"
                              length="50"
                              name="ErrorDate" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log.Outputs[ADO NET Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="ADO NET Destination Error Output"
                          synchronousInputId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log.Inputs[ADO NET Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
                      name="Error Log 1"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The Destination database table name."
                          expressionType="Notify"
                          name="TableOrViewName"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."ErrorLog"</property>
                        <property
                          dataType="System.Int32"
                          description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                          expressionType="Notify"
                          name="BatchSize">0</property>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                          expressionType="Notify"
                          name="CommandTimeout">30</property>
                        <property
                          dataType="System.Boolean"
                          description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                          expressionType="Notify"
                          name="UseBulkInsertWhenPossible">true</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ADONETDestination</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1.Connections[IDbConnection]"
                          connectionManagerID="{33CC1FB3-144B-4210-A8A5-A7CDB65E4268}:external"
                          connectionManagerRefId="Project.ConnectionManagers[Management]"
                          description="Managed connection manager"
                          name="IDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input]"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="ADO NET Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].Columns[ErrorCode]"
                              cachedDataType="i4"
                              cachedName="ErrorCode"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[ErrorCode]"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]" />
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].Columns[ErrorColumn]"
                              cachedDataType="i4"
                              cachedName="ErrorColumn"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[ErrorColumn]"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]" />
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].Columns[ErrorDescription]"
                              cachedDataType="wstr"
                              cachedLength="1024"
                              cachedName="ErrorDescription"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[ErrorDescription]"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorDescription]" />
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].Columns[Customer Code]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="Customer Code"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[OtherDetails]"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[Customer Code]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[ErrorLogID]"
                              dataType="i4"
                              name="ErrorLogID" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[ErrorCode]"
                              dataType="wstr"
                              length="50"
                              name="ErrorCode" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[ErrorColumn]"
                              dataType="wstr"
                              length="250"
                              name="ErrorColumn" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[ErrorDescription]"
                              dataType="wstr"
                              length="1024"
                              name="ErrorDescription" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[OtherDetails]"
                              dataType="wstr"
                              length="2147483647"
                              name="OtherDetails" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input].ExternalColumns[ErrorDate]"
                              dataType="wstr"
                              length="50"
                              name="ErrorDate" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1.Outputs[ADO NET Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="ADO NET Destination Error Output"
                          synchronousInputId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="TF Excel Source;Pragmatic Works, Inc; Task Factory (c) 2009 - 2017 Pragmatic Works, Inc; http://www.pragmaticworks.com;support@pragmaticworks.com"
                      description="TF Excel Source"
                      name="Excel Source"
                      usesDispositions="true"
                      validateExternalMetadata="False">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="DebugMode">false</property>
                        <property
                          dataType="System.Int32"
                          description="The first column to read data from"
                          expressionType="Notify"
                          name="Column Start">1</property>
                        <property
                          dataType="System.Int32"
                          description="The last column to read data from"
                          expressionType="Notify"
                          name="Column End">-1</property>
                        <property
                          dataType="System.Int32"
                          description="The first row to read data from"
                          expressionType="Notify"
                          name="Row Start">1</property>
                        <property
                          dataType="System.Int32"
                          description="The last row to read data from"
                          expressionType="Notify"
                          name="Row End">-1</property>
                        <property
                          dataType="System.String"
                          description="The name of the worksheet to read data from"
                          expressionType="Notify"
                          name="Worksheet Name">CustomerRegion</property>
                        <property
                          dataType="System.String"
                          description="Named range to use when reading data"
                          expressionType="Notify"
                          name="Named Range"></property>
                        <property
                          dataType="System.Int32"
                          description="The mode of which to read the region from the excel spreadsheet"
                          expressionType="Notify"
                          name="Region Mode"
                          typeConverter="PragmaticWorks.TaskFactory.Components.Sources.Excel+RegionMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicated if the first row of data contains the column names"
                          expressionType="Notify"
                          name="First Row Contains Column Name">true</property>
                        <property
                          dataType="System.Int32"
                          description="The format to read the rows out of the spreadsheet"
                          expressionType="Notify"
                          name="Output Format"
                          typeConverter="PragmaticWorks.TaskFactory.Components.Sources.Excel+OutputFormatStyle">1</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">PragmaticWorks.TaskFactory.ExcelSource</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Connections[EXCELCONNECTION]"
                          connectionManagerID="Package.ConnectionManagers[Excel Source]"
                          connectionManagerRefId="Package.ConnectionManagers[Excel Source]"
                          description="Excel Connection"
                          name="EXCELCONNECTION" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Output]"
                          errorRowDisposition="RedirectRow"
                          name="Excel Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[Customer Code]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[Customer Code]"
                              length="250"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[Customer Code]"
                              name="Customer Code" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[Buying Group]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[Buying Group]"
                              length="250"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[Buying Group]"
                              name="Buying Group" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[Customer Region]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[Customer Region]"
                              length="250"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[Customer Region]"
                              name="Customer Region" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[Customer Code]"
                              dataType="wstr"
                              length="250"
                              name="Customer Code">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  expressionType="Notify"
                                  name="Index">1</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[Buying Group]"
                              dataType="wstr"
                              length="250"
                              name="Buying Group">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  expressionType="Notify"
                                  name="Index">2</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Output].ExternalColumns[Customer Region]"
                              dataType="wstr"
                              length="250"
                              name="Customer Region">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  expressionType="Notify"
                                  name="Index">3</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Error Output]"
                          isErrorOut="true"
                          name="Excel Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorDescription]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorDescription]"
                              name="ErrorDescription" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[Customer Code]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[Customer Code]"
                              length="250"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[Customer Code]"
                              name="Customer Code" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[Buying Group]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[Buying Group]"
                              length="250"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[Buying Group]"
                              name="Buying Group" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[Customer Region]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[Customer Region]"
                              length="250"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Error Output].Columns[Customer Region]"
                              name="Customer Region" />
                          </outputColumns>
                          <externalMetadataColumns>
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[Customer Code]"
                              dataType="wstr"
                              length="250"
                              name="Customer Code" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[Buying Group]"
                              dataType="wstr"
                              length="250"
                              name="Buying Group" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Error Output].ExternalColumns[Customer Region]"
                              dataType="wstr"
                              length="250"
                              name="Customer Region" />
                          </externalMetadataColumns>
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Upsert Destinaton; Pragmatic Works, Inc; Task Factory (c) 2009 - 2016 Pragmatic Works, Inc; http://www.pragmaticworks.com;support@pragmaticworks.com"
                      description="The Upsert Destination takes input data coming from the pipeline and then conditionally inserts, updates or deletes data from the destination."
                      name="TF Upsert Destination"
                      usesDispositions="true"
                      version="13">
                      <properties>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="DESTINATION_TABLE_NAME">[dbo].[DimCustomer]</property>
                        <property
                          dataType="System.Boolean"
                          expressionType="Notify"
                          name="ENABLE_IDENTITY_INSERT">true</property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="INSERT_ROWS_COUNT_VARIABLE">&lt;Select Variable&gt;</property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="UPDATE_ROWS_COUNT_VARIABLE">&lt;Select Variable&gt;</property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="COMMAND_TIMEOUT">0</property>
                        <property
                          dataType="System.Int32"
                          expressionType="Notify"
                          name="UPDATE_METHOD"
                          typeConverter="PW.TaskFactory.Enums+UpsertUpdateMethod">1</property>
                        <property
                          dataType="System.Boolean"
                          expressionType="Notify"
                          name="ACTION_UPDATE">true</property>
                        <property
                          dataType="System.Boolean"
                          expressionType="Notify"
                          name="ACTION_INSERT">false</property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="POST_UPDATE_COLUMN">ETLLastUpdatedDate</property>
                        <property
                          dataType="System.Boolean"
                          expressionType="Notify"
                          name="TURN_OFF_INTERNAL_TRANSACTION">false</property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="ROW_FLAG_COLUMN"></property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="ROW_FLAG_COLUMN_INSERT_VALUE"></property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="ROW_FLAG_COLUMN_DELETE_VALUE"></property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="ROW_FLAG_COLUMN_REJECT_VALUE"></property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="ROW_FLAG_COLUMN_UPDATE_VALUE"></property>
                        <property
                          dataType="System.String"
                          expressionType="Notify"
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.Int32"
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="PW.TaskFactory.Enums+UpsertAccessModeEnum">0</property>
                        <property
                          dataType="System.Int32"
                          expressionType="Notify"
                          name="UPSERT_METHOD"
                          typeConverter="PW.TaskFactory.Enums+UpsertMethod">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates the Upsert destination will use a custom definition for it's temp table creation"
                          expressionType="Notify"
                          name="Use Custom Temp Table">false</property>
                        <property
                          dataType="System.String"
                          description="Definition of the custom temp table script"
                          expressionType="Notify"
                          name="Custom Temp Table Definition"></property>
                        <property
                          dataType="System.Boolean"
                          description="Use a merge statement for the insert and updates instead of two seperate insert and update statements"
                          expressionType="Notify"
                          name="Use Merge Statement">false</property>
                        <property
                          dataType="System.String"
                          description="The script to run before each buffer is sent to the destination"
                          expressionType="Notify"
                          name="Before Script"></property>
                        <property
                          dataType="System.String"
                          description="The script to run after each buffer is sent to the destination"
                          expressionType="Notify"
                          name="After Script"></property>
                        <property
                          dataType="System.Boolean"
                          description="Set to true if you want the component to fail if the before script throws an exception."
                          expressionType="Notify"
                          name="Fail Component If Before Script Throws Exception">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set to true if you want the component to fail if the after script throws an exception."
                          expressionType="Notify"
                          name="Fail Component If After Script Throws Exception">false</property>
                        <property
                          dataType="System.String"
                          description="Allows you to set a table hint for the destination table (e.g. NOLOCK - SNAPSHOT)."
                          expressionType="Notify"
                          name="Table Hint"></property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">PW.TaskFactory.UpsertDestination</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Connections[DestinationConnection]"
                          connectionManagerID="{79D4C6B0-FA7C-445C-9C85-8B4167C1887B}:external"
                          connectionManagerRefId="Project.ConnectionManagers[Presentation]"
                          description="Connection for the destination"
                          name="DestinationConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input]"
                          errorOrTruncationOperation="Error or Truncation"
                          errorRowDisposition="RedirectRow"
                          hasSideEffects="true"
                          name="Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].Columns[Customer Code]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="Customer Code"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[CustomerCode]"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[Customer Code]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Mapped Column for Destination"
                                  name="DestinationColumn">CustomerCode</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column A Key Column"
                                  name="IsKeyColumn">true</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column An Identity Column"
                                  name="IsIdentityColumn">false</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].Columns[Buying Group]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="Buying Group"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[BuyingGroup]"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[Buying Group]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Mapped Column for Destination"
                                  name="DestinationColumn">BuyingGroup</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column A Key Column"
                                  name="IsKeyColumn">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column An Identity Column"
                                  name="IsIdentityColumn">false</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].Columns[Customer Region]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="Customer Region"
                              externalMetadataColumnId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[Region]"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Output].Columns[Customer Region]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Mapped Column for Destination"
                                  name="DestinationColumn">Region</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column A Key Column"
                                  name="IsKeyColumn">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Is Column An Identity Column"
                                  name="IsIdentityColumn">false</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[CustomerKey]"
                              dataType="i4"
                              name="CustomerKey" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[SalesManagerKey]"
                              dataType="i4"
                              name="SalesManagerKey" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[CustomerCode]"
                              dataType="wstr"
                              length="10"
                              name="CustomerCode" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[CustomerName]"
                              dataType="wstr"
                              length="40"
                              name="CustomerName" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[BuyingGroup]"
                              dataType="wstr"
                              length="20"
                              name="BuyingGroup" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[Classification]"
                              dataType="wstr"
                              length="100"
                              name="Classification" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[CreditLimit]"
                              dataType="r8"
                              name="CreditLimit" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[Merchandiser]"
                              dataType="wstr"
                              length="100"
                              name="Merchandiser" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[OnStopFlag]"
                              dataType="bool"
                              name="OnStopFlag" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[PriceBook]"
                              dataType="wstr"
                              length="20"
                              name="PriceBook" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[Region]"
                              dataType="wstr"
                              length="100"
                              name="Region" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[Terms]"
                              dataType="wstr"
                              length="40"
                              name="Terms" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[CustomerAddress]"
                              dataType="wstr"
                              length="160"
                              name="CustomerAddress" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[CustomerTown]"
                              dataType="wstr"
                              length="30"
                              name="CustomerTown" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[CustomerCounty]"
                              dataType="wstr"
                              length="30"
                              name="CustomerCounty" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[CustomerPostcode]"
                              dataType="wstr"
                              length="12"
                              name="CustomerPostcode" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[CustomerCountryCode]"
                              dataType="wstr"
                              length="4"
                              name="CustomerCountryCode" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[ContactName]"
                              dataType="wstr"
                              length="30"
                              name="ContactName" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[Email]"
                              dataType="wstr"
                              length="64"
                              name="Email" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[PhoneNumber]"
                              dataType="wstr"
                              length="20"
                              name="PhoneNumber" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[InvoiceAddress]"
                              dataType="wstr"
                              length="160"
                              name="InvoiceAddress" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[InvoiceTown]"
                              dataType="wstr"
                              length="30"
                              name="InvoiceTown" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[InvoiceCounty]"
                              dataType="wstr"
                              length="30"
                              name="InvoiceCounty" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[InvoicePostcode]"
                              dataType="wstr"
                              length="12"
                              name="InvoicePostcode" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[InvoiceCountryCode]"
                              dataType="wstr"
                              length="4"
                              name="InvoiceCountryCode" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[ETLCreatedDate]"
                              dataType="dbTimeStamp"
                              name="ETLCreatedDate" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[ETLLastUpdatedDate]"
                              dataType="dbTimeStamp"
                              name="ETLLastUpdatedDate" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[ETLCustomerChecksum]"
                              dataType="i4"
                              name="ETLCustomerChecksum" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[ETLMerchandiserAccountChecksum]"
                              dataType="i4"
                              name="ETLMerchandiserAccountChecksum" />
                            <externalMetadataColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input].ExternalColumns[ETLCustomerRegionChecksum]"
                              dataType="i4"
                              name="ETLCustomerRegionChecksum" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Outputs[Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Error Output"
                          synchronousInputId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorDescription]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Outputs[Error Output].Columns[ErrorDescription]"
                              name="ErrorDescription" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV.Paths[Error Output]"
                      endId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log.Inputs[ADO NET Destination Input]"
                      name="Error Output"
                      startId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Outputs[Error Output]" />
                    <path
                      refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV.Paths[Excel Source Error Output]"
                      endId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1.Inputs[ADO NET Destination Input]"
                      name="Excel Source Error Output"
                      startId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Error Output]" />
                    <path
                      refId="Package\Check if any updates to Excel file\Customer Region\Export to CSV.Paths[Excel Source Output]"
                      endId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination.Inputs[Input]"
                      name="Excel Source Output"
                      startId="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source.Outputs[Excel Source Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Check if any updates to Excel file\Customer Region.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{6235322A-7DD5-4CA0-8A7E-5184547AC6AC}"
              DTS:From="Package\Check if any updates to Excel file\Customer Region\Export to CSV"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Check if any updates to Excel file\Customer Region\Copy Excel to processed folder" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Check if any updates to Excel file\Get file properties"
          DTS:CreationName="PW.TaskFactory.FilePropertiesTask"
          DTS:Description="TF File Properties Task"
          DTS:DTSID="{C7AF58BD-5701-4561-9810-665E03CBCED9}"
          DTS:ExecutableType="PW.TaskFactory.FilePropertiesTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get file properties"
          DTS:TaskContact="File Properties Task;Pragmatic Works, Inc; Task Factory (c) 2009 - 2016 Pragmatic Works, Inc; http://www.pragmaticworks.com;support@pragmaticworks.com"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileProperties
              File_FileName=""
              File_Extension=""
              File_CreationTime=""
              File_CreationTimeUtc=""
              File_LastAccessTimeUtc=""
              File_LastAccessTime=""
              File_LastWriteTime="LastWriteTime"
              File_LastWriteTimeUtc=""
              File_FileInUse=""
              File_Hidden=""
              File_Readonly=""
              File_Encrypted=""
              File_Compressed=""
              File_Archived=""
              File_Exists=""
              File_Content=""
              File_Size=""
              StopExecutionOnError="False"
              SelectedSourceType="Variable"
              SelectedVariableOrConnectionManager="OriginalFile" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Check if any updates to Excel file.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{5761A2D4-E95A-4172-83F3-87B05664B91C}"
          DTS:EvalOp="1"
          DTS:Expression="DATEDIFF( &quot;hour&quot;, @[User::LastWriteTime] , GETDATE()  ) &lt;= 24 ? TRUE : FALSE"
          DTS:From="Package\Check if any updates to Excel file\Get file properties"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Check if any updates to Excel file\Customer Region" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Import data from Live to DWH"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Import data from PROD_Live directly to DWH mapping"
      DTS:DTSID="{323f3a26-25ba-411c-9e88-6f081ec3eb2d}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import data from Live to DWH"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Import data from Live to DWH\ADO NET Source"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Consumes data from SQL Server, OLE DB, ODBC, or Oracle, using the corresponding .NET Framework data provider. Use a Transact-SQL statement to define the result set. For example, extract data from SQL Server with the .NET Framework data provider for SQL Server."
              name="ADO NET Source"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement used by the component to extract data."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">EXEC sp_DWH_ImportAccountstoCustomer</property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">30</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether to allow non-string external columns to be implicitly converted to strings at the output columns."
                  name="AllowImplicitStringConversion">true</property>
                <property
                  dataType="System.String"
                  description="The Source database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specify the mode to retrieve external column information"
                  name="AccessMode"
                  typeConverter="Microsoft.SqlServer.Dts.Pipeline.DataReaderSourceAdapter+EnumToStringConverter">2</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.DataReaderSourceAdapter</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import data from Live to DWH\ADO NET Source.Connections[IDbConnection]"
                  connectionManagerID="{33CC1FB3-144B-4210-A8A5-A7CDB65E4268}:external"
                  connectionManagerRefId="Project.ConnectionManagers[Management]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output]"
                  name="ADO NET Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[SalesManagerKey]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[SalesManagerKey]"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[SalesManagerKey]"
                      name="SalesManagerKey"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[CustomerCode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CustomerCode]"
                      length="10"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[CustomerCode]"
                      name="CustomerCode"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[CustomerName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CustomerName]"
                      length="40"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[CustomerName]"
                      name="CustomerName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[CustomerAddress]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CustomerAddress]"
                      length="160"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[CustomerAddress]"
                      name="CustomerAddress"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[CustomerTown]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CustomerTown]"
                      length="30"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[CustomerTown]"
                      name="CustomerTown"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[CustomerCounty]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CustomerCounty]"
                      length="30"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[CustomerCounty]"
                      name="CustomerCounty"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[CustomerPostcode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CustomerPostcode]"
                      length="12"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[CustomerPostcode]"
                      name="CustomerPostcode"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[CustomerCountryCode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CustomerCountryCode]"
                      length="4"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[CustomerCountryCode]"
                      name="CustomerCountryCode"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[PhoneNumber]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[PhoneNumber]"
                      length="20"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[PhoneNumber]"
                      name="PhoneNumber"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[ContactName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ContactName]"
                      length="30"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[ContactName]"
                      name="ContactName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[Email]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[Email]"
                      length="64"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[Email]"
                      name="Email"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[CreditLimit]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CreditLimit]"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[CreditLimit]"
                      name="CreditLimit"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[Terms]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[Terms]"
                      length="40"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[Terms]"
                      name="Terms"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[Column 13]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[Column 13]"
                      length="20"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[Column 13]"
                      name="Column 13"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[BuyingGroup]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[BuyingGroup]"
                      length="20"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[BuyingGroup]"
                      name="BuyingGroup"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[OnStopFlag]"
                      dataType="ui1"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[OnStopFlag]"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[OnStopFlag]"
                      name="OnStopFlag"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[PriceBook]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[PriceBook]"
                      length="20"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[PriceBook]"
                      name="PriceBook"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[SalesManagerKey]"
                      dataType="i4"
                      name="SalesManagerKey" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CustomerCode]"
                      dataType="wstr"
                      length="10"
                      name="CustomerCode" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CustomerName]"
                      dataType="wstr"
                      length="40"
                      name="CustomerName" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CustomerAddress]"
                      dataType="wstr"
                      length="160"
                      name="CustomerAddress" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CustomerTown]"
                      dataType="wstr"
                      length="30"
                      name="CustomerTown" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CustomerCounty]"
                      dataType="wstr"
                      length="30"
                      name="CustomerCounty" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CustomerPostcode]"
                      dataType="wstr"
                      length="12"
                      name="CustomerPostcode" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CustomerCountryCode]"
                      dataType="wstr"
                      length="4"
                      name="CustomerCountryCode" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[PhoneNumber]"
                      dataType="wstr"
                      length="20"
                      name="PhoneNumber" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[ContactName]"
                      dataType="wstr"
                      length="30"
                      name="ContactName" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[Email]"
                      dataType="wstr"
                      length="64"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[CreditLimit]"
                      dataType="r8"
                      name="CreditLimit" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[Terms]"
                      dataType="wstr"
                      length="40"
                      name="Terms" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[Column 13]"
                      dataType="wstr"
                      length="20"
                      name="Column 13" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[BuyingGroup]"
                      dataType="wstr"
                      length="20"
                      name="BuyingGroup" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[OnStopFlag]"
                      dataType="ui1"
                      name="OnStopFlag" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].ExternalColumns[PriceBook]"
                      dataType="wstr"
                      length="20"
                      name="PriceBook" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output]"
                  isErrorOut="true"
                  name="ADO NET Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[SalesManagerKey]"
                      dataType="i4"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[SalesManagerKey]"
                      name="SalesManagerKey" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CustomerCode]"
                      dataType="wstr"
                      length="10"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CustomerCode]"
                      name="CustomerCode" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CustomerName]"
                      dataType="wstr"
                      length="40"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CustomerName]"
                      name="CustomerName" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CustomerAddress]"
                      dataType="wstr"
                      length="160"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CustomerAddress]"
                      name="CustomerAddress" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CustomerTown]"
                      dataType="wstr"
                      length="30"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CustomerTown]"
                      name="CustomerTown" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CustomerCounty]"
                      dataType="wstr"
                      length="30"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CustomerCounty]"
                      name="CustomerCounty" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CustomerPostcode]"
                      dataType="wstr"
                      length="12"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CustomerPostcode]"
                      name="CustomerPostcode" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CustomerCountryCode]"
                      dataType="wstr"
                      length="4"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CustomerCountryCode]"
                      name="CustomerCountryCode" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[PhoneNumber]"
                      dataType="wstr"
                      length="20"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[PhoneNumber]"
                      name="PhoneNumber" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ContactName]"
                      dataType="wstr"
                      length="30"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ContactName]"
                      name="ContactName" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[Email]"
                      dataType="wstr"
                      length="64"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[Email]"
                      name="Email" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CreditLimit]"
                      dataType="r8"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[CreditLimit]"
                      name="CreditLimit" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[Terms]"
                      dataType="wstr"
                      length="40"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[Terms]"
                      name="Terms" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[Column 13]"
                      dataType="wstr"
                      length="20"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[Column 13]"
                      name="Column 13" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[BuyingGroup]"
                      dataType="wstr"
                      length="20"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[BuyingGroup]"
                      name="BuyingGroup" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[OnStopFlag]"
                      dataType="ui1"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[OnStopFlag]"
                      name="OnStopFlag" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[PriceBook]"
                      dataType="wstr"
                      length="20"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[PriceBook]"
                      name="PriceBook" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import data from Live to DWH\Error Log"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
              name="Error Log"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.String"
                  description="The Destination database table name."
                  expressionType="Notify"
                  name="TableOrViewName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">"dbo"."ErrorLog"</property>
                <property
                  dataType="System.Int32"
                  description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                  expressionType="Notify"
                  name="BatchSize">0</property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                  expressionType="Notify"
                  name="CommandTimeout">30</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                  expressionType="Notify"
                  name="UseBulkInsertWhenPossible">true</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ADONETDestination</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import data from Live to DWH\Error Log.Connections[IDbConnection]"
                  connectionManagerID="{33CC1FB3-144B-4210-A8A5-A7CDB65E4268}:external"
                  connectionManagerRefId="Project.ConnectionManagers[Management]"
                  description="Managed connection manager"
                  name="IDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import data from Live to DWH\Error Log.Inputs[ADO NET Destination Input]"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="ADO NET Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import data from Live to DWH\Error Log.Inputs[ADO NET Destination Input].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      externalMetadataColumnId="Package\Import data from Live to DWH\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorCode]"
                      lineageId="Package\Import data from Live to DWH\TF Upsert Destination.Outputs[Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Import data from Live to DWH\Error Log.Inputs[ADO NET Destination Input].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      externalMetadataColumnId="Package\Import data from Live to DWH\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorColumn]"
                      lineageId="Package\Import data from Live to DWH\TF Upsert Destination.Outputs[Error Output].Columns[ErrorColumn]" />
                    <inputColumn
                      refId="Package\Import data from Live to DWH\Error Log.Inputs[ADO NET Destination Input].Columns[ErrorDescription]"
                      cachedDataType="wstr"
                      cachedLength="1024"
                      cachedName="ErrorDescription"
                      externalMetadataColumnId="Package\Import data from Live to DWH\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorDescription]"
                      lineageId="Package\Import data from Live to DWH\TF Upsert Destination.Outputs[Error Output].Columns[ErrorDescription]" />
                    <inputColumn
                      refId="Package\Import data from Live to DWH\Error Log.Inputs[ADO NET Destination Input].Columns[CustomerCode]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="CustomerCode"
                      externalMetadataColumnId="Package\Import data from Live to DWH\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[OtherDetails]"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[CustomerCode]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorLogID]"
                      dataType="i4"
                      name="ErrorLogID" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorCode]"
                      dataType="wstr"
                      length="50"
                      name="ErrorCode" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorColumn]"
                      dataType="wstr"
                      length="250"
                      name="ErrorColumn" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorDescription]"
                      dataType="wstr"
                      length="1024"
                      name="ErrorDescription" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[OtherDetails]"
                      dataType="wstr"
                      length="2147483647"
                      name="OtherDetails" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\Error Log.Inputs[ADO NET Destination Input].ExternalColumns[ErrorDate]"
                      dataType="wstr"
                      length="50"
                      name="ErrorDate" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import data from Live to DWH\Error Log.Outputs[ADO NET Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="ADO NET Destination Error Output"
                  synchronousInputId="Package\Import data from Live to DWH\Error Log.Inputs[ADO NET Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import data from Live to DWH\Error Log.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import data from Live to DWH\Error Log.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\Error Log.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import data from Live to DWH\Error Log.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import data from Live to DWH\TF Upsert Destination"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Upsert Destinaton; Pragmatic Works, Inc; Task Factory (c) 2009 - 2016 Pragmatic Works, Inc; http://www.pragmaticworks.com;support@pragmaticworks.com"
              description="The Upsert Destination takes input data coming from the pipeline and then conditionally inserts, updates or deletes data from the destination."
              name="TF Upsert Destination"
              usesDispositions="true"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  expressionType="Notify"
                  name="DESTINATION_TABLE_NAME">[dbo].[DimCustomer]</property>
                <property
                  dataType="System.Boolean"
                  expressionType="Notify"
                  name="ENABLE_IDENTITY_INSERT">false</property>
                <property
                  dataType="System.String"
                  expressionType="Notify"
                  name="INSERT_ROWS_COUNT_VARIABLE">&lt;Select Variable&gt;</property>
                <property
                  dataType="System.String"
                  expressionType="Notify"
                  name="UPDATE_ROWS_COUNT_VARIABLE">&lt;Select Variable&gt;</property>
                <property
                  dataType="System.String"
                  expressionType="Notify"
                  name="COMMAND_TIMEOUT">0</property>
                <property
                  dataType="System.Int32"
                  expressionType="Notify"
                  name="UPDATE_METHOD"
                  typeConverter="PW.TaskFactory.Enums+UpsertUpdateMethod">1</property>
                <property
                  dataType="System.Boolean"
                  expressionType="Notify"
                  name="ACTION_UPDATE">true</property>
                <property
                  dataType="System.Boolean"
                  expressionType="Notify"
                  name="ACTION_INSERT">true</property>
                <property
                  dataType="System.String"
                  expressionType="Notify"
                  name="POST_UPDATE_COLUMN">ETLLastUpdatedDate</property>
                <property
                  dataType="System.Boolean"
                  expressionType="Notify"
                  name="TURN_OFF_INTERNAL_TRANSACTION">false</property>
                <property
                  dataType="System.String"
                  expressionType="Notify"
                  name="ROW_FLAG_COLUMN"></property>
                <property
                  dataType="System.String"
                  expressionType="Notify"
                  name="ROW_FLAG_COLUMN_INSERT_VALUE"></property>
                <property
                  dataType="System.String"
                  expressionType="Notify"
                  name="ROW_FLAG_COLUMN_DELETE_VALUE"></property>
                <property
                  dataType="System.String"
                  expressionType="Notify"
                  name="ROW_FLAG_COLUMN_REJECT_VALUE"></property>
                <property
                  dataType="System.String"
                  expressionType="Notify"
                  name="ROW_FLAG_COLUMN_UPDATE_VALUE"></property>
                <property
                  dataType="System.String"
                  expressionType="Notify"
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.Int32"
                  expressionType="Notify"
                  name="AccessMode"
                  typeConverter="PW.TaskFactory.Enums+UpsertAccessModeEnum">0</property>
                <property
                  dataType="System.Int32"
                  expressionType="Notify"
                  name="UPSERT_METHOD"
                  typeConverter="PW.TaskFactory.Enums+UpsertMethod">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates the Upsert destination will use a custom definition for it's temp table creation"
                  expressionType="Notify"
                  name="Use Custom Temp Table">false</property>
                <property
                  dataType="System.String"
                  description="Definition of the custom temp table script"
                  expressionType="Notify"
                  name="Custom Temp Table Definition"></property>
                <property
                  dataType="System.Boolean"
                  description="Use a merge statement for the insert and updates instead of two seperate insert and update statements"
                  expressionType="Notify"
                  name="Use Merge Statement">false</property>
                <property
                  dataType="System.String"
                  description="The script to run before each buffer is sent to the destination"
                  expressionType="Notify"
                  name="Before Script"></property>
                <property
                  dataType="System.String"
                  description="The script to run after each buffer is sent to the destination"
                  expressionType="Notify"
                  name="After Script"></property>
                <property
                  dataType="System.Boolean"
                  description="Set to true if you want the component to fail if the before script throws an exception."
                  expressionType="Notify"
                  name="Fail Component If Before Script Throws Exception">false</property>
                <property
                  dataType="System.Boolean"
                  description="Set to true if you want the component to fail if the after script throws an exception."
                  expressionType="Notify"
                  name="Fail Component If After Script Throws Exception">false</property>
                <property
                  dataType="System.String"
                  description="Allows you to set a table hint for the destination table (e.g. NOLOCK - SNAPSHOT)."
                  expressionType="Notify"
                  name="Table Hint"></property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">PW.TaskFactory.UpsertDestination</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import data from Live to DWH\TF Upsert Destination.Connections[DestinationConnection]"
                  connectionManagerID="{79D4C6B0-FA7C-445C-9C85-8B4167C1887B}:external"
                  connectionManagerRefId="Project.ConnectionManagers[Presentation]"
                  description="Connection for the destination"
                  name="DestinationConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input]"
                  errorOrTruncationOperation="Error or Truncation"
                  errorRowDisposition="RedirectRow"
                  hasSideEffects="true"
                  name="Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].Columns[CreditLimit]"
                      cachedDataType="r8"
                      cachedName="CreditLimit"
                      externalMetadataColumnId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[CreditLimit]"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[CreditLimit]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Mapped Column for Destination"
                          name="DestinationColumn">CreditLimit</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column A Key Column"
                          name="IsKeyColumn">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column An Identity Column"
                          name="IsIdentityColumn">false</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].Columns[Terms]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="Terms"
                      externalMetadataColumnId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[Terms]"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[Terms]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Mapped Column for Destination"
                          name="DestinationColumn">Terms</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column A Key Column"
                          name="IsKeyColumn">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column An Identity Column"
                          name="IsIdentityColumn">false</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].Columns[ContactName]"
                      cachedDataType="wstr"
                      cachedLength="30"
                      cachedName="ContactName"
                      externalMetadataColumnId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[ContactName]"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[ContactName]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Mapped Column for Destination"
                          name="DestinationColumn">ContactName</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column A Key Column"
                          name="IsKeyColumn">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column An Identity Column"
                          name="IsIdentityColumn">false</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].Columns[PhoneNumber]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="PhoneNumber"
                      externalMetadataColumnId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[PhoneNumber]"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[PhoneNumber]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Mapped Column for Destination"
                          name="DestinationColumn">PhoneNumber</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column A Key Column"
                          name="IsKeyColumn">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column An Identity Column"
                          name="IsIdentityColumn">false</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].Columns[SalesManagerKey]"
                      cachedDataType="i4"
                      cachedName="SalesManagerKey"
                      externalMetadataColumnId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[SalesManagerKey]"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[SalesManagerKey]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Mapped Column for Destination"
                          name="DestinationColumn">SalesManagerKey</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column A Key Column"
                          name="IsKeyColumn">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column An Identity Column"
                          name="IsIdentityColumn">false</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].Columns[CustomerCode]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="CustomerCode"
                      externalMetadataColumnId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[CustomerCode]"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[CustomerCode]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Mapped Column for Destination"
                          name="DestinationColumn">CustomerCode</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column A Key Column"
                          name="IsKeyColumn">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column An Identity Column"
                          name="IsIdentityColumn">false</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].Columns[CustomerName]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="CustomerName"
                      externalMetadataColumnId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[CustomerName]"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[CustomerName]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Mapped Column for Destination"
                          name="DestinationColumn">CustomerName</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column A Key Column"
                          name="IsKeyColumn">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column An Identity Column"
                          name="IsIdentityColumn">false</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].Columns[BuyingGroup]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="BuyingGroup"
                      externalMetadataColumnId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[BuyingGroup]"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[BuyingGroup]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Mapped Column for Destination"
                          name="DestinationColumn">BuyingGroup</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column A Key Column"
                          name="IsKeyColumn">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column An Identity Column"
                          name="IsIdentityColumn">false</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].Columns[OnStopFlag]"
                      cachedDataType="ui1"
                      cachedName="OnStopFlag"
                      externalMetadataColumnId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[OnStopFlag]"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[OnStopFlag]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Mapped Column for Destination"
                          name="DestinationColumn">OnStopFlag</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column A Key Column"
                          name="IsKeyColumn">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column An Identity Column"
                          name="IsIdentityColumn">false</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].Columns[PriceBook]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="PriceBook"
                      externalMetadataColumnId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[PriceBook]"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[PriceBook]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Mapped Column for Destination"
                          name="DestinationColumn">PriceBook</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column A Key Column"
                          name="IsKeyColumn">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column An Identity Column"
                          name="IsIdentityColumn">false</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].Columns[CustomerAddress]"
                      cachedDataType="wstr"
                      cachedLength="160"
                      cachedName="CustomerAddress"
                      externalMetadataColumnId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[CustomerAddress]"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[CustomerAddress]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Mapped Column for Destination"
                          name="DestinationColumn">CustomerAddress</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column A Key Column"
                          name="IsKeyColumn">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column An Identity Column"
                          name="IsIdentityColumn">false</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].Columns[CustomerTown]"
                      cachedDataType="wstr"
                      cachedLength="30"
                      cachedName="CustomerTown"
                      externalMetadataColumnId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[CustomerTown]"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[CustomerTown]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Mapped Column for Destination"
                          name="DestinationColumn">CustomerTown</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column A Key Column"
                          name="IsKeyColumn">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column An Identity Column"
                          name="IsIdentityColumn">false</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].Columns[CustomerCounty]"
                      cachedDataType="wstr"
                      cachedLength="30"
                      cachedName="CustomerCounty"
                      externalMetadataColumnId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[CustomerCounty]"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[CustomerCounty]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Mapped Column for Destination"
                          name="DestinationColumn">CustomerCounty</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column A Key Column"
                          name="IsKeyColumn">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column An Identity Column"
                          name="IsIdentityColumn">false</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].Columns[CustomerPostcode]"
                      cachedDataType="wstr"
                      cachedLength="12"
                      cachedName="CustomerPostcode"
                      externalMetadataColumnId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[CustomerPostcode]"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[CustomerPostcode]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Mapped Column for Destination"
                          name="DestinationColumn">CustomerPostcode</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column A Key Column"
                          name="IsKeyColumn">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column An Identity Column"
                          name="IsIdentityColumn">false</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].Columns[CustomerCountryCode]"
                      cachedDataType="wstr"
                      cachedLength="4"
                      cachedName="CustomerCountryCode"
                      externalMetadataColumnId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[CustomerCountryCode]"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[CustomerCountryCode]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Mapped Column for Destination"
                          name="DestinationColumn">CustomerCountryCode</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column A Key Column"
                          name="IsKeyColumn">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column An Identity Column"
                          name="IsIdentityColumn">false</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].Columns[Email]"
                      cachedDataType="wstr"
                      cachedLength="64"
                      cachedName="Email"
                      externalMetadataColumnId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[Email]"
                      lineageId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output].Columns[Email]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Mapped Column for Destination"
                          name="DestinationColumn">Email</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column A Key Column"
                          name="IsKeyColumn">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Is Column An Identity Column"
                          name="IsIdentityColumn">false</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[CustomerKey]"
                      dataType="i4"
                      name="CustomerKey" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[SalesManagerKey]"
                      dataType="i4"
                      name="SalesManagerKey" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[CustomerCode]"
                      dataType="wstr"
                      length="10"
                      name="CustomerCode" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[CustomerName]"
                      dataType="wstr"
                      length="40"
                      name="CustomerName" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[BuyingGroup]"
                      dataType="wstr"
                      length="20"
                      name="BuyingGroup" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[Classification]"
                      dataType="wstr"
                      length="100"
                      name="Classification" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[CreditLimit]"
                      dataType="r8"
                      name="CreditLimit" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[Merchandiser]"
                      dataType="wstr"
                      length="100"
                      name="Merchandiser" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[OnStopFlag]"
                      dataType="bool"
                      name="OnStopFlag" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[PriceBook]"
                      dataType="wstr"
                      length="20"
                      name="PriceBook" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[Region]"
                      dataType="wstr"
                      length="100"
                      name="Region" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[Terms]"
                      dataType="wstr"
                      length="40"
                      name="Terms" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[CustomerAddress]"
                      dataType="wstr"
                      length="160"
                      name="CustomerAddress" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[CustomerTown]"
                      dataType="wstr"
                      length="30"
                      name="CustomerTown" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[CustomerCounty]"
                      dataType="wstr"
                      length="30"
                      name="CustomerCounty" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[CustomerPostcode]"
                      dataType="wstr"
                      length="12"
                      name="CustomerPostcode" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[CustomerCountryCode]"
                      dataType="wstr"
                      length="4"
                      name="CustomerCountryCode" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[ContactName]"
                      dataType="wstr"
                      length="30"
                      name="ContactName" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[Email]"
                      dataType="wstr"
                      length="64"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[PhoneNumber]"
                      dataType="wstr"
                      length="20"
                      name="PhoneNumber" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[InvoiceAddress]"
                      dataType="wstr"
                      length="160"
                      name="InvoiceAddress" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[InvoiceTown]"
                      dataType="wstr"
                      length="30"
                      name="InvoiceTown" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[InvoiceCounty]"
                      dataType="wstr"
                      length="30"
                      name="InvoiceCounty" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[InvoicePostcode]"
                      dataType="wstr"
                      length="12"
                      name="InvoicePostcode" />
                    <externalMetadataColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input].ExternalColumns[InvoiceCountryCode]"
                      dataType="wstr"
                      length="4"
                      name="InvoiceCountryCode" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import data from Live to DWH\TF Upsert Destination.Outputs[Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Error Output"
                  synchronousInputId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Outputs[Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import data from Live to DWH\TF Upsert Destination.Outputs[Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Outputs[Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import data from Live to DWH\TF Upsert Destination.Outputs[Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Import data from Live to DWH\TF Upsert Destination.Outputs[Error Output].Columns[ErrorDescription]"
                      dataType="wstr"
                      length="1024"
                      lineageId="Package\Import data from Live to DWH\TF Upsert Destination.Outputs[Error Output].Columns[ErrorDescription]"
                      name="ErrorDescription" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Import data from Live to DWH.Paths[ADO NET Source Output]"
              endId="Package\Import data from Live to DWH\TF Upsert Destination.Inputs[Input]"
              name="ADO NET Source Output"
              startId="Package\Import data from Live to DWH\ADO NET Source.Outputs[ADO NET Source Output]" />
            <path
              refId="Package\Import data from Live to DWH.Paths[Error Output]"
              endId="Package\Import data from Live to DWH\Error Log.Inputs[ADO NET Destination Input]"
              name="Error Output"
              startId="Package\Import data from Live to DWH\TF Upsert Destination.Outputs[Error Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{F5B34F15-2198-4E87-9565-EA6A713875A2}"
      DTS:From="Package\Import data from Live to DWH"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Check if any updates to Excel file" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{19B00000-98D3-4FAA-9C88-B3B89F8E196A}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{8187D665-914F-4EFC-B231-98AF74177E86}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="181,42"
          Id="Package\Check if any updates to Excel file\Customer Region\Copy Excel to processed folder"
          TopLeft="5.50000000000001,107.5" />
        <NodeLayout
          Size="144,42"
          Id="Package\Check if any updates to Excel file\Customer Region\Export to CSV"
          TopLeft="24,5.5" />
        <EdgeLayout
          Id="Package\Check if any updates to Excel file\Customer Region.PrecedenceConstraints[Constraint]"
          TopLeft="96,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="192,205"
          Size="192,248"
          Id="Package\Check if any updates to Excel file\Customer Region"
          TopLeft="5.50000000000004,107.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\Check if any updates to Excel file\Get file properties"
          TopLeft="20,5.5" />
        <EdgeLayout
          Id="Package\Check if any updates to Excel file.PrecedenceConstraints[Constraint]"
          TopLeft="101.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,18.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="203,411"
          Size="203,454"
          Id="Package\Check if any updates to Excel file"
          TopLeft="15,107.5" />
        <NodeLayout
          Size="222,42"
          Id="Package\Import data from Live to DWH"
          TopLeft="5.5,5.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="116.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Check if any updates to Excel file\Customer Region\Export to CSV">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="181,42"
          Id="Package\Check if any updates to Excel file\Customer Region\Export to CSV\TF Upsert Destination"
          TopLeft="5.50000000000003,107.5" />
        <NodeLayout
          Size="123,42"
          Id="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log"
          TopLeft="34.5000000000001,209.5" />
        <NodeLayout
          Size="123,42"
          Id="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1"
          TopLeft="247.5,107.5" />
        <NodeLayout
          Size="139,42"
          Id="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Excel Source"
          TopLeft="239.5,5.5" />
        <EdgeLayout
          Id="Package\Check if any updates to Excel file\Customer Region\Export to CSV.Paths[Excel Source Output]"
          TopLeft="287.166666666667,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-191.166666666667,60"
              Start="0,0"
              End="-191.166666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4096728307255"
                    Point2="0,24.4096728307255"
                    Point3="-4,24.4096728307255" />
                  <mssgle:LineSegment
                    End="-187.166666666667,24.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="-187.166666666667,24.4096728307255"
                    Point2="-191.166666666667,24.4096728307255"
                    Point3="-191.166666666667,28.4096728307255" />
                  <mssgle:LineSegment
                    End="-191.166666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Check if any updates to Excel file\Customer Region\Export to CSV.Paths[Excel Source Error Output]"
          TopLeft="330.833333333333,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-21.8333333333333,60"
              Start="0,0"
              End="-21.8333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4096728307255"
                    Point2="0,24.4096728307255"
                    Point3="-4,24.4096728307255" />
                  <mssgle:LineSegment
                    End="-17.8333333333333,24.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="-17.8333333333333,24.4096728307255"
                    Point2="-21.8333333333333,24.4096728307255"
                    Point3="-21.8333333333333,28.4096728307255" />
                  <mssgle:LineSegment
                    End="-21.8333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-68.7680533854166,29.4096728307255,115.7027734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Check if any updates to Excel file\Customer Region\Export to CSV.Paths[Error Output]"
          TopLeft="96,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-28.33638671875,20.533203125,56.6727734375,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <DtsEventHandler
    design-time-name="Package\Check if any updates to Excel file\Customer Region\Export to CSV.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="150,42"
          Id="{E8A3C6C2-186E-4879-A247-C709C7A5FA3F}"
          TopLeft="604,213" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <PipelineComponentMetadata
    design-time-name="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Check if any updates to Excel file\Customer Region\Export to CSV\Error Log 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Import data from Live to DWH">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="123,42"
          Id="Package\Import data from Live to DWH\Error Log"
          TopLeft="34.5,209.5" />
        <NodeLayout
          Size="181,42"
          Id="Package\Import data from Live to DWH\TF Upsert Destination"
          TopLeft="5.50000000000003,107.5" />
        <NodeLayout
          Size="158,42"
          Id="Package\Import data from Live to DWH\ADO NET Source"
          TopLeft="17,5.5" />
        <EdgeLayout
          Id="Package\Import data from Live to DWH.Paths[Error Output]"
          TopLeft="96,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-28.33638671875,20.533203125,56.6727734375,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import data from Live to DWH.Paths[ADO NET Source Output]"
          TopLeft="96,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import data from Live to DWH\Error Log">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>