CREATE VIEW AA_NET_POP_DETAIL_TRAN_VIEW
/*
** Create the necessary information for a Dimensions.NET Purchase Order Detail Line
** Written:      
** Last Amended: 03/07/03 SRB;
**
*/
AS
SELECT
POD_ENTRY_TYPE,
POD_STATUS,
POD_STOCK_CODE, 
POD_PRICE_CODE,
(case when POD_ENTRY_TYPE in ('S','P')
then
	case when POD_ENTRY_TYPE ='S'
		then
			STKNAME
		else
			PRNAME
		end
else
	''
end) AS ITEMDESCRIPTION,
(case when POD_GROSS_MEMO <> 0
then
	1
else
	0
end) as GROSSENTRYMODE,
(case when coalesce(charindex(upper('Delivery Charge'),upper(POD_DETAIL)),0) > 0
then
	1
else
	0
end) as DELIVERYLINE,
POD_SERIALNO,
POD_LOCATN,
dbo.AA_QUANTITY_DPS_F(POD_QTYORD) as POD_QTYORD,
POD_QTYUNIT,
(case when POD_GROSS_MEMO <> 0
then
	dbo.AA_PRICE_DPS_F(POD_GROSS_MEMO)
else
	dbo.AA_PRICE_DPS_F(POD_UNITCST)
end) as UNITCOST,
(case when POD_GROSS_MEMO <> 0
then
	dbo.AA_PRICE_DPS_F(POD_UNITCST)
else
	dbo.AA_PRICE_DPS_F(0)
end) as NETUNITCOST,
dbo.AA_PRICE_DPS_F(POD_UNITCST_C) as POD_UNITCST_C,
-- work out the home price value 
(case when POD_GROSS_MEMO <> 0
then
	dbo.AA_PRICE_DPS_F(dbo.AA_QUANTITY_DPS_F(POD_QTYORD) * dbo.AA_PRICE_DPS_F(POD_GROSS_MEMO))
else
	dbo.AA_PRICE_DPS_F(dbo.AA_QUANTITY_DPS_F(POD_QTYORD) * dbo.AA_PRICE_DPS_F(POD_UNITCST))
end) as PRICE,
--work out theh currency price
dbo.AA_PRICE_DPS_F(POD_QTYORD * POD_UNITCST_C) as CURRENCY_PRICE,
dbo.AA_PRICE_DPS_F(POD_NETT) as POD_NETT,
dbo.AA_PRICE_DPS_F(POD_NETT_C) as POD_NETT_C,
(case when POD_VATCODE in ('A','R')
then
	dbo.AA_PRICE_DPS_F(POD_ACQ_TAX)
else
	dbo.AA_PRICE_DPS_F(POD_VATAMNT)
end) as POD_VATAMNT,
dbo.AA_PRICE_DPS_F(POD_TAX_C) as POD_TAX_C,
dbo.AA_PRICE_DPS_F(POD_GROSS) as POD_GROSS,
dbo.AA_PRICE_DPS_F(POD_GROSS_C) as POD_GROSS_C,
POD_ANALYSIS,
POD_DETAIL,
POD_VATCODE,
VAT_RATE,
dbo.AA_PRICE_DPS_F(POD_LINEDISC) as POD_LINEDISC,
dbo.AA_PRICE_DPS_F(POD_L_DISCVAL) as POD_L_DISCVAL,
dbo.AA_PRICE_DPS_F(POD_T_DISCVAL) as POD_T_DISCVAL,
dbo.AA_PRICE_DPS_F(POD_L_DISCVAL_C) as POD_L_DISCVAL_C,
POD_COSTHEADER,
CH_NAME,
POD_COSTCENTRE,
CC_NAME,
POD_REQDATE,
(case when POD_TABLECODE is null then 1 else CAST(SUBSTRING(POD_TABLECODE,2,2) as varchar) end) as POD_TABLECODE,
--OD_WORK_STATUS,
--OD_WORK_NOTE,
POD_DIMENSION1,
POD_DIMENSION2,
POD_DIMENSION3,
STK_PHYSICAL,
PANAME,
PA_FORCE_COSTING,
POD_SERIALTRACK,
(case when POD_ENTRY_TYPE = 'S'
then
	STK_MULTILOCATN
else
	0
end) AS SUBANALYSISITEM,
POD_USRCHAR1, 
POD_USRCHAR2, 
POD_USRCHAR3, 
POD_USRCHAR4, 
POD_USRFLAG1, 
POD_USRFLAG2, 
POD_USRDATE1, 
POD_USRDATE2, 
POD_USRNUM1, 
POD_USRNUM2,
POD_ORDER_NO,
POD_PRIMARY

FROM
POP_DETAIL
JOIN SYS_VATCONTROL ON POP_DETAIL.POD_VATCODE = SYS_VATCONTROL.VAT_CODE
JOIN PL_ANALYSIS ON POP_DETAIL.POD_ANALYSIS = PL_ANALYSIS.PACODE
LEFT OUTER JOIN POP_DETAIL2 ON POP_DETAIL.POD_PRIMARY = POP_DETAIL2.POD_PRIMARY_2
LEFT OUTER JOIN PRC_PRICE_RECS ON COALESCE(POP_DETAIL.POD_PRICE_CODE,'') = PRC_PRICE_RECS.PRCODE
LEFT OUTER JOIN STK_STOCK ON COALESCE(POP_DETAIL.POD_STOCK_CODE,'') = STK_STOCK.STKCODE
LEFT OUTER JOIN CST_COSTCENTRE ON COALESCE(CONVERT(char(10),POP_DETAIL.POD_COSTHEADER) + convert(varchar,POP_DETAIL.POD_COSTCENTRE),'') = CST_COSTCENTRE.CC_CONCAT_CODES
LEFT OUTER JOIN CST_COSTHEADER ON COALESCE(POP_DETAIL.POD_COSTHEADER,'') = CST_COSTHEADER.CH_CODE
