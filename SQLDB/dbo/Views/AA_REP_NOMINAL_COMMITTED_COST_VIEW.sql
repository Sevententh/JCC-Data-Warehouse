CREATE VIEW AA_REP_NOMINAL_COMMITTED_COST_VIEW
/*
** Written:     09/11/2005 RV   
** Last Amended: 
** Comments: returns yearly turnover, committed cost and latest budget totals for crystal reports
*/
AS
SELECT     
NL_ACCOUNTS.NCODE, 
NL_ACCOUNTS.NNAME, 

NL_ACCOUNTS.NCURRENCYCODE,
Isnull (NL_ACCOUNTS.NCATEGORYCODE1,'') AS NCATEGORYCODE1,
Isnull (NL_ACCOUNTS.NCATEGORYCODE2,'') AS NCATEGORYCODE2,
Isnull (NL_ACCOUNTS.NCATEGORYCODE3,'') AS NCATEGORYCODE3,
Isnull (NL_ACCOUNTS.NCATEGORYCODE4,'') AS NCATEGORYCODE4,
Isnull (NL_ACCOUNTS.NCATEGORYCODE5,'') AS NCATEGORYCODE5,
Isnull (NL_ACCOUNTS.NCATEGORYCODE6,'') AS NCATEGORYCODE6,
Isnull (NL_ACCOUNTS.NCATEGORYCODE7,'') AS NCATEGORYCODE7,
Isnull (NL_ACCOUNTS.NCATEGORYCODE8,'') AS NCATEGORYCODE8,
NL_ACCOUNTS.NMAJORHEADCODE,

NL_ACCOUNTS.NTURNOVER_L1 + NL_ACCOUNTS.NTURNOVER_L2 + NL_ACCOUNTS.NTURNOVER_L3 + NL_ACCOUNTS.NTURNOVER_L4 + 
NL_ACCOUNTS.NTURNOVER_L5 + NL_ACCOUNTS.NTURNOVER_L6 + NL_ACCOUNTS.NTURNOVER_L7 + NL_ACCOUNTS.NTURNOVER_L8 +
NL_ACCOUNTS.NTURNOVER_L9 + NL_ACCOUNTS.NTURNOVER_L10 + NL_ACCOUNTS.NTURNOVER_L11 + NL_ACCOUNTS.NTURNOVER_L12 + 
NL_ACCOUNTS.NTURNOVER_L13 As TURNOVER_LAST_YR,

NL_ACCOUNTS.NTURNOVER_C1 + NL_ACCOUNTS.NTURNOVER_C2 + NL_ACCOUNTS.NTURNOVER_C3 + NL_ACCOUNTS.NTURNOVER_C4 + 
NL_ACCOUNTS.NTURNOVER_C5 + NL_ACCOUNTS.NTURNOVER_C6 + NL_ACCOUNTS.NTURNOVER_C7 + NL_ACCOUNTS.NTURNOVER_C8 + 
NL_ACCOUNTS.NTURNOVER_C9 + NL_ACCOUNTS.NTURNOVER_C10 + NL_ACCOUNTS.NTURNOVER_C11 + NL_ACCOUNTS.NTURNOVER_C12 + 
NL_ACCOUNTS.NTURNOVER_C13 As TURNOVER_CURRENT_YR, 

NL_ACCOUNTS.NTURNOVER_N1 + NL_ACCOUNTS.NTURNOVER_N2 + NL_ACCOUNTS.NTURNOVER_N3 + NL_ACCOUNTS.NTURNOVER_N4 + 
NL_ACCOUNTS.NTURNOVER_N5 + NL_ACCOUNTS.NTURNOVER_N6 + NL_ACCOUNTS.NTURNOVER_N7 + NL_ACCOUNTS.NTURNOVER_N8 +  
NL_ACCOUNTS.NTURNOVER_N9 + NL_ACCOUNTS.NTURNOVER_N10 + NL_ACCOUNTS.NTURNOVER_N11 + NL_ACCOUNTS.NTURNOVER_N12 +  
NL_ACCOUNTS.NTURNOVER_N13 As TURNOVER_NEXT_YR,

NL_ACCOUNTS2.N_LEVEL,
                      
AA_REP_NOMINAL_BUDGETS_VIEW.REVISION,

AA_REP_NOMINAL_BUDGETS_VIEW.BUD_L1 + AA_REP_NOMINAL_BUDGETS_VIEW.BUD_L2 + AA_REP_NOMINAL_BUDGETS_VIEW.BUD_L3 +  
AA_REP_NOMINAL_BUDGETS_VIEW.BUD_L4 + AA_REP_NOMINAL_BUDGETS_VIEW.BUD_L5 + AA_REP_NOMINAL_BUDGETS_VIEW.BUD_L6 + 
AA_REP_NOMINAL_BUDGETS_VIEW.BUD_L7 + AA_REP_NOMINAL_BUDGETS_VIEW.BUD_L8 + AA_REP_NOMINAL_BUDGETS_VIEW.BUD_L9 +  
AA_REP_NOMINAL_BUDGETS_VIEW.BUD_L10 + AA_REP_NOMINAL_BUDGETS_VIEW.BUD_L11 + AA_REP_NOMINAL_BUDGETS_VIEW.BUD_L12 + 
AA_REP_NOMINAL_BUDGETS_VIEW.BUD_L13 As BUDGETS_LAST_YR,

AA_REP_NOMINAL_BUDGETS_VIEW.BUD_C1 + AA_REP_NOMINAL_BUDGETS_VIEW.BUD_C2 + AA_REP_NOMINAL_BUDGETS_VIEW.BUD_C3 +  
AA_REP_NOMINAL_BUDGETS_VIEW.BUD_C4 + AA_REP_NOMINAL_BUDGETS_VIEW.BUD_C5 + AA_REP_NOMINAL_BUDGETS_VIEW.BUD_C6 +  
AA_REP_NOMINAL_BUDGETS_VIEW.BUD_C7 + AA_REP_NOMINAL_BUDGETS_VIEW.BUD_C8 + AA_REP_NOMINAL_BUDGETS_VIEW.BUD_C9 +  
AA_REP_NOMINAL_BUDGETS_VIEW.BUD_C10 + AA_REP_NOMINAL_BUDGETS_VIEW.BUD_C11 + AA_REP_NOMINAL_BUDGETS_VIEW.BUD_C12 +  
AA_REP_NOMINAL_BUDGETS_VIEW.BUD_C13 AS BUDGETS_CURRENT_YR,

AA_REP_NOMINAL_BUDGETS_VIEW.BUD_N1 + AA_REP_NOMINAL_BUDGETS_VIEW.BUD_N2 + AA_REP_NOMINAL_BUDGETS_VIEW.BUD_N3 +  
AA_REP_NOMINAL_BUDGETS_VIEW.BUD_N4 + AA_REP_NOMINAL_BUDGETS_VIEW.BUD_N5 + AA_REP_NOMINAL_BUDGETS_VIEW.BUD_N6 +  
AA_REP_NOMINAL_BUDGETS_VIEW.BUD_N7 + AA_REP_NOMINAL_BUDGETS_VIEW.BUD_N8 + AA_REP_NOMINAL_BUDGETS_VIEW.BUD_N9 +
AA_REP_NOMINAL_BUDGETS_VIEW.BUD_N10 + AA_REP_NOMINAL_BUDGETS_VIEW.BUD_N11 + AA_REP_NOMINAL_BUDGETS_VIEW.BUD_N12 + 
AA_REP_NOMINAL_BUDGETS_VIEW.BUD_N13 AS BUDGETS_NEXT_YR, 

isnull(COMMITTED_COST_L_YR,0) AS COMMITTED_COST_L_YR,
isnull(COMMITTED_COST_C_YR,0) AS COMMITTED_COST_C_YR,
isnull(COMMITTED_COST_N_YR,0) AS COMMITTED_COST_N_YR,

isnull( M.MAX_REVISION, 0 ) as MAX_REVISION

FROM NL_ACCOUNTS 
	
   	LEFT OUTER JOIN AA_REP_NOMINAL_BUDGETS_VIEW 
	ON NL_ACCOUNTS.NCODE = AA_REP_NOMINAL_BUDGETS_VIEW.NOMINAL

	INNER JOIN NL_ACCOUNTS2 
	ON NL_ACCOUNTS.N_PRIMARY = NL_ACCOUNTS2.N_PRIMARY_2

	left join ( select B_ACCOUNT_CODE, max( B_REVISION_NUMBER ) as MAX_REVISION -- Obtain maximum revision number for account
						from SYS_BUDGETS
						where B_RECORD_TYPE = 'N' and B_BUDGET_TYPE = 'B'
						group by B_ACCOUNT_CODE
					) M on M.B_ACCOUNT_CODE = NL_ACCOUNTS.NCODE

	LEFT JOIN ( select NLC_YEAR, NLC_CODE, sum(NLC_BUDGET) AS COMMITTED_COST_L_YR
						From NL_COMMITTED_BUDGETS L
						Where NLC_YEAR = 'L'
						Group by NLC_YEAR, NLC_CODE
		    )  L ON L.NLC_CODE = NL_ACCOUNTS.NCODE 


	LEFT JOIN ( select NLC_YEAR, NLC_CODE, sum(NLC_BUDGET) AS COMMITTED_COST_C_YR
						From NL_COMMITTED_BUDGETS C
						Where NLC_YEAR = 'C'
						Group by NLC_YEAR, NLC_CODE
		    )  C ON C.NLC_CODE = NL_ACCOUNTS.NCODE 

	LEFT JOIN ( select NLC_YEAR, NLC_CODE, sum(NLC_BUDGET) AS COMMITTED_COST_N_YR
						From NL_COMMITTED_BUDGETS N
						Where NLC_YEAR = 'N'
						Group by NLC_YEAR, NLC_CODE
		    )  N ON N.NLC_CODE = NL_ACCOUNTS.NCODE 



WHERE NL_ACCOUNTS.NCODE IS NOT NULL AND NL_ACCOUNTS.NCODE <> '' And NL_ACCOUNTS.NMAJORHEADCODE in (2,4,5,6)