CREATE VIEW AA_IH_EDT_STOCK_RECS_VIEW
/*
** Written:       1/1/2006 RQ
** Last Amended:  
*/
AS
select 
STKCODE,
STKNAME, 
STK_MULTILOCATN, 
STK_SERIALTRACK,
case when STK_ASSEMBLY = 'A' then  1 else 0 end as ASSEMBLY,
case when STK_ASSEMBLY = 'C' then 1 else 0 end as COMPONENT,
STK_ALTERNATIVE_FLAG, 
STK_LINK_FLAG
STK_TEMPLATE, 
STK_RTP_FLAG, 
STK_SORT_KEY, 
STK_SORT_KEY1, 
STK_SORT_KEY2,
STK_SORT_KEY3, 
STK_MIN_QTY,
STK_MAX_QTY, 
STK_BIN_NUMBER, 
STK_PHYSICAL, 
STK_QTYPRINTED, 
STK_ORDER_IN, 
STK_RESERVE_OUT,
STK_BACK_ORDER_QTY,
dbo.AA_IH_EDT_FREE_STOCK_CALC_F (STK_PHYSICAL ,STK_RESERVE_OUT , STK_BACK_ORDER_QTY, STK_ORDER_IN, STK_QTYPRINTED) AS STOCKFREE,
STK_AV_VALU,
STK_FIFO_VALU,
case STK_USR_VALUATN 
   when 'F' then STK_FIFO_VALU 
   when 'A' then STK_AV_VALU 
   when 'W' then 0 
   else (isnull(STK_PHYSICAL,0) + isnull(STK_QTYPRINTED,0))* (isnull(STK_COSTPRICE,0)/
      --Needed to stop a divide by zero
            case STK_BUY_UNIT1 when 0 then 1 else isnull(STK_BUY_UNIT1,0) end) 
end AS VALUATION,
STK_NOTES,
STK_OLDCODE,
STK_DATE_PUTIN,
STK_DATE_EDITED,
STK_LEVEL,
PIC_PATHNAME,
STK_P_WEIGHT,
STK_P_WGHT_NAME,
STK_S_WEIGHT,
STK_S_WGHT_NAME,
STK_BASEPRICE,
STK_COSTPRICE,
STK_STNDRD_COST,
STK_WWW_PUBLISH,
STK_SPECIAL_PRICE_DATE,
STK_EC_KILOS,
STK_EC_ORIGIN,
STK_EC_COM_CODE,
STK_EC_SUP_UNIT,
STK_USRCHAR1,
STK_USRCHAR2,
STK_USRCHAR5,
STK_USRCHAR6,
STK_USRCHAR7,
STK_USRCHAR8,
STK_USRDATE1,
STK_USRDATE2,
STK_USRDATE3,
STK_USRFLAG1,
STK_USRFLAG2,
STK_USRFLAG3,
STK_USRNUM1,
STK_USRNUM2,
STK_USRNUM3,
STK_PRIMARY,
STK_USED,
case NOMINAL_PERIOD 
   when 1 then STK_MOVEOUT_C1
   when 2 then STK_MOVEOUT_C1+STK_MOVEOUT_C2
   when 3 then STK_MOVEOUT_C1+STK_MOVEOUT_C2+STK_MOVEOUT_C3
   when 4 then STK_MOVEOUT_C1+STK_MOVEOUT_C2+STK_MOVEOUT_C3+STK_MOVEOUT_C4
   when 5 then STK_MOVEOUT_C1+STK_MOVEOUT_C2+STK_MOVEOUT_C3+STK_MOVEOUT_C4+STK_MOVEOUT_C5
   when 6 then STK_MOVEOUT_C1+STK_MOVEOUT_C2+STK_MOVEOUT_C3+STK_MOVEOUT_C4+STK_MOVEOUT_C5+STK_MOVEOUT_C6
   when 7 then STK_MOVEOUT_C1+STK_MOVEOUT_C2+STK_MOVEOUT_C3+STK_MOVEOUT_C4+STK_MOVEOUT_C5+STK_MOVEOUT_C6+STK_MOVEOUT_C7
   when 8 then STK_MOVEOUT_C1+STK_MOVEOUT_C2+STK_MOVEOUT_C3+STK_MOVEOUT_C4+STK_MOVEOUT_C5+STK_MOVEOUT_C6+STK_MOVEOUT_C7+STK_MOVEOUT_C8
   when 9 then STK_MOVEOUT_C1+STK_MOVEOUT_C2+STK_MOVEOUT_C3+STK_MOVEOUT_C4+STK_MOVEOUT_C5+STK_MOVEOUT_C6+STK_MOVEOUT_C7+STK_MOVEOUT_C8+STK_MOVEOUT_C9
   when 10 then STK_MOVEOUT_C1+STK_MOVEOUT_C2+STK_MOVEOUT_C3+STK_MOVEOUT_C4+STK_MOVEOUT_C5+STK_MOVEOUT_C6+STK_MOVEOUT_C7+STK_MOVEOUT_C8+STK_MOVEOUT_C9+STK_MOVEOUT_C10
   when 11 then STK_MOVEOUT_C1+STK_MOVEOUT_C2+STK_MOVEOUT_C3+STK_MOVEOUT_C4+STK_MOVEOUT_C5+STK_MOVEOUT_C6+STK_MOVEOUT_C7+STK_MOVEOUT_C8+STK_MOVEOUT_C9+STK_MOVEOUT_C10+STK_MOVEOUT_C11
   when 12 then STK_MOVEOUT_C1+STK_MOVEOUT_C2+STK_MOVEOUT_C3+STK_MOVEOUT_C4+STK_MOVEOUT_C5+STK_MOVEOUT_C6+STK_MOVEOUT_C7+STK_MOVEOUT_C8+STK_MOVEOUT_C9+STK_MOVEOUT_C10+STK_MOVEOUT_C11+STK_MOVEOUT_C12
   when 13 then STK_MOVEOUT_C1+STK_MOVEOUT_C2+STK_MOVEOUT_C3+STK_MOVEOUT_C4+STK_MOVEOUT_C5+STK_MOVEOUT_C6+STK_MOVEOUT_C7+STK_MOVEOUT_C8+STK_MOVEOUT_C9+STK_MOVEOUT_C10+STK_MOVEOUT_C11+STK_MOVEOUT_C12+STK_MOVEOUT_C13
end AS QTYOUTYTD
from STK_STOCK 
   JOIN SYS_DATAINFO2 
      ON SYS_PRIMARY_2=1
   left outer join STK_STOCK3 
      on STK_STOCK.STK_PRIMARY = STK_STOCK3.STK_PRIMARY_3
   left outer join STK_PICTURE
      on STK_STOCK.STKCODE = STK_PICTURE.PIC_STK_CODE
   inner join stk_stock_2 
      on STK_PRIMARY = STK_PRIMARY_2
   join sys_datainfo 
      on SYS_PRIMARY=1

