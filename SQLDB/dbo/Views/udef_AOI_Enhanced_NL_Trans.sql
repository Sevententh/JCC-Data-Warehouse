CREATE VIEW [dbo].[udef_AOI_Enhanced_NL_Trans]
as

 --Written by David Emmerson 16th Dec 2016
 --This View brings together 4 separate elements from various sources, utilising CTE where possible
 --This view replicates the functionality of AA_NOMINAL_TRAN_VIEW using a single CTE query where the source table is to SL_PL_NL_DETAIL
 --It includes additional information to create an all-encompassing view for clients at a nominal transaction level
 --If any fields are missing, they are easy to include.

 --CTE Views used in multiple sections

with	
--nominal accounts
nom_accts (NCODE, NNAME, NMAJORHEADCODE,
NCATEGORYCODE1, NCATEGORYCODE2, NCATEGORYCODE3, NCATEGORYCODE4, 
NCATEGORYCODE5, NCATEGORYCODE6, NCATEGORYCODE7, NCATEGORYCODE8
)
as
(Select NCODE, NNAME, NMAJORHEADCODE,
NCATEGORYCODE1, NCATEGORYCODE2, NCATEGORYCODE3, NCATEGORYCODE4, 
NCATEGORYCODE5, NCATEGORYCODE6, NCATEGORYCODE7, NCATEGORYCODE8
FROM dbo.NL_ACCOUNTS with (nolock)
) 
,
--major headings
mh (MH_CODE, MH_NAME
)
as
(SELECT NL_MAJORCODE, NL_MAJORNAME
from dbo.NL_MAJORHEADING with (nolock)
)
,
--nominal category1
ncat1 (NL_CAT_CODE1, NL_CATEGORYNAME, NL_SHORTNAME)
as (SELECT NL_CAT_CODE1, NL_CATEGORYNAME, NL_SHORTNAME
FROM dbo.NL_CATEGORY with (nolock)
WHERE (NL_CAT_CODE1 <> '999999' AND NL_CAT_CODE1 <> '™'))
,
--nominal category2
ncat2 (NL_CAT_CODE2, NL_CATEGORYNAME, NL_SHORTNAME)
as (SELECT NL_CAT_CODE2, NL_CATEGORYNAME, NL_SHORTNAME
FROM dbo.NL_CATEGORY with (nolock)
WHERE (NL_CAT_CODE2 <> '999999' AND NL_CAT_CODE2 <> '™'))
,
--nominal category3
ncat3 (NL_CAT_CODE3, NL_CATEGORYNAME, NL_SHORTNAME)
as (SELECT NL_CAT_CODE3, NL_CATEGORYNAME, NL_SHORTNAME
FROM dbo.NL_CATEGORY with (nolock)
WHERE (NL_CAT_CODE3 <> '999999' AND NL_CAT_CODE3 <> '™'))
,
--nominal category4
ncat4 (NL_CAT_CODE4, NL_CATEGORYNAME, NL_SHORTNAME)
as (SELECT NL_CAT_CODE4, NL_CATEGORYNAME, NL_SHORTNAME
FROM dbo.NL_CATEGORY with (nolock)
WHERE (NL_CAT_CODE4 <> '999999' AND NL_CAT_CODE4 <> '™'))
,
--nominal category5
ncat5 (NL_CAT_CODE5, NL_CATEGORYNAME, NL_SHORTNAME)
as (SELECT NL_CAT_CODE5, NL_CATEGORYNAME, NL_SHORTNAME
FROM dbo.NL_CATEGORY with (nolock)
WHERE (NL_CAT_CODE5 <> '999999' AND NL_CAT_CODE5 <> '™'))
,
--nominal category6
ncat6 (NL_CAT_CODE6, NL_CATEGORYNAME, NL_SHORTNAME)
as (SELECT NL_CAT_CODE6, NL_CATEGORYNAME, NL_SHORTNAME
FROM dbo.NL_CATEGORY with (nolock)
WHERE (NL_CAT_CODE6 <> '999999' AND NL_CAT_CODE6 <> '™'))
,
--nominal category7
ncat7 (NL_CAT_CODE7, NL_CATEGORYNAME, NL_SHORTNAME)
as (SELECT NL_CAT_CODE7, NL_CATEGORYNAME, NL_SHORTNAME
FROM dbo.NL_CATEGORY with (nolock)
WHERE (NL_CAT_CODE7 <> '999999' AND NL_CAT_CODE7 <> '™'))
,
--nominal category8
ncat8 (NL_CAT_CODE8, NL_CATEGORYNAME, NL_SHORTNAME)
as (SELECT NL_CAT_CODE8, NL_CATEGORYNAME, NL_SHORTNAME
FROM dbo.NL_CATEGORY with (nolock)
WHERE (NL_CAT_CODE8 <> '999999' AND NL_CAT_CODE8 <> '™'))
,
--customers
customers (CUCODE, CUNAME, CUSORT, CUUSER1, CUUSER2, CUUSER3)
as (SELECT CUCODE, CUNAME, CUSORT, CUUSER1, CUUSER2, CUUSER3
FROM dbo.SL_ACCOUNTS with (nolock)
)
,
--suppliers
suppliers (SUCODE, SUNAME, SUSORT, SUUSER1, SUUSER2, SUUSER3)
as (SELECT SUCODE, SUNAME, SUSORT, SUUSER1, SUUSER2, SUUSER3
FROM dbo.PL_ACCOUNTS with (nolock)
)
,
--sales transaction headers
sl_trans (ST_HEADER_KEY, ST_DESCRIPTION, ST_USER1, ST_USER2, ST_USER3
)
as (SELECT ST_HEADER_KEY, ST_DESCRIPTION, ST_USER1, ST_USER2, ST_USER3
FROM dbo.SL_TRANSACTIONS with (nolock)
)
,
--purchase transaction headers
pl_trans (PT_HEADER_KEY, PT_DESCRIPTION, PT_USER1, PT_USER2, PT_USER3
)
as (SELECT PT_HEADER_KEY, PT_DESCRIPTION, PT_USER1, PT_USER2, PT_USER3
FROM dbo.PL_TRANSACTIONS with (nolock)
)
,
--nominal transaction headers
nl_trans (NT_HEADER_KEY, NT_DESCRIPTION
)
as (SELECT NT_HEADER_KEY, NT_DESCRIPTION
FROM dbo.NL_TRANSACTIONS with (nolock)
)
,
--purchase orders
po_order_no (POH_ORDER_NUMBR, POD_PRIMARY, POD_DETAIL, POH_USER_PUTIN, POH_DATE_PUTIN, POH_DESCRIPTION, POH_ORDER_REF
)
as (SELECT POH_ORDER_NUMBR, POD_PRIMARY, POD_DETAIL, POH_USER_PUTIN, POH_DATE_PUTIN, POH_DESCRIPTION, POH_ORDER_REF
FROM dbo.POP_DETAIL with (nolock)
inner join dbo.POP_HEADER with (nolock) on POD_ORDER_NO = POH_ORDER_NUMBR
)
,
--sales orders
so_order_no (OH_ORDER_NUMBER, OD_PRIMARY, OD_DETAIL, OH_USER_PUTIN, OH_DATE_PUTIN, OH_DESCRIPTION, OH_ORDER_REF
)
as (SELECT OH_ORDER_NUMBER, OD_PRIMARY, OD_DETAIL, OH_USER_PUTIN, OH_DATE_PUTIN, OH_DESCRIPTION, OH_ORDER_REF
FROM dbo.ORD_DETAIL with (nolock)
inner join dbo.ORD_HEADER with (nolock) on OD_ORDER_NUMBER = OH_ORDER_NUMBER
)
,
--projects
projects (CH_CODE, CH_NAME, CH_ACCOUNT, CH_SORT,
CH_USER1, CH_USER2, CH_USER3, CH_USER4, CH_USER5, CH_USER6,
CH_DATE_USER1, CH_DATE_USER2, CH_DATE_USER3
)
as (SELECT CH_CODE, CH_NAME, isnull(CH_ACCOUNT,'') as CH_ACCOUNT, isnull(CH_SORT,'') as CH_SORT,
isnull(CH_USER1,'') as CH_USER1, isnull(CH_USER2,'') as CH_USER2, isnull(CH_USER3,'') as CH_USER3, 
isnull(CH_USER4,'') as CH_USER4, isnull(CH_USER5,'') as CH_USER5, isnull(CH_USER6,'') as CH_USER6,
isnull(CH_DATE_USER1,0) as CH_DATE_USER1, isnull(CH_DATE_USER2,0) as CH_DATE_USER2, isnull(CH_DATE_USER3,0) as CH_DATE_USER3
FROM dbo.CST_COSTHEADER with (nolock)
)
,
--project centres
centres (CC_CODE, CC_NAME, CC_SORT, CC_USER_SUBTOT, CC_COPYHEADER
)
as (SELECT CC_CODE, CC_NAME, isnull(CC_SORT,'') as CC_SORT, CC_USER_SUBTOT, CC_COPYHEADER 
FROM dbo.CST_COSTCENTRE with (nolock)
)
,
--year label
sysyear (YEAR_PRIMARY, YEAR_LABEL
)
as (SELECT YEAR_PRIMARY, YEAR_LABEL
FROM dbo.SYS_YEAR with (nolock)
)
,
--price records
price (PRCODE, PRNAME, PR_SORT_KEY, PR_SORT_KEY1, PR_SORT_KEY2, PR_SORT_KEY3, PR_SORT_KEY4, PR_SORT_KEY5, PR_SORT_KEY6, PR_DATE_USER1,  PR_DATE_USER2, PR_DATE_USER3
)
as (SELECT PRCODE, PRNAME, PR_SORT_KEY, PR_SORT_KEY1, PR_SORT_KEY2, PR_SORT_KEY3, PR_SORT_KEY4, PR_SORT_KEY5, PR_SORT_KEY6, PR_DATE_USER1,  PR_DATE_USER2, PR_DATE_USER3
FROM dbo.PRC_PRICE_RECS with (nolock)
)
,
--stock records
stock (STKCODE, STKNAME, STK_SORT_KEY, STK_SORT_KEY1, STK_SORT_KEY2, STK_SORT_KEY3
)
as (SELECT STKCODE, STKNAME, STK_SORT_KEY, STK_SORT_KEY1, STK_SORT_KEY2, STK_SORT_KEY3
FROM dbo.STK_STOCK with (nolock)
)
,
--Vat return references
vat (TAXAUDIT_PRIMARY, TAXAUDIT_DATE, TAXAUDIT_REF
)
as (SELECT TAXAUDIT_PRIMARY, TAXAUDIT_DATE, TAXAUDIT_REF
FROM dbo.SYS_TAX_AUDIT with (nolock)
)

-- TRANSACTIONS SECTION 1:  Nominal Transactions
-- Replicate View NOM_DET_DEBIT_LEVEL2
,		
DebitL2
(
DET_LEDGER, DET_NOM_YEAR_LINK, 
DET_BATCH_REF,DET_SUB_LEDGER,DET_DATE,DET_NOM_PERSORT,DET_HEADER_REF,DET_CURR_CODE,DET_HEADER_KEY,DET_BATCH_FLAG,
DET_RECUR_FLAG,DET_CURR_RATE,DET_JNL_LINEREF,DET_ORIGIN,DET_TYPE,DET_NOM_PERIOD,DET_NOM_YEAR,DET_USER_PUTIN,
DET_DATE_PUTIN,DET_VAT_RULES,DET_NOMINALDR,DET_NOMINALCR,DET_NOMINALVAT,DET_ACCOUNT,DET_ANALYSIS,DET_COSTCENTRE,
DET_COSTHEADER,DET_GROSS,DET_VAT,DET_NETT,DET_CURR_TAX,DET_CURR_NETT,DET_ANALTYPE,DET_CHEQUE_PAYEE,
DET_TRI_RATE1,DET_TRI_RATE2,DET_DESCRIPTION,DET_NETT_BASE2,DET_VAT_BASE2,DET_GROSS_BASE2,DET_RECON_REF,DET_PL_INTERNAL,
DET_TRI_RATECHNG1,DET_TRI_RATECHNG2,DET_CURR_RTEFLG,DET_HEADER_REF2,DET_ORDER_LINK,DET_RECONCILED,DET_STOCK_CODE,DET_PRICE_CODE,
HOME_TEMP_VALUE,CURRENCY_TEMP_VALUE,BASE2_TEMP_VALUE,DET_PRIMARY,NOMINAL_CODE,DET_QUANTITY,DET_DIMENSION1,DET_DIMENSION2,DET_DIMENSION3,
-- Dims 2.51e onwards DET_DIMENSION4,DET_DIMENSION5,
DET_ARCHIVE_FLG,DET_VATCODE,DET_VAT_RETURN_PRIMARY)
as 
(select 
DET_LEDGER, DET_NOM_YEAR_LINK,
DET_BATCH_REF,DET_SUB_LEDGER,DET_DATE,DET_NOM_PERSORT,DET_HEADER_REF,DET_CURR_CODE,DET_HEADER_KEY,DET_BATCH_FLAG,
DET_RECUR_FLAG,DET_CURR_RATE,DET_JNL_LINEREF,DET_ORIGIN,DET_TYPE,DET_NOM_PERIOD,DET_NOM_YEAR,DET_USER_PUTIN,
DET_DATE_PUTIN,DET_VAT_RULES,DET_NOMINALDR,DET_NOMINALCR,DET_NOMINALVAT,DET_ACCOUNT,DET_ANALYSIS,DET_COSTCENTRE,
DET_COSTHEADER,DET_GROSS,DET_VAT,DET_NETT,DET_CURR_TAX,DET_CURR_NETT,DET_ANALTYPE,DET_CHEQUE_PAYEE,
DET_TRI_RATE1,DET_TRI_RATE2,DET_DESCRIPTION,DET_NETT_BASE2,DET_VAT_BASE2,DET_GROSS_BASE2,DET_RECON_REF,DET_PL_INTERNAL,
DET_TRI_RATECHNG1,DET_TRI_RATECHNG2,DET_CURR_RTEFLG,DET_HEADER_REF2,DET_ORDER_LINK,DET_RECONCILED,DET_STOCK_CODE,DET_PRICE_CODE,
(case substring(DET_HEADER_KEY,1,1)
	when 'S' then
		case
		when DET_TYPE in ('CRN','MCR','VCR')
		then
			-DET_GROSS
		else
			case
			when DET_ANALTYPE = 'S'
			then
				case
				when DET_TYPE in ('JCR','ACR')
				then
					-DET_GROSS
				else
					DET_GROSS
				end
			else
				case
				when DET_TYPE in ('ADR','JDR')
				then
					-DET_GROSS
				else
					DET_GROSS
				end
			end
		end
	when 'P' then
		case
		when DET_TYPE in ('CRN','MCR','VCR')
		then
			-DET_NETT
		else
			case
			when DET_ANALTYPE = 'P'
			then
				case
				when DET_TYPE in ('JDR','ADR')
				then
					-DET_NETT
				else
					DET_NETT
				end
			else
				case
				when DET_TYPE in ('ACR','JCR')
				then
					-DET_NETT
				else
					DET_NETT
				end
			end
		end
	else
	case 
	when DET_NOMINALVAT = '' then DET_NETT
	when DET_NOMINALVAT is null then DET_NETT
	else
	0
	end
end),
(CASE substring(DET_HEADER_KEY,1,1)
	when 'S' then
		case
		when DET_TYPE in ('CRN','MCR','VCR')
		then
			-(DET_CURR_NETT+DET_CURR_TAX)
		else
			case
			when DET_ANALTYPE = 'S'
			then
				case
				when DET_TYPE in ('JCR','ACR')
				then
					-(DET_CURR_NETT+DET_CURR_TAX)
				else
					(DET_CURR_NETT+DET_CURR_TAX)
				end
			else
				case
				when DET_TYPE in ('ADR','JDR')
				then
					-(DET_CURR_NETT+DET_CURR_TAX)
				else
					(DET_CURR_NETT+DET_CURR_TAX)
				end
			end
		end
	when 'P' then
		case
		when DET_TYPE in ('CRN','MCR','VCR')
		then
			-DET_CURR_NETT
		else
			case
			when DET_ANALTYPE = 'P'
			then
				case
				when DET_TYPE in ('JDR','ADR')
				then
					-DET_CURR_NETT
				else
					DET_CURR_NETT
				end
			else
				case
				when DET_TYPE in ('ACR','JCR')
				then
					-DET_CURR_NETT
				else
					DET_CURR_NETT
				end
			end
		end
	else
	case 
	when DET_NOMINALVAT = '' then DET_CURR_NETT
	when DET_NOMINALVAT is null then DET_CURR_NETT
	else
	0
	end
end),
(CASE substring(DET_HEADER_KEY,1,1)
	when 'S' then
		case
		when DET_TYPE in ('CRN','MCR','VCR')
		then
			-DET_GROSS_BASE2
		else
			case
			when DET_ANALTYPE = 'S'
			then
				case
				when DET_TYPE in ('JCR','ACR')
				then
					-DET_GROSS_BASE2
				else
					DET_GROSS_BASE2
				end
			else
				case
				when DET_TYPE in ('ADR','JDR')
				then
					-DET_GROSS_BASE2
				else
					DET_GROSS_BASE2
				end
			end
		end
	when 'P' then
		case
		when DET_TYPE in ('CRN','MCR','VCR')
		then
			-DET_NETT_BASE2
		else
			case
			when DET_ANALTYPE = 'P'
			then
				case
				when DET_TYPE in ('JDR','ADR')
				then
					-DET_NETT_BASE2
				else
					DET_NETT_BASE2
				end
			else
				case
				when DET_TYPE in ('ACR','JCR')
				then
					-DET_NETT_BASE2
				else
					DET_NETT_BASE2
				end
			end
		end
	else
	case 
	when DET_NOMINALVAT = '' then DET_NETT_BASE2
	when DET_NOMINALVAT is null then DET_NETT_BASE2
	else
	0
	end
end),DET_PRIMARY,DET_NOMINALDR,DET_QUANTITY,DET_DIMENSION1,DET_DIMENSION2,DET_DIMENSION3,
-- Dims 251e onwards DET_DIMENSION4,DET_DIMENSION5,
DET_ARCHIVE_FLG,DET_VATCODE,DET_VAT_RETURN_PRIMARY 
from SL_PL_NL_DETAIL with (nolock)
--with (index (DET_NOMINALDR))
where DET_TYPE not in('MIN','MCR','MAD','MAC','MPA')
)
,
-- Replicate View NOM_DET_DEBIT_LEVEL1
DebitL1
(
DET_LEDGER, DET_NOM_YEAR_LINK,
DET_BATCH_REF,DET_SUB_LEDGER,DET_DATE,DET_NOM_PERSORT,DET_HEADER_REF,DET_CURR_CODE,DET_HEADER_KEY,DET_BATCH_FLAG,
DET_RECUR_FLAG,DET_CURR_RATE,DET_JNL_LINEREF,DET_ORIGIN,DET_TYPE,DET_NOM_PERIOD,DET_NOM_YEAR,DET_USER_PUTIN,
DET_DATE_PUTIN,DET_VAT_RULES,DET_NOMINALDR,DET_NOMINALCR,DET_NOMINALVAT,DET_ACCOUNT,DET_ANALYSIS,DET_COSTCENTRE,
DET_COSTHEADER,DET_GROSS,DET_VAT,DET_NETT,DET_CURR_TAX,DET_CURR_NETT,DET_ANALTYPE,DET_CHEQUE_PAYEE,
DET_TRI_RATE1,DET_TRI_RATE2,DET_DESCRIPTION,DET_NETT_BASE2,DET_VAT_BASE2,DET_GROSS_BASE2,DET_RECON_REF,DET_PL_INTERNAL,
DET_TRI_RATECHNG1,DET_TRI_RATECHNG2,DET_CURR_RTEFLG,DET_HEADER_REF2,DET_ORDER_LINK,DET_RECONCILED,DET_STOCK_CODE,DET_PRICE_CODE,
HOME_DEBIT_VALUE,CURRENCY_DEBIT_VALUE,BASE2_DEBIT_VALUE,HOME_CREDIT_VALUE,CURRENCY_CREDIT_VALUE,
BASE2_CREDIT_VALUE,TRANS_PRIMARY,NOMINAL_CODE,NOMINAL_TYPE,DET_QUANTITY,DET_DIMENSION1,DET_DIMENSION2,DET_DIMENSION3,
-- Dims 2.51e onwards DET_DIMENSION4,DET_DIMENSION5,
DET_ARCHIVE_FLG,DET_VATCODE,DET_VAT_RETURN_PRIMARY)
as 
(select 
DET_LEDGER, DET_NOM_YEAR_LINK,
DET_BATCH_REF,DET_SUB_LEDGER,DET_DATE,DET_NOM_PERSORT,DET_HEADER_REF,DET_CURR_CODE,DET_HEADER_KEY,DET_BATCH_FLAG,
DET_RECUR_FLAG,DET_CURR_RATE,DET_JNL_LINEREF,DET_ORIGIN,DET_TYPE,DET_NOM_PERIOD,DET_NOM_YEAR,DET_USER_PUTIN,
DET_DATE_PUTIN,DET_VAT_RULES,DET_NOMINALDR,DET_NOMINALCR,DET_NOMINALVAT,DET_ACCOUNT,DET_ANALYSIS,DET_COSTCENTRE,
DET_COSTHEADER,DET_GROSS,DET_VAT,DET_NETT,DET_CURR_TAX,DET_CURR_NETT,DET_ANALTYPE,DET_CHEQUE_PAYEE,
DET_TRI_RATE1,DET_TRI_RATE2,DET_DESCRIPTION,DET_NETT_BASE2,DET_VAT_BASE2,DET_GROSS_BASE2,DET_RECON_REF,DET_PL_INTERNAL,
DET_TRI_RATECHNG1,DET_TRI_RATECHNG2,DET_CURR_RTEFLG,DET_HEADER_REF2,DET_ORDER_LINK,DET_RECONCILED,DET_STOCK_CODE,DET_PRICE_CODE,
(case when HOME_TEMP_VALUE > 0 then HOME_TEMP_VALUE else 0 end),
(case when CURRENCY_TEMP_VALUE > 0 then CURRENCY_TEMP_VALUE else 0 end),
(case when BASE2_TEMP_VALUE > 0 then BASE2_TEMP_VALUE else 0 end),
(case when HOME_TEMP_VALUE > 0 then 0 else -HOME_TEMP_VALUE end),
(case when CURRENCY_TEMP_VALUE > 0 then 0 else -CURRENCY_TEMP_VALUE end),
(case when BASE2_TEMP_VALUE > 0 then 0 else -BASE2_TEMP_VALUE end)
,DET_PRIMARY,NOMINAL_CODE,0,DET_QUANTITY,DET_DIMENSION1,DET_DIMENSION2,DET_DIMENSION3,
-- Dims 2.51e onwards DET_DIMENSION4,DET_DIMENSION5,
DET_ARCHIVE_FLG,DET_VATCODE,DET_VAT_RETURN_PRIMARY
from DebitL2 
)
,
-- Replicate View NOM_DET_CREDIT_LEVEL2
CreditL2
(
DET_LEDGER, DET_NOM_YEAR_LINK,
DET_BATCH_REF,DET_SUB_LEDGER,DET_DATE,DET_NOM_PERSORT,DET_HEADER_REF,DET_CURR_CODE,DET_HEADER_KEY,DET_BATCH_FLAG,
DET_RECUR_FLAG,DET_CURR_RATE,DET_JNL_LINEREF,DET_ORIGIN,DET_TYPE,DET_NOM_PERIOD,DET_NOM_YEAR,DET_USER_PUTIN,
DET_DATE_PUTIN,DET_VAT_RULES,DET_NOMINALDR,DET_NOMINALCR,DET_NOMINALVAT,DET_ACCOUNT,DET_ANALYSIS,DET_COSTCENTRE,
DET_COSTHEADER,DET_GROSS,DET_VAT,DET_NETT,DET_CURR_TAX,DET_CURR_NETT,DET_ANALTYPE,DET_CHEQUE_PAYEE,
DET_TRI_RATE1,DET_TRI_RATE2,DET_DESCRIPTION,DET_NETT_BASE2,DET_VAT_BASE2,DET_GROSS_BASE2,DET_RECON_REF,DET_PL_INTERNAL,
DET_TRI_RATECHNG1,DET_TRI_RATECHNG2,DET_CURR_RTEFLG,DET_HEADER_REF2,DET_ORDER_LINK,DET_RECONCILED,DET_STOCK_CODE,DET_PRICE_CODE,
HOME_TEMP_VALUE,CURRENCY_TEMP_VALUE,BASE2_TEMP_VALUE,DET_PRIMARY,NOMINAL_CODE,DET_QUANTITY,DET_DIMENSION1,DET_DIMENSION2,DET_DIMENSION3,
-- Dims 2.51e onwards DET_DIMENSION4,DET_DIMENSION5,
DET_ARCHIVE_FLG,DET_VATCODE,DET_VAT_RETURN_PRIMARY)
as 
(select 
DET_LEDGER, DET_NOM_YEAR_LINK,
DET_BATCH_REF,DET_SUB_LEDGER,DET_DATE,DET_NOM_PERSORT,DET_HEADER_REF,DET_CURR_CODE,DET_HEADER_KEY,DET_BATCH_FLAG,
DET_RECUR_FLAG,DET_CURR_RATE,DET_JNL_LINEREF,DET_ORIGIN,DET_TYPE,DET_NOM_PERIOD,DET_NOM_YEAR,DET_USER_PUTIN,
DET_DATE_PUTIN,DET_VAT_RULES,DET_NOMINALDR,DET_NOMINALCR,DET_NOMINALVAT,DET_ACCOUNT,DET_ANALYSIS,DET_COSTCENTRE,
DET_COSTHEADER,DET_GROSS,DET_VAT,DET_NETT,DET_CURR_TAX,DET_CURR_NETT,DET_ANALTYPE,DET_CHEQUE_PAYEE,
DET_TRI_RATE1,DET_TRI_RATE2,DET_DESCRIPTION,DET_NETT_BASE2,DET_VAT_BASE2,DET_GROSS_BASE2,DET_RECON_REF,DET_PL_INTERNAL,
DET_TRI_RATECHNG1,DET_TRI_RATECHNG2,DET_CURR_RTEFLG,DET_HEADER_REF2,DET_ORDER_LINK,DET_RECONCILED,DET_STOCK_CODE,DET_PRICE_CODE,
(case substring(DET_HEADER_KEY,1,1)
	when 'S' then
		case
		when DET_TYPE in ('INV','MIN','VIN','PAY')
		then
			-DET_NETT
		else
			case
			when DET_ANALTYPE = 'S'
			then
				case
				when DET_TYPE in ('ADR','JDR')
				then
					-DET_NETT
				else
					DET_NETT
				end
			else
				case
				when DET_TYPE in ('ACR','JCR')
				then
					-DET_NETT
				else
					DET_NETT
				end
			end
		end
	when 'P' then
		case
		when DET_TYPE in ('INV','MIN','VIN','PAY')
		then
			-DET_GROSS
		else
			case
			when DET_ANALTYPE = 'P'
			then
				case
				when DET_TYPE in ('ACR','JCR')
				then
					-DET_GROSS
				else
					DET_GROSS
				end
			else
				case
				when DET_TYPE in ('ADR','JDR')
				then
					-DET_GROSS
				else
					DET_GROSS
				end
			end
		end
	else
	case 
	when DET_NOMINALVAT = '' then -DET_NETT
	when DET_NOMINALVAT is null then -DET_NETT
	else
	0
	end
end),
(case substring(DET_HEADER_KEY,1,1)
	when 'S' then
		case
		when DET_TYPE in ('INV','MIN','VIN','PAY')
		then
			-DET_CURR_NETT
		else
			case
			when DET_ANALTYPE = 'S'
			then
				case
				when DET_TYPE in ('ADR','JDR')
				then
					-DET_CURR_NETT
				else
					DET_CURR_NETT
				end
			else
				case
				when DET_TYPE in ('ACR','JCR')
				then
					-DET_CURR_NETT
				else
					DET_CURR_NETT
				end
			end
		end
	when 'P' then
			case
			when DET_TYPE in ('INV','MIN','VIN','PAY')
			then
				-(DET_CURR_NETT+DET_CURR_TAX)
			else
				case
				when DET_ANALTYPE = 'P'
				then
					case
					when DET_TYPE in ('ACR','JCR')
					then
						-(DET_CURR_NETT+DET_CURR_TAX)
					else
						(DET_CURR_NETT+DET_CURR_TAX)
					end
				else
					case
					when DET_TYPE in ('ADR','JDR')
					then
						-(DET_CURR_NETT+DET_CURR_TAX)
					else
						(DET_CURR_NETT+DET_CURR_TAX)
					end
				end
			end
	else
	case 
	when DET_NOMINALVAT = '' then -DET_CURR_NETT
	when DET_NOMINALVAT is null then -DET_CURR_NETT
	else
	0
	end
end),
(case substring(DET_HEADER_KEY,1,1)
	when 'S' then
			case
			when DET_TYPE in ('INV','MIN','VIN','PAY')
			then
				-DET_NETT_BASE2
			else
				case
				when DET_ANALTYPE = 'S'
				then
					case
					when DET_TYPE in ('ADR','JDR')
					then
						-DET_NETT_BASE2
					else
						DET_NETT_BASE2
					end
				else
					case
					when DET_TYPE in ('ACR','JCR')
					then
						-DET_NETT_BASE2
					else
						DET_NETT_BASE2
					end
				end
			end
	when 'P' then
			case
			when DET_TYPE in ('INV','MIN','VIN','PAY')
			then
				-DET_GROSS_BASE2
			else
				case
				when DET_ANALTYPE = 'P'
				then
					case
					when DET_TYPE in ('ACR','JCR')
					then
						-DET_GROSS_BASE2
					else
						DET_GROSS_BASE2
					end
				else
					case
					when DET_TYPE in ('ADR','JDR')
					then
						-DET_GROSS_BASE2
					else
						DET_GROSS_BASE2
					end
				end
			end
	else
	case 
	when DET_NOMINALVAT = '' then -DET_NETT_BASE2
	when DET_NOMINALVAT is null then -DET_NETT_BASE2
	else
	0
	end
end)
,DET_PRIMARY,DET_NOMINALCR,DET_QUANTITY,DET_DIMENSION1,DET_DIMENSION2,DET_DIMENSION3,
-- Dims 2.51e onwards DET_DIMENSION4,DET_DIMENSION5,
DET_ARCHIVE_FLG,DET_VATCODE,DET_VAT_RETURN_PRIMARY
from SL_PL_NL_DETAIL with (nolock) 
--with (index (DET_NOMINALCR))
where DET_TYPE not in('MIN','MCR','MAD','MAC','MPA')
)
,
-- Replicate View NOM_DET_CREDIT_LEVEL1
CreditL1
(
DET_LEDGER, DET_NOM_YEAR_LINK,
DET_BATCH_REF,DET_SUB_LEDGER,DET_DATE,DET_NOM_PERSORT,DET_HEADER_REF,DET_CURR_CODE,DET_HEADER_KEY,DET_BATCH_FLAG,
DET_RECUR_FLAG,DET_CURR_RATE,DET_JNL_LINEREF,DET_ORIGIN,DET_TYPE,DET_NOM_PERIOD,DET_NOM_YEAR,DET_USER_PUTIN,
DET_DATE_PUTIN,DET_VAT_RULES,DET_NOMINALDR,DET_NOMINALCR,DET_NOMINALVAT,DET_ACCOUNT,DET_ANALYSIS,DET_COSTCENTRE,
DET_COSTHEADER,DET_GROSS,DET_VAT,DET_NETT,DET_CURR_TAX,DET_CURR_NETT,DET_ANALTYPE,DET_CHEQUE_PAYEE,
DET_TRI_RATE1,DET_TRI_RATE2,DET_DESCRIPTION,DET_NETT_BASE2,DET_VAT_BASE2,DET_GROSS_BASE2,DET_RECON_REF,DET_PL_INTERNAL,
DET_TRI_RATECHNG1,DET_TRI_RATECHNG2,DET_CURR_RTEFLG,DET_HEADER_REF2,DET_ORDER_LINK,DET_RECONCILED,DET_STOCK_CODE,DET_PRICE_CODE,
HOME_DEBIT_VALUE,CURRENCY_DEBIT_VALUE,BASE2_DEBIT_VALUE,HOME_CREDIT_VALUE,CURRENCY_CREDIT_VALUE,
BASE2_CREDIT_VALUE,TRANS_PRIMARY,NOMINAL_CODE,NOMINAL_TYPE,DET_QUANTITY,DET_DIMENSION1,DET_DIMENSION2,DET_DIMENSION3,
-- Dims 2.51e onwards DET_DIMENSION4,DET_DIMENSION5,
DET_ARCHIVE_FLG,DET_VATCODE,DET_VAT_RETURN_PRIMARY)
as 
(select 
DET_LEDGER, DET_NOM_YEAR_LINK,
DET_BATCH_REF,DET_SUB_LEDGER,DET_DATE,DET_NOM_PERSORT,DET_HEADER_REF,DET_CURR_CODE,DET_HEADER_KEY,DET_BATCH_FLAG,
DET_RECUR_FLAG,DET_CURR_RATE,DET_JNL_LINEREF,DET_ORIGIN,DET_TYPE,DET_NOM_PERIOD,DET_NOM_YEAR,DET_USER_PUTIN,
DET_DATE_PUTIN,DET_VAT_RULES,DET_NOMINALDR,DET_NOMINALCR,DET_NOMINALVAT,DET_ACCOUNT,DET_ANALYSIS,DET_COSTCENTRE,
DET_COSTHEADER,DET_GROSS,DET_VAT,DET_NETT,DET_CURR_TAX,DET_CURR_NETT,DET_ANALTYPE,DET_CHEQUE_PAYEE,
DET_TRI_RATE1,DET_TRI_RATE2,DET_DESCRIPTION,DET_NETT_BASE2,DET_VAT_BASE2,DET_GROSS_BASE2,DET_RECON_REF,DET_PL_INTERNAL,
DET_TRI_RATECHNG1,DET_TRI_RATECHNG2,DET_CURR_RTEFLG,DET_HEADER_REF2,DET_ORDER_LINK,DET_RECONCILED,DET_STOCK_CODE,DET_PRICE_CODE,
(case when HOME_TEMP_VALUE > 0 then HOME_TEMP_VALUE else 0 end),
(case when CURRENCY_TEMP_VALUE > 0 then CURRENCY_TEMP_VALUE else 0 end),
(case when BASE2_TEMP_VALUE > 0 then BASE2_TEMP_VALUE else 0 end),
(case when HOME_TEMP_VALUE > 0 then 0 else -HOME_TEMP_VALUE end),
(case when CURRENCY_TEMP_VALUE > 0 then 0 else -CURRENCY_TEMP_VALUE end),
(case when BASE2_TEMP_VALUE > 0 then 0 else -BASE2_TEMP_VALUE end)
,DET_PRIMARY,NOMINAL_CODE,1,DET_QUANTITY,DET_DIMENSION1,DET_DIMENSION2,DET_DIMENSION3,
-- Dims 2.51e onwards DET_DIMENSION4,DET_DIMENSION5,
DET_ARCHIVE_FLG,DET_VATCODE,DET_VAT_RETURN_PRIMARY
from CreditL2
)
,
-- Replicate View NOM_DET_VAT_LEVEL2
VatL2
(
DET_LEDGER, DET_NOM_YEAR_LINK,
DET_BATCH_REF,DET_SUB_LEDGER,DET_DATE,DET_NOM_PERSORT,DET_HEADER_REF,DET_CURR_CODE,DET_HEADER_KEY,DET_BATCH_FLAG,
DET_RECUR_FLAG,DET_CURR_RATE,DET_JNL_LINEREF,DET_ORIGIN,DET_TYPE,DET_NOM_PERIOD,DET_NOM_YEAR,DET_USER_PUTIN,
DET_DATE_PUTIN,DET_VAT_RULES,DET_NOMINALDR,DET_NOMINALCR,DET_NOMINALVAT,DET_ACCOUNT,DET_ANALYSIS,DET_COSTCENTRE,
DET_COSTHEADER,DET_GROSS,DET_VAT,DET_NETT,DET_CURR_TAX,DET_CURR_NETT,DET_ANALTYPE,DET_CHEQUE_PAYEE,
DET_TRI_RATE1,DET_TRI_RATE2,DET_DESCRIPTION,DET_NETT_BASE2,DET_VAT_BASE2,DET_GROSS_BASE2,DET_RECON_REF,DET_PL_INTERNAL,
DET_TRI_RATECHNG1,DET_TRI_RATECHNG2,DET_CURR_RTEFLG,DET_HEADER_REF2,DET_ORDER_LINK,DET_RECONCILED,DET_STOCK_CODE,DET_PRICE_CODE,
HOME_TEMP_VALUE,CURRENCY_TEMP_VALUE,BASE2_TEMP_VALUE,DET_PRIMARY,NOMINAL_CODE,DET_QUANTITY,DET_DIMENSION1,DET_DIMENSION2,DET_DIMENSION3,
-- Dims 2.51e onwards DET_DIMENSION4,DET_DIMENSION5,
DET_ARCHIVE_FLG,DET_VATCODE,DET_VAT_RETURN_PRIMARY
)
as 
(select 
DET_LEDGER, DET_NOM_YEAR_LINK,
DET_BATCH_REF,DET_SUB_LEDGER,DET_DATE,DET_NOM_PERSORT,DET_HEADER_REF,DET_CURR_CODE,DET_HEADER_KEY,DET_BATCH_FLAG,
DET_RECUR_FLAG,DET_CURR_RATE,DET_JNL_LINEREF,DET_ORIGIN,DET_TYPE,DET_NOM_PERIOD,DET_NOM_YEAR,DET_USER_PUTIN,
DET_DATE_PUTIN,DET_VAT_RULES,DET_NOMINALDR,DET_NOMINALCR,DET_NOMINALVAT,DET_ACCOUNT,DET_ANALYSIS,DET_COSTCENTRE,
DET_COSTHEADER,DET_GROSS,DET_VAT,DET_NETT,DET_CURR_TAX,DET_CURR_NETT,DET_ANALTYPE,DET_CHEQUE_PAYEE,
DET_TRI_RATE1,DET_TRI_RATE2,DET_DESCRIPTION,DET_NETT_BASE2,DET_VAT_BASE2,DET_GROSS_BASE2,DET_RECON_REF,DET_PL_INTERNAL,
DET_TRI_RATECHNG1,DET_TRI_RATECHNG2,DET_CURR_RTEFLG,DET_HEADER_REF2,DET_ORDER_LINK,DET_RECONCILED,DET_STOCK_CODE,DET_PRICE_CODE,
(case substring(DET_HEADER_KEY,1,1)
   when 'S' then
      case
      when DET_VAT_RULES = 1 then 0
      else
         case
         when DET_TYPE in ('INV','MIN','VIN','PAY')
         then
            -DET_VAT
         else
            case
            when DET_ANALTYPE = 'S'
            then
               case
               when DET_TYPE in ('ADR','JDR')
               then
                  -DET_VAT
               else
                  DET_VAT
               end
            else
               case
               when DET_TYPE in ('ACR','JCR')
               then
                  -DET_VAT
               else
                  DET_VAT
               end
            end
         end
      end
   when 'P' then
      case
      when DET_VAT_RULES = 1 then 0
      else
         case
         when DET_TYPE in ('CRN','MCR','VCR')
         then
            -DET_VAT + (DET_VAT * (100/100))
         else
            case
            when DET_ANALTYPE = 'P'
            then
               case
               when DET_TYPE in ('JDR','ADR')
               then
                  -DET_VAT
               else
                  DET_VAT - (DET_VAT * (100/100))
               end
            else
               case
               when DET_TYPE in ('ACR','JCR')
               then
                  -DET_VAT
               else
                  DET_VAT
               end
            end
         end
      end
   else
   case 
   when DET_NOMINALDR = '' then -DET_VAT
   when DET_NOMINALDR is null then -DET_VAT
   else
   DET_VAT
   end
end),
(case substring(DET_HEADER_KEY,1,1)
   when 'S' then
      case
      when DET_VAT_RULES = 1 then 0
      else
         case
         when DET_TYPE in ('INV','MIN','VIN','PAY')
         then
            -DET_CURR_TAX
         else
            case
            when DET_ANALTYPE = 'S'
            then
               case
               when DET_TYPE in ('ADR','JDR')
               then
                  -DET_CURR_TAX
               else
                  DET_CURR_TAX
               end
            else
               case
               when DET_TYPE in ('ACR','JCR')
               then
                  -DET_CURR_TAX
               else
                  DET_CURR_TAX
               end
            end
         end
      end
   when 'P' then
      case
      when DET_VAT_RULES = 1 then 0
      else
         case
         when DET_TYPE in ('CRN','MCR','VCR')
         then
            -DET_CURR_TAX + (DET_CURR_TAX * (100/100))
         else
            case
            when DET_ANALTYPE = 'P'
            then
               case
               when DET_TYPE in ('JDR','ADR')
               then
                  -DET_CURR_TAX
               else
                  DET_CURR_TAX - (DET_CURR_TAX * (100/100))
               end
            else
               case
               when DET_TYPE in ('ACR','JCR')
               then
                  -DET_CURR_TAX
               else
                  DET_CURR_TAX
               end
            end
         end
      end
   else
   case 
   when DET_NOMINALDR = '' then -DET_CURR_TAX
   when DET_NOMINALDR is null then -DET_CURR_TAX
   else
   DET_CURR_TAX
   end
end),
(case substring(DET_HEADER_KEY,1,1)
   when 'S' then
      case
      when DET_VAT_RULES = 1 then 0
      else
         case
         when DET_TYPE in ('INV','MIN','VIN','PAY')
         then
            -DET_VAT_BASE2
         else
            case
            when DET_ANALTYPE = 'S'
            then
               case
               when DET_TYPE in ('ADR','JDR')
               then
                  -DET_VAT_BASE2
               else
                  DET_VAT_BASE2
               end
            else
               case
               when DET_TYPE in ('ACR','JCR')
               then
                  -DET_VAT_BASE2
               else
                  DET_VAT_BASE2
               end
            end
         end
      end
   when 'P' then
      case
      when DET_VAT_RULES = 1 then 0
      else
         case
         when DET_TYPE in ('CRN','MCR','VCR')
         then
            -DET_VAT_BASE2 + (DET_VAT_BASE2 * (100/100))
         else
            case
            when DET_ANALTYPE = 'P'
            then
               case
               when DET_TYPE in ('JDR','ADR')
               then
                  -DET_VAT_BASE2
               else
                  DET_VAT_BASE2 - (DET_VAT_BASE2 * (100/100))
               end
            else
               case
               when DET_TYPE in ('ACR','JCR')
               then
                  -DET_VAT_BASE2
               else
                  DET_VAT_BASE2
               end
            end
         end
      end
   else
   case 
   when DET_NOMINALDR = '' then -DET_VAT_BASE2
   when DET_NOMINALDR is null then -DET_VAT_BASE2
   else
   DET_VAT_BASE2
   end
end),DET_PRIMARY,DET_NOMINALVAT,DET_QUANTITY,DET_DIMENSION1,DET_DIMENSION2,DET_DIMENSION3,
-- Dims 2.51e onwards DET_DIMENSION4,DET_DIMENSION5,
DET_ARCHIVE_FLG,DET_VATCODE,DET_VAT_RETURN_PRIMARY
from SL_PL_NL_DETAIL with (nolock)
--with (index (DET_NOMINALVAT))
)
,
-- Replicate View NOM_DET_VAT_LEVEL1
VatL1
(
DET_LEDGER, DET_NOM_YEAR_LINK,
DET_BATCH_REF,DET_SUB_LEDGER,DET_DATE,DET_NOM_PERSORT,DET_HEADER_REF,DET_CURR_CODE,DET_HEADER_KEY,DET_BATCH_FLAG,
DET_RECUR_FLAG,DET_CURR_RATE,DET_JNL_LINEREF,DET_ORIGIN,DET_TYPE,DET_NOM_PERIOD,DET_NOM_YEAR,DET_USER_PUTIN,
DET_DATE_PUTIN,DET_VAT_RULES,DET_NOMINALDR,DET_NOMINALCR,DET_NOMINALVAT,DET_ACCOUNT,DET_ANALYSIS,DET_COSTCENTRE,
DET_COSTHEADER,DET_GROSS,DET_VAT,DET_NETT,DET_CURR_TAX,DET_CURR_NETT,DET_ANALTYPE,DET_CHEQUE_PAYEE,
DET_TRI_RATE1,DET_TRI_RATE2,DET_DESCRIPTION,DET_NETT_BASE2,DET_VAT_BASE2,DET_GROSS_BASE2,DET_RECON_REF,DET_PL_INTERNAL,
DET_TRI_RATECHNG1,DET_TRI_RATECHNG2,DET_CURR_RTEFLG,DET_HEADER_REF2,DET_ORDER_LINK,DET_RECONCILED,DET_STOCK_CODE,DET_PRICE_CODE,
HOME_DEBIT_VALUE,CURRENCY_DEBIT_VALUE,BASE2_DEBIT_VALUE,HOME_CREDIT_VALUE,CURRENCY_CREDIT_VALUE,
BASE2_CREDIT_VALUE,TRANS_PRIMARY,NOMINAL_CODE,NOMINAL_TYPE,DET_QUANTITY,DET_DIMENSION1,DET_DIMENSION2,DET_DIMENSION3,
-- Dims 2.51e onwards DET_DIMENSION4,DET_DIMENSION5,
DET_ARCHIVE_FLG,DET_VATCODE,DET_VAT_RETURN_PRIMARY)
as 
(select 
DET_LEDGER, DET_NOM_YEAR_LINK,
DET_BATCH_REF,DET_SUB_LEDGER,DET_DATE,DET_NOM_PERSORT,DET_HEADER_REF,DET_CURR_CODE,DET_HEADER_KEY,DET_BATCH_FLAG,
DET_RECUR_FLAG,DET_CURR_RATE,DET_JNL_LINEREF,DET_ORIGIN,DET_TYPE,DET_NOM_PERIOD,DET_NOM_YEAR,DET_USER_PUTIN,
DET_DATE_PUTIN,DET_VAT_RULES,DET_NOMINALDR,DET_NOMINALCR,DET_NOMINALVAT,DET_ACCOUNT,DET_ANALYSIS,DET_COSTCENTRE,
DET_COSTHEADER,DET_GROSS,DET_VAT,DET_NETT,DET_CURR_TAX,DET_CURR_NETT,DET_ANALTYPE,DET_CHEQUE_PAYEE,
DET_TRI_RATE1,DET_TRI_RATE2,DET_DESCRIPTION,DET_NETT_BASE2,DET_VAT_BASE2,DET_GROSS_BASE2,DET_RECON_REF,DET_PL_INTERNAL,
DET_TRI_RATECHNG1,DET_TRI_RATECHNG2,DET_CURR_RTEFLG,DET_HEADER_REF2,DET_ORDER_LINK,DET_RECONCILED,DET_STOCK_CODE,DET_PRICE_CODE,
(case when HOME_TEMP_VALUE > 0 then HOME_TEMP_VALUE else 0 end),
(case when CURRENCY_TEMP_VALUE > 0 then CURRENCY_TEMP_VALUE else 0 end),
(case when BASE2_TEMP_VALUE > 0 then BASE2_TEMP_VALUE else 0 end),
(case when HOME_TEMP_VALUE > 0 then 0 else -HOME_TEMP_VALUE end),
(case when CURRENCY_TEMP_VALUE > 0 then 0 else -CURRENCY_TEMP_VALUE end),
(case when BASE2_TEMP_VALUE > 0 then 0 else -BASE2_TEMP_VALUE end)
,DET_PRIMARY,NOMINAL_CODE,2,DET_QUANTITY,DET_DIMENSION1,DET_DIMENSION2,DET_DIMENSION3,
-- Dims 2.51e onwards DET_DIMENSION4,DET_DIMENSION5,
DET_ARCHIVE_FLG,DET_VATCODE,DET_VAT_RETURN_PRIMARY
from VatL2 
)
,
-- Replicate View NOM_DET_NRV_LEVEL2
NRVatL2
(
DET_LEDGER, DET_NOM_YEAR_LINK,
DET_BATCH_REF,DET_SUB_LEDGER,DET_DATE,DET_NOM_PERSORT,DET_HEADER_REF,DET_CURR_CODE,DET_HEADER_KEY,DET_BATCH_FLAG,
DET_RECUR_FLAG,DET_CURR_RATE,DET_JNL_LINEREF,DET_ORIGIN,DET_TYPE,DET_NOM_PERIOD,DET_NOM_YEAR,DET_USER_PUTIN,
DET_DATE_PUTIN,DET_VAT_RULES,DET_NOMINALDR,DET_NOMINALCR,DET_NOMINALVAT,DET_ACCOUNT,DET_ANALYSIS,DET_COSTCENTRE,
DET_COSTHEADER,DET_GROSS,DET_VAT,DET_NETT,DET_CURR_TAX,DET_CURR_NETT,DET_ANALTYPE,DET_CHEQUE_PAYEE,
DET_TRI_RATE1,DET_TRI_RATE2,DET_DESCRIPTION,DET_NETT_BASE2,DET_VAT_BASE2,DET_GROSS_BASE2,DET_RECON_REF,DET_PL_INTERNAL,
DET_TRI_RATECHNG1,DET_TRI_RATECHNG2,DET_CURR_RTEFLG,DET_HEADER_REF2,DET_ORDER_LINK,DET_RECONCILED,DET_STOCK_CODE,DET_PRICE_CODE,
HOME_TEMP_VALUE,CURRENCY_TEMP_VALUE,BASE2_TEMP_VALUE,
DET_PRIMARY,NOMINAL_CODE,DET_QUANTITY,DET_DIMENSION1,DET_DIMENSION2,
-- Dims 2.51e onwards DET_DIMENSION4,DET_DIMENSION5,
DET_DIMENSION3,DET_ARCHIVE_FLG,DET_VATCODE,DET_VAT_RETURN_PRIMARY)
as 
(select 
DET_LEDGER, DET_NOM_YEAR_LINK,
DET_BATCH_REF,DET_SUB_LEDGER,DET_DATE,DET_NOM_PERSORT,DET_HEADER_REF,DET_CURR_CODE,DET_HEADER_KEY,DET_BATCH_FLAG,
DET_RECUR_FLAG,DET_CURR_RATE,DET_JNL_LINEREF,DET_ORIGIN,DET_TYPE,DET_NOM_PERIOD,DET_NOM_YEAR,DET_USER_PUTIN,
DET_DATE_PUTIN,DET_VAT_RULES,DET_NOMINALDR,DET_NOMINALCR,DET_NOMINALVAT,DET_ACCOUNT,DET_ANALYSIS,DET_COSTCENTRE,
DET_COSTHEADER,DET_GROSS,DET_VAT,DET_NETT,DET_CURR_TAX,DET_CURR_NETT,DET_ANALTYPE,DET_CHEQUE_PAYEE,
DET_TRI_RATE1,DET_TRI_RATE2,DET_DESCRIPTION,DET_NETT_BASE2,DET_VAT_BASE2,DET_GROSS_BASE2,DET_RECON_REF,DET_PL_INTERNAL,
DET_TRI_RATECHNG1,DET_TRI_RATECHNG2,DET_CURR_RTEFLG,DET_HEADER_REF2,DET_ORDER_LINK,DET_RECONCILED,DET_STOCK_CODE,DET_PRICE_CODE,
(case
      when DET_TYPE in ('CRN','MCR','VCR')
      then
         -(DET_VAT * (100/100))
      when DET_TYPE = 'VJL' and DET_NOMINALCR <> ''
      then
         -(DET_VAT * (100/100))
      else
          (DET_VAT * (100/100))
      
end),
(case
      when DET_TYPE in ('CRN','MCR','VCR')
      then
         -(DET_CURR_TAX * (100/100))
      when DET_TYPE = 'VJL' and DET_NOMINALCR <> ''
      then
         -(DET_CURR_TAX * (100/100))
      else
          (DET_CURR_TAX * (100/100))
end),
(case
      when DET_TYPE in ('CRN','MCR','VCR')
      then
         -(DET_VAT_BASE2 * (100/100))
      when DET_TYPE = 'VJL' and DET_NOMINALCR <> ''
      then
         -(DET_VAT_BASE2 * (100/100))
      else
          (DET_VAT_BASE2 * (100/100))
end),
DET_PRIMARY,0,DET_QUANTITY,DET_DIMENSION1,DET_DIMENSION2,DET_DIMENSION3,
-- Dims 2.51e onwards DET_DIMENSION4,DET_DIMENSION5,
DET_ARCHIVE_FLG,DET_VATCODE,DET_VAT_RETURN_PRIMARY 
from SL_PL_NL_DETAIL with (nolock) 
--with (index (DET_NOMINAL_NR_VAT))
where DET_TYPE not in('MIN','MCR','MAD','MAC','MPA')
)
,
-- Replicate View NOM_DET_NRV_LEVEL1
NRVatL1
(
DET_LEDGER, DET_NOM_YEAR_LINK,
DET_BATCH_REF,DET_SUB_LEDGER,DET_DATE,DET_NOM_PERSORT,DET_HEADER_REF,DET_CURR_CODE,DET_HEADER_KEY,DET_BATCH_FLAG,
DET_RECUR_FLAG,DET_CURR_RATE,DET_JNL_LINEREF,DET_ORIGIN,DET_TYPE,DET_NOM_PERIOD,DET_NOM_YEAR,DET_USER_PUTIN,
DET_DATE_PUTIN,DET_VAT_RULES,DET_NOMINALDR,DET_NOMINALCR,DET_NOMINALVAT,DET_ACCOUNT,DET_ANALYSIS,DET_COSTCENTRE,
DET_COSTHEADER,DET_GROSS,DET_VAT,DET_NETT,DET_CURR_TAX,DET_CURR_NETT,DET_ANALTYPE,DET_CHEQUE_PAYEE,
DET_TRI_RATE1,DET_TRI_RATE2,DET_DESCRIPTION,DET_NETT_BASE2,DET_VAT_BASE2,DET_GROSS_BASE2,DET_RECON_REF,DET_PL_INTERNAL,
DET_TRI_RATECHNG1,DET_TRI_RATECHNG2,DET_CURR_RTEFLG,DET_HEADER_REF2,DET_ORDER_LINK,DET_RECONCILED,DET_STOCK_CODE,DET_PRICE_CODE,
HOME_DEBIT_VALUE,CURRENCY_DEBIT_VALUE,BASE2_DEBIT_VALUE,HOME_CREDIT_VALUE,CURRENCY_CREDIT_VALUE,
BASE2_CREDIT_VALUE,TRANS_PRIMARY,NOMINAL_CODE,NOMINAL_TYPE,DET_QUANTITY,DET_DIMENSION1,DET_DIMENSION2,DET_DIMENSION3,
-- Dims 2.51e onwards DET_DIMENSION4,DET_DIMENSION5,
DET_ARCHIVE_FLG,DET_VATCODE,DET_VAT_RETURN_PRIMARY)
as 
(select 
DET_LEDGER, DET_NOM_YEAR_LINK,
DET_BATCH_REF,DET_SUB_LEDGER,DET_DATE,DET_NOM_PERSORT,DET_HEADER_REF,DET_CURR_CODE,DET_HEADER_KEY,DET_BATCH_FLAG,
DET_RECUR_FLAG,DET_CURR_RATE,DET_JNL_LINEREF,DET_ORIGIN,DET_TYPE,DET_NOM_PERIOD,DET_NOM_YEAR,DET_USER_PUTIN,
DET_DATE_PUTIN,DET_VAT_RULES,DET_NOMINALDR,DET_NOMINALCR,DET_NOMINALVAT,DET_ACCOUNT,DET_ANALYSIS,DET_COSTCENTRE,
DET_COSTHEADER,DET_GROSS,DET_VAT,DET_NETT,DET_CURR_TAX,DET_CURR_NETT,DET_ANALTYPE,DET_CHEQUE_PAYEE,
DET_TRI_RATE1,DET_TRI_RATE2,DET_DESCRIPTION,DET_NETT_BASE2,DET_VAT_BASE2,DET_GROSS_BASE2,DET_RECON_REF,DET_PL_INTERNAL,
DET_TRI_RATECHNG1,DET_TRI_RATECHNG2,DET_CURR_RTEFLG,DET_HEADER_REF2,DET_ORDER_LINK,DET_RECONCILED,DET_STOCK_CODE,DET_PRICE_CODE,
(case when HOME_TEMP_VALUE > 0 then HOME_TEMP_VALUE else 0 end),
(case when CURRENCY_TEMP_VALUE > 0 then CURRENCY_TEMP_VALUE else 0 end),
(case when BASE2_TEMP_VALUE > 0 then BASE2_TEMP_VALUE else 0 end),
(case when HOME_TEMP_VALUE > 0 then 0 else -HOME_TEMP_VALUE end),
(case when CURRENCY_TEMP_VALUE > 0 then 0 else -CURRENCY_TEMP_VALUE end),
(case when BASE2_TEMP_VALUE > 0 then 0 else -BASE2_TEMP_VALUE end)
,DET_PRIMARY,NOMINAL_CODE,3,DET_QUANTITY,DET_DIMENSION1,DET_DIMENSION2,DET_DIMENSION3,
-- Dims 2.51e onwards DET_DIMENSION4,DET_DIMENSION5,
DET_ARCHIVE_FLG,DET_VATCODE,DET_VAT_RETURN_PRIMARY
from NRVatL2 
)

-- Main Select Query using CTE above as the source

-- DEBITS
select 
--nominal accounts
NCODE as [Nom Code], NNAME as [Nom Name], NMAJORHEADCODE as [MH Code], 
NCATEGORYCODE1 as [Cat1], NCATEGORYCODE2 as [Cat2],NCATEGORYCODE3 as [Cat3],NCATEGORYCODE4 as [Cat4],
NCATEGORYCODE5 as [Cat5], NCATEGORYCODE6 as [Cat6],NCATEGORYCODE7 as [Cat7],NCATEGORYCODE8 as [Cat8],
--major headings
MH_NAME as [MH Name], 
--nominal category1
isnull(ncat1.NL_CATEGORYNAME,'') as [Cat1 Name], 
--nominal category2
isnull(ncat2.NL_CATEGORYNAME,'') as [Cat2 Name], 
--nominal category3
isnull(ncat3.NL_CATEGORYNAME,'') as [Cat3 Name], 
--nominal category4
isnull(ncat4.NL_CATEGORYNAME,'') as [Cat4 Name], 
--nominal category5
isnull(ncat5.NL_CATEGORYNAME,'') as [Cat5 Name], 
--nominal category6
isnull(ncat6.NL_CATEGORYNAME,'') as [Cat6 Name], 
--nominal category7
isnull(ncat7.NL_CATEGORYNAME,'') as [Cat7 Name], 
--nominal category8
isnull(ncat8.NL_CATEGORYNAME,'') as [Cat8 Name], 
--sl_pl_nl_detail
DET_SUB_LEDGER as [Company], DET_HEADER_KEY as [Audit Hdr], DET_HEADER_REF as [Trans Ref], 
HOME_DEBIT_VALUE as [Home Debit], HOME_CREDIT_VALUE as [Home Credit], HOME_DEBIT_VALUE - HOME_CREDIT_VALUE as [Home Value],
DET_CURR_CODE as [Curr Code], CURRENCY_DEBIT_VALUE as [Curr Debit], CURRENCY_CREDIT_VALUE as [Curr Credit], CURRENCY_DEBIT_VALUE - CURRENCY_CREDIT_VALUE as [Curr Value], DET_CURR_RATE as [Curr Rate],
BASE2_DEBIT_VALUE as [2Base Debit], BASE2_CREDIT_VALUE as [2Base Credit], BASE2_DEBIT_VALUE - BASE2_CREDIT_VALUE as [2Base Value],
DET_DATE as [Trans Date], DET_TYPE as [Tran Type], DET_DESCRIPTION as [Trans Description],
DET_NOM_PERIOD as [Nom Per], DET_NOM_YEAR as [Nom Yr], DET_NOM_PERSORT as [Nom Yr Sort],
DET_NOM_YEAR_LINK as [Nom Yr Link], DET_BATCH_FLAG as [Batch Flag], 
DET_ORIGIN as [Tran Origin], DET_LEDGER as [Tran Ledger], isnull(DET_ACCOUNT,'') as [Cus/Supp Code],
DET_COSTHEADER as [Proj Code], DET_COSTCENTRE as [Proj Ctr], 
DET_USER_PUTIN as [User Ent], DET_DATE_PUTIN as [Date Ent], DET_BATCH_REF as [Batch Ref], 
DET_DIMENSION1 as [Tran UK1], DET_DIMENSION2 as [Tran UK2], DET_DIMENSION3 as [Tran UK3],
-- Dims 2.51e onwards DET_DIMENSION4 as [Tran UK4], DET_DIMENSION5 as [Tran UK5], 
TRANS_PRIMARY as [Audit No], 'Debit' as [View Source],
DET_ORDER_LINK as [Ord Link], DET_QUANTITY as [Qty], isnull(DET_RECON_REF,'') as [Recon Ref], DET_RECONCILED as [Reconciled],
DET_VAT_RETURN_PRIMARY as [Det Vat Link],
--Year label
YEAR_LABEL as [Year],  
--Vat Return details
isnull(TAXAUDIT_DATE,0) as [Vat Ret Date], isnull(TAXAUDIT_REF,'') as [Vat Ret Ref],
--customers & suppliers
CASE WHEN DET_LEDGER = 'SL' THEN customers.CUNAME WHEN DET_LEDGER = 'PL' THEN suppliers.SUNAME ELSE '' END AS [Cust/Supp Name],
CASE WHEN DET_LEDGER = 'SL' THEN customers.CUSORT WHEN DET_LEDGER = 'PL' THEN suppliers.SUSORT ELSE '' END AS [Cust/Supp Sort],
CASE WHEN DET_LEDGER = 'SL' THEN customers.CUUSER1 WHEN DET_LEDGER = 'PL' THEN suppliers.SUUSER1 ELSE '' END AS [Cust/Supp User1],
CASE WHEN DET_LEDGER = 'SL' THEN customers.CUUSER2 WHEN DET_LEDGER = 'PL' THEN suppliers.SUUSER2 ELSE '' END AS [Cust/Supp User2],
CASE WHEN DET_LEDGER = 'SL' THEN customers.CUUSER3 WHEN DET_LEDGER = 'PL' THEN suppliers.SUUSER3 ELSE '' END AS [Cust/Supp User3],
--sl_transactions / pl_transactions / nl_transactions
CASE WHEN DET_LEDGER = 'SL' THEN sl_trans.ST_DESCRIPTION WHEN DET_LEDGER = 'PL' THEN pl_trans.PT_DESCRIPTION WHEN DET_LEDGER = 'NL' THEN nl_trans.NT_DESCRIPTION ELSE '' END AS [Hdr Desc],
CASE WHEN DET_LEDGER = 'SL' THEN sl_trans.ST_USER1 WHEN DET_LEDGER = 'PL' THEN pl_trans.PT_USER1 ELSE '' END AS [Hdr User1],
CASE WHEN DET_LEDGER = 'SL' THEN sl_trans.ST_USER2 WHEN DET_LEDGER = 'PL' THEN pl_trans.PT_USER2 ELSE '' END AS [Hdr User2],
CASE WHEN DET_LEDGER = 'SL' THEN sl_trans.ST_USER3 WHEN DET_LEDGER = 'PL' THEN pl_trans.PT_USER3 ELSE '' END AS [Hdr User3],
--sales orders & purchase orders
CASE WHEN DET_LEDGER = 'SL' THEN isnull(so_order_no.OH_ORDER_NUMBER,0) WHEN DET_LEDGER = 'PL' THEN isnull(po_order_no.POH_ORDER_NUMBR,0) ELSE '' END AS [Order No], 
CASE WHEN DET_LEDGER = 'SL' THEN isnull(so_order_no.OH_ORDER_REF,'') WHEN DET_LEDGER = 'PL' THEN isnull(po_order_no.POH_ORDER_REF,'') ELSE '' END AS [Order Ref], 
CASE WHEN DET_LEDGER = 'SL' THEN isnull(so_order_no.OH_DESCRIPTION,'') WHEN DET_LEDGER = 'PL' THEN isnull(po_order_no.POH_DESCRIPTION,'') ELSE '' END AS [Order Desc], 
CASE WHEN DET_LEDGER = 'SL' THEN isnull(so_order_no.OH_USER_PUTIN,'') WHEN DET_LEDGER = 'PL' THEN isnull(po_order_no.POH_USER_PUTIN,'') ELSE '' END AS [Ord User Ent], 
CASE WHEN DET_LEDGER = 'SL' THEN isnull(so_order_no.OH_DATE_PUTIN,0) WHEN DET_LEDGER = 'PL' THEN isnull(po_order_no.POH_DATE_PUTIN,0) ELSE '' END AS [Ord Date Ent], 
--projects
isnull(CH_NAME,'') as [Proj Name], isnull(CH_SORT,'') as [Proj Sort], isnull(CH_ACCOUNT,'') as [Proj Cust],
isnull(CH_USER1,'') as [Proj User1], isnull(CH_USER2,'') as [Proj User2], isnull(CH_USER3,'') as [Proj User3], 
isnull(CH_USER4,'') as [Proj User4], isnull(CH_USER5,'') as [Proj User5], isnull(CH_USER6,'') as [Proj User6], 
isnull(CH_DATE_USER1,0) as [Proj Date1], isnull(CH_DATE_USER2,0) as [Proj Date2], isnull(CH_DATE_USER3,0) as [Proj Date3], 
--project cost centres
isnull(CC_NAME,'') as [Ctr Name], isnull(CC_USER_SUBTOT,'') as [Ctr SubTot],
--price records
isnull(DET_PRICE_CODE,'') as [Res Code], isnull(PRNAME,'') as [Res Name],
--stock records
isnull(DET_STOCK_CODE,'') as [Stk Code], isnull(STKNAME,'') as [Stk Name]
from DebitL1
inner join nom_accts on DebitL1.NOMINAL_CODE = nom_accts.NCODE
inner join mh on nom_accts.NMAJORHEADCODE = mh.MH_CODE
inner join sysyear on DebitL1.DET_NOM_YEAR_LINK = sysyear.YEAR_PRIMARY
left outer join ncat1 on nom_accts.NCATEGORYCODE1 = ncat1.NL_CAT_CODE1
left outer join ncat2 on nom_accts.NCATEGORYCODE2 = ncat2.NL_CAT_CODE2
left outer join ncat3 on nom_accts.NCATEGORYCODE3 = ncat3.NL_CAT_CODE3
left outer join ncat4 on nom_accts.NCATEGORYCODE4 = ncat4.NL_CAT_CODE4
left outer join ncat5 on nom_accts.NCATEGORYCODE5 = ncat5.NL_CAT_CODE5
left outer join ncat6 on nom_accts.NCATEGORYCODE6 = ncat6.NL_CAT_CODE6
left outer join ncat7 on nom_accts.NCATEGORYCODE7 = ncat7.NL_CAT_CODE7
left outer join ncat8 on nom_accts.NCATEGORYCODE8 = ncat8.NL_CAT_CODE8
left outer join projects on DebitL1.DET_COSTHEADER = projects.CH_CODE
left outer join centres on DebitL1.DET_COSTHEADER = centres.CC_COPYHEADER and DebitL1.DET_COSTCENTRE = centres.CC_CODE 
left outer join customers on DebitL1.DET_ACCOUNT = customers.CUCODE and DET_LEDGER = 'SL'
left outer join suppliers on DebitL1.DET_ACCOUNT = suppliers.SUCODE and DET_LEDGER = 'PL'
left outer join po_order_no on DebitL1.DET_ORDER_LINK = POD_PRIMARY
left outer join so_order_no on DebitL1.DET_ORDER_LINK = OD_PRIMARY
left outer join price on DebitL1.DET_PRICE_CODE = price.PRCODE
left outer join stock on DebitL1.DET_STOCK_CODE = stock.STKCODE
left outer join vat on DebitL1.DET_VAT_RETURN_PRIMARY = vat.TAXAUDIT_PRIMARY
left outer join sl_trans on DebitL1.DET_HEADER_KEY = sl_trans.ST_HEADER_KEY
left outer join pl_trans on DebitL1.DET_HEADER_KEY = pl_trans.PT_HEADER_KEY
left outer join nl_trans on DebitL1.DET_HEADER_KEY = nl_trans.NT_HEADER_KEY

-- CREDITS
union select
--nominal accounts
NCODE as [Nom Code], NNAME as [Nom Name], NMAJORHEADCODE as [MH Code], 
NCATEGORYCODE1 as [Cat1], NCATEGORYCODE2 as [Cat2],NCATEGORYCODE3 as [Cat3],NCATEGORYCODE4 as [Cat4],
NCATEGORYCODE5 as [Cat5], NCATEGORYCODE6 as [Cat6],NCATEGORYCODE7 as [Cat7],NCATEGORYCODE8 as [Cat8],
--major headings
MH_NAME as [MH Name], 
--nominal category1
isnull(ncat1.NL_CATEGORYNAME,'') as [Cat1 Name], 
--nominal category2
isnull(ncat2.NL_CATEGORYNAME,'') as [Cat2 Name], 
--nominal category3
isnull(ncat3.NL_CATEGORYNAME,'') as [Cat3 Name], 
--nominal category4
isnull(ncat4.NL_CATEGORYNAME,'') as [Cat4 Name], 
--nominal category5
isnull(ncat5.NL_CATEGORYNAME,'') as [Cat5 Name], 
--nominal category6
isnull(ncat6.NL_CATEGORYNAME,'') as [Cat6 Name], 
--nominal category7
isnull(ncat7.NL_CATEGORYNAME,'') as [Cat7 Name], 
--nominal category8
isnull(ncat8.NL_CATEGORYNAME,'') as [Cat8 Name], 
--sl_pl_nl_detail
DET_SUB_LEDGER as [Company], DET_HEADER_KEY as [Audit Hdr], DET_HEADER_REF as [Trans Ref], 
HOME_DEBIT_VALUE as [Home Debit], HOME_CREDIT_VALUE as [Home Credit], HOME_DEBIT_VALUE - HOME_CREDIT_VALUE as [Home Value],
DET_CURR_CODE as [Curr Code], CURRENCY_DEBIT_VALUE as [Curr Debit], CURRENCY_CREDIT_VALUE as [Curr Credit], CURRENCY_DEBIT_VALUE - CURRENCY_CREDIT_VALUE as [Curr Value], DET_CURR_RATE as [Curr Rate],
BASE2_DEBIT_VALUE as [2Base Debit], BASE2_CREDIT_VALUE as [2Base Credit], BASE2_DEBIT_VALUE - BASE2_CREDIT_VALUE as [2Base Value],
DET_DATE as [Trans Date], DET_TYPE as [Tran Type], DET_DESCRIPTION as [Trans Description],
DET_NOM_PERIOD as [Nom Per], DET_NOM_YEAR as [Nom Yr], DET_NOM_PERSORT as [Nom Yr Sort],
DET_NOM_YEAR_LINK as [Nom Yr Link], DET_BATCH_FLAG as [Batch Flag], 
DET_ORIGIN as [Tran Origin], DET_LEDGER as [Tran Ledger], isnull(DET_ACCOUNT,'') as [Cus/Supp Code],
DET_COSTHEADER as [Proj Code], DET_COSTCENTRE as [Proj Ctr], 
DET_USER_PUTIN as [User Ent], DET_DATE_PUTIN as [Date Ent], DET_BATCH_REF as [Batch Ref], 
DET_DIMENSION1 as [Tran UK1], DET_DIMENSION2 as [Tran UK2], DET_DIMENSION3 as [Tran UK3],
-- Dims 2.51e onwards DET_DIMENSION4 as [Tran UK4], DET_DIMENSION5 as [Tran UK5], 
TRANS_PRIMARY as [Audit No], 'Credit' as [View Source],
DET_ORDER_LINK as [Ord Link], DET_QUANTITY as [Qty], isnull(DET_RECON_REF,'') as [Recon Ref], DET_RECONCILED as [Reconciled],
DET_VAT_RETURN_PRIMARY as [Det Vat Link],
--Year label
YEAR_LABEL as [Year],  
--Vat Return details
isnull(TAXAUDIT_DATE,0) as [Vat Ret Date], isnull(TAXAUDIT_REF,'') as [Vat Ret Ref],
--customers & suppliers
CASE WHEN DET_LEDGER = 'SL' THEN customers.CUNAME WHEN DET_LEDGER = 'PL' THEN suppliers.SUNAME ELSE '' END AS [Cust/Supp Name],
CASE WHEN DET_LEDGER = 'SL' THEN customers.CUSORT WHEN DET_LEDGER = 'PL' THEN suppliers.SUSORT ELSE '' END AS [Cust/Supp Sort],
CASE WHEN DET_LEDGER = 'SL' THEN customers.CUUSER1 WHEN DET_LEDGER = 'PL' THEN suppliers.SUUSER1 ELSE '' END AS [Cust/Supp User1],
CASE WHEN DET_LEDGER = 'SL' THEN customers.CUUSER2 WHEN DET_LEDGER = 'PL' THEN suppliers.SUUSER2 ELSE '' END AS [Cust/Supp User2],
CASE WHEN DET_LEDGER = 'SL' THEN customers.CUUSER3 WHEN DET_LEDGER = 'PL' THEN suppliers.SUUSER3 ELSE '' END AS [Cust/Supp User3],
--sl_transactions / pl_transactions / nl_transactions
CASE WHEN DET_LEDGER = 'SL' THEN sl_trans.ST_DESCRIPTION WHEN DET_LEDGER = 'PL' THEN pl_trans.PT_DESCRIPTION WHEN DET_LEDGER = 'NL' THEN nl_trans.NT_DESCRIPTION ELSE '' END AS [Hdr Desc],
CASE WHEN DET_LEDGER = 'SL' THEN sl_trans.ST_USER1 WHEN DET_LEDGER = 'PL' THEN pl_trans.PT_USER1 ELSE '' END AS [Hdr User1],
CASE WHEN DET_LEDGER = 'SL' THEN sl_trans.ST_USER2 WHEN DET_LEDGER = 'PL' THEN pl_trans.PT_USER2 ELSE '' END AS [Hdr User2],
CASE WHEN DET_LEDGER = 'SL' THEN sl_trans.ST_USER3 WHEN DET_LEDGER = 'PL' THEN pl_trans.PT_USER3 ELSE '' END AS [Hdr User3],
--sales orders & purchase orders
CASE WHEN DET_LEDGER = 'SL' THEN isnull(so_order_no.OH_ORDER_NUMBER,0) WHEN DET_LEDGER = 'PL' THEN isnull(po_order_no.POH_ORDER_NUMBR,0) ELSE '' END AS [Order No], 
CASE WHEN DET_LEDGER = 'SL' THEN isnull(so_order_no.OH_ORDER_REF,'') WHEN DET_LEDGER = 'PL' THEN isnull(po_order_no.POH_ORDER_REF,'') ELSE '' END AS [Order Ref], 
CASE WHEN DET_LEDGER = 'SL' THEN isnull(so_order_no.OH_DESCRIPTION,'') WHEN DET_LEDGER = 'PL' THEN isnull(po_order_no.POH_DESCRIPTION,'') ELSE '' END AS [Order Desc], 
CASE WHEN DET_LEDGER = 'SL' THEN isnull(so_order_no.OH_USER_PUTIN,'') WHEN DET_LEDGER = 'PL' THEN isnull(po_order_no.POH_USER_PUTIN,'') ELSE '' END AS [Ord User Ent], 
CASE WHEN DET_LEDGER = 'SL' THEN isnull(so_order_no.OH_DATE_PUTIN,0) WHEN DET_LEDGER = 'PL' THEN isnull(po_order_no.POH_DATE_PUTIN,0) ELSE '' END AS [Ord Date Ent], 
--projects
isnull(CH_NAME,'') as [Proj Name], isnull(CH_SORT,'') as [Proj Sort], isnull(CH_ACCOUNT,'') as [Proj Cust],
isnull(CH_USER1,'') as [Proj User1], isnull(CH_USER2,'') as [Proj User2], isnull(CH_USER3,'') as [Proj User3], 
isnull(CH_USER4,'') as [Proj User4], isnull(CH_USER5,'') as [Proj User5], isnull(CH_USER6,'') as [Proj User6], 
isnull(CH_DATE_USER1,0) as [Proj Date1], isnull(CH_DATE_USER2,0) as [Proj Date2], isnull(CH_DATE_USER3,0) as [Proj Date3], 
--project cost centres
isnull(CC_NAME,'') as [Ctr Name], isnull(CC_USER_SUBTOT,'') as [Ctr SubTot],
--price records
isnull(DET_PRICE_CODE,'') as [Res Code], isnull(PRNAME,'') as [Res Name],
--stock records
isnull(DET_STOCK_CODE,'') as [Stk Code], isnull(STKNAME,'') as [Stk Name]
from CreditL1 
inner join nom_accts on CreditL1.NOMINAL_CODE = nom_accts.NCODE
inner join mh on nom_accts.NMAJORHEADCODE = mh.MH_CODE
inner join sysyear on CreditL1.DET_NOM_YEAR_LINK = sysyear.YEAR_PRIMARY
left outer join ncat1 on nom_accts.NCATEGORYCODE1 = ncat1.NL_CAT_CODE1
left outer join ncat2 on nom_accts.NCATEGORYCODE2 = ncat2.NL_CAT_CODE2
left outer join ncat3 on nom_accts.NCATEGORYCODE3 = ncat3.NL_CAT_CODE3
left outer join ncat4 on nom_accts.NCATEGORYCODE4 = ncat4.NL_CAT_CODE4
left outer join ncat5 on nom_accts.NCATEGORYCODE5 = ncat5.NL_CAT_CODE5
left outer join ncat6 on nom_accts.NCATEGORYCODE6 = ncat6.NL_CAT_CODE6
left outer join ncat7 on nom_accts.NCATEGORYCODE7 = ncat7.NL_CAT_CODE7
left outer join ncat8 on nom_accts.NCATEGORYCODE8 = ncat8.NL_CAT_CODE8
left outer join projects on CreditL1.DET_COSTHEADER = projects.CH_CODE
left outer join centres on CreditL1.DET_COSTHEADER = centres.CC_COPYHEADER and CreditL1.DET_COSTCENTRE = centres.CC_CODE 
left outer join customers on CreditL1.DET_ACCOUNT = customers.CUCODE and DET_LEDGER = 'SL'
left outer join suppliers on CreditL1.DET_ACCOUNT = suppliers.SUCODE and DET_LEDGER = 'PL'
left outer join po_order_no on CreditL1.DET_ORDER_LINK = POD_PRIMARY
left outer join so_order_no on CreditL1.DET_ORDER_LINK = OD_PRIMARY
left outer join price on CreditL1.DET_PRICE_CODE = price.PRCODE
left outer join stock on CreditL1.DET_STOCK_CODE = stock.STKCODE
left outer join vat on CreditL1.DET_VAT_RETURN_PRIMARY = vat.TAXAUDIT_PRIMARY
left outer join sl_trans on CreditL1.DET_HEADER_KEY = sl_trans.ST_HEADER_KEY
left outer join pl_trans on CreditL1.DET_HEADER_KEY = pl_trans.PT_HEADER_KEY
left outer join nl_trans on CreditL1.DET_HEADER_KEY = nl_trans.NT_HEADER_KEY

-- VAT (Recoverable)
union select
--nominal accounts
NCODE as [Nom Code], NNAME as [Nom Name], NMAJORHEADCODE as [MH Code], 
NCATEGORYCODE1 as [Cat1], NCATEGORYCODE2 as [Cat2],NCATEGORYCODE3 as [Cat3],NCATEGORYCODE4 as [Cat4],
NCATEGORYCODE5 as [Cat5], NCATEGORYCODE6 as [Cat6],NCATEGORYCODE7 as [Cat7],NCATEGORYCODE8 as [Cat8],
--major headings
MH_NAME as [MH Name], 
--nominal category1
isnull(ncat1.NL_CATEGORYNAME,'') as [Cat1 Name], 
--nominal category2
isnull(ncat2.NL_CATEGORYNAME,'') as [Cat2 Name], 
--nominal category3
isnull(ncat3.NL_CATEGORYNAME,'') as [Cat3 Name], 
--nominal category4
isnull(ncat4.NL_CATEGORYNAME,'') as [Cat4 Name], 
--nominal category5
isnull(ncat5.NL_CATEGORYNAME,'') as [Cat5 Name], 
--nominal category6
isnull(ncat6.NL_CATEGORYNAME,'') as [Cat6 Name], 
--nominal category7
isnull(ncat7.NL_CATEGORYNAME,'') as [Cat7 Name], 
--nominal category8
isnull(ncat8.NL_CATEGORYNAME,'') as [Cat8 Name], 
--sl_pl_nl_detail
DET_SUB_LEDGER as [Company], DET_HEADER_KEY as [Audit Hdr], DET_HEADER_REF as [Trans Ref], 
HOME_DEBIT_VALUE as [Home Debit], HOME_CREDIT_VALUE as [Home Credit], HOME_DEBIT_VALUE - HOME_CREDIT_VALUE as [Home Value],
DET_CURR_CODE as [Curr Code], CURRENCY_DEBIT_VALUE as [Curr Debit], CURRENCY_CREDIT_VALUE as [Curr Credit], CURRENCY_DEBIT_VALUE - CURRENCY_CREDIT_VALUE as [Curr Value], DET_CURR_RATE as [Curr Rate],
BASE2_DEBIT_VALUE as [2Base Debit], BASE2_CREDIT_VALUE as [2Base Credit], BASE2_DEBIT_VALUE - BASE2_CREDIT_VALUE as [2Base Value],
DET_DATE as [Trans Date], DET_TYPE as [Tran Type], DET_DESCRIPTION as [Trans Description],
DET_NOM_PERIOD as [Nom Per], DET_NOM_YEAR as [Nom Yr], DET_NOM_PERSORT as [Nom Yr Sort],
DET_NOM_YEAR_LINK as [Nom Yr Link], DET_BATCH_FLAG as [Batch Flag], 
DET_ORIGIN as [Tran Origin], DET_LEDGER as [Tran Ledger], isnull(DET_ACCOUNT,'') as [Cus/Supp Code],
DET_COSTHEADER as [Proj Code], DET_COSTCENTRE as [Proj Ctr], 
DET_USER_PUTIN as [User Ent], DET_DATE_PUTIN as [Date Ent], DET_BATCH_REF as [Batch Ref], 
DET_DIMENSION1 as [Tran UK1], DET_DIMENSION2 as [Tran UK2], DET_DIMENSION3 as [Tran UK3],
-- Dims 2.51e onwards DET_DIMENSION4 as [Tran UK4], DET_DIMENSION5 as [Tran UK5], 
TRANS_PRIMARY as [Audit No], 'Vat' as [View Source],
DET_ORDER_LINK as [Ord Link], DET_QUANTITY as [Qty], isnull(DET_RECON_REF,'') as [Recon Ref], DET_RECONCILED as [Reconciled],
DET_VAT_RETURN_PRIMARY as [Det Vat Link],
--Year label
YEAR_LABEL as [Year],  
--Vat Return details
isnull(TAXAUDIT_DATE,0) as [Vat Ret Date], isnull(TAXAUDIT_REF,'') as [Vat Ret Ref],
--customers & suppliers
CASE WHEN DET_LEDGER = 'SL' THEN customers.CUNAME WHEN DET_LEDGER = 'PL' THEN suppliers.SUNAME ELSE '' END AS [Cust/Supp Name],
CASE WHEN DET_LEDGER = 'SL' THEN customers.CUSORT WHEN DET_LEDGER = 'PL' THEN suppliers.SUSORT ELSE '' END AS [Cust/Supp Sort],
CASE WHEN DET_LEDGER = 'SL' THEN customers.CUUSER1 WHEN DET_LEDGER = 'PL' THEN suppliers.SUUSER1 ELSE '' END AS [Cust/Supp User1],
CASE WHEN DET_LEDGER = 'SL' THEN customers.CUUSER2 WHEN DET_LEDGER = 'PL' THEN suppliers.SUUSER2 ELSE '' END AS [Cust/Supp User2],
CASE WHEN DET_LEDGER = 'SL' THEN customers.CUUSER3 WHEN DET_LEDGER = 'PL' THEN suppliers.SUUSER3 ELSE '' END AS [Cust/Supp User3],
--sl_transactions / pl_transactions / nl_transactions
CASE WHEN DET_LEDGER = 'SL' THEN sl_trans.ST_DESCRIPTION WHEN DET_LEDGER = 'PL' THEN pl_trans.PT_DESCRIPTION WHEN DET_LEDGER = 'NL' THEN nl_trans.NT_DESCRIPTION ELSE '' END AS [Hdr Desc],
CASE WHEN DET_LEDGER = 'SL' THEN sl_trans.ST_USER1 WHEN DET_LEDGER = 'PL' THEN pl_trans.PT_USER1 ELSE '' END AS [Hdr User1],
CASE WHEN DET_LEDGER = 'SL' THEN sl_trans.ST_USER2 WHEN DET_LEDGER = 'PL' THEN pl_trans.PT_USER2 ELSE '' END AS [Hdr User2],
CASE WHEN DET_LEDGER = 'SL' THEN sl_trans.ST_USER3 WHEN DET_LEDGER = 'PL' THEN pl_trans.PT_USER3 ELSE '' END AS [Hdr User3],
--sales orders & purchase orders
CASE WHEN DET_LEDGER = 'SL' THEN isnull(so_order_no.OH_ORDER_NUMBER,0) WHEN DET_LEDGER = 'PL' THEN isnull(po_order_no.POH_ORDER_NUMBR,0) ELSE '' END AS [Order No], 
CASE WHEN DET_LEDGER = 'SL' THEN isnull(so_order_no.OH_ORDER_REF,'') WHEN DET_LEDGER = 'PL' THEN isnull(po_order_no.POH_ORDER_REF,'') ELSE '' END AS [Order Ref], 
CASE WHEN DET_LEDGER = 'SL' THEN isnull(so_order_no.OH_DESCRIPTION,'') WHEN DET_LEDGER = 'PL' THEN isnull(po_order_no.POH_DESCRIPTION,'') ELSE '' END AS [Order Desc], 
CASE WHEN DET_LEDGER = 'SL' THEN isnull(so_order_no.OH_USER_PUTIN,'') WHEN DET_LEDGER = 'PL' THEN isnull(po_order_no.POH_USER_PUTIN,'') ELSE '' END AS [Ord User Ent], 
CASE WHEN DET_LEDGER = 'SL' THEN isnull(so_order_no.OH_DATE_PUTIN,0) WHEN DET_LEDGER = 'PL' THEN isnull(po_order_no.POH_DATE_PUTIN,0) ELSE '' END AS [Ord Date Ent], 
--projects
isnull(CH_NAME,'') as [Proj Name], isnull(CH_SORT,'') as [Proj Sort], isnull(CH_ACCOUNT,'') as [Proj Cust],
isnull(CH_USER1,'') as [Proj User1], isnull(CH_USER2,'') as [Proj User2], isnull(CH_USER3,'') as [Proj User3], 
isnull(CH_USER4,'') as [Proj User4], isnull(CH_USER5,'') as [Proj User5], isnull(CH_USER6,'') as [Proj User6], 
isnull(CH_DATE_USER1,0) as [Proj Date1], isnull(CH_DATE_USER2,0) as [Proj Date2], isnull(CH_DATE_USER3,0) as [Proj Date3], 
--project cost centres
isnull(CC_NAME,'') as [Ctr Name], isnull(CC_USER_SUBTOT,'') as [Ctr SubTot],
--price records
isnull(DET_PRICE_CODE,'') as [Res Code], isnull(PRNAME,'') as [Res Name],
--stock records
isnull(DET_STOCK_CODE,'') as [Stk Code], isnull(STKNAME,'') as [Stk Name]
from VatL1 
inner join nom_accts on VatL1.NOMINAL_CODE = nom_accts.NCODE
inner join mh on nom_accts.NMAJORHEADCODE = mh.MH_CODE
inner join sysyear on VatL1.DET_NOM_YEAR_LINK = sysyear.YEAR_PRIMARY
left outer join ncat1 on nom_accts.NCATEGORYCODE1 = ncat1.NL_CAT_CODE1
left outer join ncat2 on nom_accts.NCATEGORYCODE2 = ncat2.NL_CAT_CODE2
left outer join ncat3 on nom_accts.NCATEGORYCODE3 = ncat3.NL_CAT_CODE3
left outer join ncat4 on nom_accts.NCATEGORYCODE4 = ncat4.NL_CAT_CODE4
left outer join ncat5 on nom_accts.NCATEGORYCODE5 = ncat5.NL_CAT_CODE5
left outer join ncat6 on nom_accts.NCATEGORYCODE6 = ncat6.NL_CAT_CODE6
left outer join ncat7 on nom_accts.NCATEGORYCODE7 = ncat7.NL_CAT_CODE7
left outer join ncat8 on nom_accts.NCATEGORYCODE8 = ncat8.NL_CAT_CODE8
left outer join projects on VatL1.DET_COSTHEADER = projects.CH_CODE
left outer join centres on VatL1.DET_COSTHEADER = centres.CC_COPYHEADER and VatL1.DET_COSTCENTRE = centres.CC_CODE 
left outer join customers on VatL1.DET_ACCOUNT = customers.CUCODE and DET_LEDGER = 'SL'
left outer join suppliers on VatL1.DET_ACCOUNT = suppliers.SUCODE and DET_LEDGER = 'PL'
left outer join po_order_no on VatL1.DET_ORDER_LINK = POD_PRIMARY
left outer join so_order_no on VatL1.DET_ORDER_LINK = OD_PRIMARY
left outer join price on VatL1.DET_PRICE_CODE = price.PRCODE
left outer join stock on VatL1.DET_STOCK_CODE = stock.STKCODE
left outer join vat on VatL1.DET_VAT_RETURN_PRIMARY = vat.TAXAUDIT_PRIMARY
left outer join sl_trans on VatL1.DET_HEADER_KEY = sl_trans.ST_HEADER_KEY
left outer join pl_trans on VatL1.DET_HEADER_KEY = pl_trans.PT_HEADER_KEY
left outer join nl_trans on VatL1.DET_HEADER_KEY = nl_trans.NT_HEADER_KEY

-- Vat (Non Recoverable)
union select
--nominal accounts
NCODE as [Nom Code], NNAME as [Nom Name], NMAJORHEADCODE as [MH Code], 
NCATEGORYCODE1 as [Cat1], NCATEGORYCODE2 as [Cat2],NCATEGORYCODE3 as [Cat3],NCATEGORYCODE4 as [Cat4],
NCATEGORYCODE5 as [Cat5], NCATEGORYCODE6 as [Cat6],NCATEGORYCODE7 as [Cat7],NCATEGORYCODE8 as [Cat8],
--major headings
MH_NAME as [MH Name], 
--nominal category1
isnull(ncat1.NL_CATEGORYNAME,'') as [Cat1 Name], 
--nominal category2
isnull(ncat2.NL_CATEGORYNAME,'') as [Cat2 Name], 
--nominal category3
isnull(ncat3.NL_CATEGORYNAME,'') as [Cat3 Name], 
--nominal category4
isnull(ncat4.NL_CATEGORYNAME,'') as [Cat4 Name], 
--nominal category5
isnull(ncat5.NL_CATEGORYNAME,'') as [Cat5 Name], 
--nominal category6
isnull(ncat6.NL_CATEGORYNAME,'') as [Cat6 Name], 
--nominal category7
isnull(ncat7.NL_CATEGORYNAME,'') as [Cat7 Name], 
--nominal category8
isnull(ncat8.NL_CATEGORYNAME,'') as [Cat8 Name], 
--sl_pl_nl_detail
DET_SUB_LEDGER as [Company], DET_HEADER_KEY as [Audit Hdr], DET_HEADER_REF as [Trans Ref], 
HOME_DEBIT_VALUE as [Home Debit], HOME_CREDIT_VALUE as [Home Credit], HOME_DEBIT_VALUE - HOME_CREDIT_VALUE as [Home Value],
DET_CURR_CODE as [Curr Code], CURRENCY_DEBIT_VALUE as [Curr Debit], CURRENCY_CREDIT_VALUE as [Curr Credit], CURRENCY_DEBIT_VALUE - CURRENCY_CREDIT_VALUE as [Curr Value], DET_CURR_RATE as [Curr Rate],
BASE2_DEBIT_VALUE as [2Base Debit], BASE2_CREDIT_VALUE as [2Base Credit], BASE2_DEBIT_VALUE - BASE2_CREDIT_VALUE as [2Base Value],
DET_DATE as [Trans Date], DET_TYPE as [Tran Type], DET_DESCRIPTION as [Trans Description],
DET_NOM_PERIOD as [Nom Per], DET_NOM_YEAR as [Nom Yr], DET_NOM_PERSORT as [Nom Yr Sort],
DET_NOM_YEAR_LINK as [Nom Yr Link], DET_BATCH_FLAG as [Batch Flag], 
DET_ORIGIN as [Tran Origin], DET_LEDGER as [Tran Ledger], isnull(DET_ACCOUNT,'') as [Cus/Supp Code],
DET_COSTHEADER as [Proj Code], DET_COSTCENTRE as [Proj Ctr], 
DET_USER_PUTIN as [User Ent], DET_DATE_PUTIN as [Date Ent], DET_BATCH_REF as [Batch Ref], 
DET_DIMENSION1 as [Tran UK1], DET_DIMENSION2 as [Tran UK2], DET_DIMENSION3 as [Tran UK3],
-- Dims 2.51e onwards DET_DIMENSION4 as [Tran UK4], DET_DIMENSION5 as [Tran UK5], 
TRANS_PRIMARY as [Audit No], 'Unrec Vat' as [View Source],
DET_ORDER_LINK as [Ord Link], DET_QUANTITY as [Qty], isnull(DET_RECON_REF,'') as [Recon Ref], DET_RECONCILED as [Reconciled],
DET_VAT_RETURN_PRIMARY as [Det Vat Link],
--Year label
YEAR_LABEL as [Year],  
--Vat Return details
isnull(TAXAUDIT_DATE,0) as [Vat Ret Date], isnull(TAXAUDIT_REF,'') as [Vat Ret Ref],
--customers & suppliers
CASE WHEN DET_LEDGER = 'SL' THEN customers.CUNAME WHEN DET_LEDGER = 'PL' THEN suppliers.SUNAME ELSE '' END AS [Cust/Supp Name],
CASE WHEN DET_LEDGER = 'SL' THEN customers.CUSORT WHEN DET_LEDGER = 'PL' THEN suppliers.SUSORT ELSE '' END AS [Cust/Supp Sort],
CASE WHEN DET_LEDGER = 'SL' THEN customers.CUUSER1 WHEN DET_LEDGER = 'PL' THEN suppliers.SUUSER1 ELSE '' END AS [Cust/Supp User1],
CASE WHEN DET_LEDGER = 'SL' THEN customers.CUUSER2 WHEN DET_LEDGER = 'PL' THEN suppliers.SUUSER2 ELSE '' END AS [Cust/Supp User2],
CASE WHEN DET_LEDGER = 'SL' THEN customers.CUUSER3 WHEN DET_LEDGER = 'PL' THEN suppliers.SUUSER3 ELSE '' END AS [Cust/Supp User3],
--sl_transactions / pl_transactions / nl_transactions
CASE WHEN DET_LEDGER = 'SL' THEN sl_trans.ST_DESCRIPTION WHEN DET_LEDGER = 'PL' THEN pl_trans.PT_DESCRIPTION WHEN DET_LEDGER = 'NL' THEN nl_trans.NT_DESCRIPTION ELSE '' END AS [Hdr Desc],
CASE WHEN DET_LEDGER = 'SL' THEN sl_trans.ST_USER1 WHEN DET_LEDGER = 'PL' THEN pl_trans.PT_USER1 ELSE '' END AS [Hdr User1],
CASE WHEN DET_LEDGER = 'SL' THEN sl_trans.ST_USER2 WHEN DET_LEDGER = 'PL' THEN pl_trans.PT_USER2 ELSE '' END AS [Hdr User2],
CASE WHEN DET_LEDGER = 'SL' THEN sl_trans.ST_USER3 WHEN DET_LEDGER = 'PL' THEN pl_trans.PT_USER3 ELSE '' END AS [Hdr User3],
--sales orders & purchase orders
CASE WHEN DET_LEDGER = 'SL' THEN isnull(so_order_no.OH_ORDER_NUMBER,0) WHEN DET_LEDGER = 'PL' THEN isnull(po_order_no.POH_ORDER_NUMBR,0) ELSE '' END AS [Order No], 
CASE WHEN DET_LEDGER = 'SL' THEN isnull(so_order_no.OH_ORDER_REF,'') WHEN DET_LEDGER = 'PL' THEN isnull(po_order_no.POH_ORDER_REF,'') ELSE '' END AS [Order Ref], 
CASE WHEN DET_LEDGER = 'SL' THEN isnull(so_order_no.OH_DESCRIPTION,'') WHEN DET_LEDGER = 'PL' THEN isnull(po_order_no.POH_DESCRIPTION,'') ELSE '' END AS [Order Desc], 
CASE WHEN DET_LEDGER = 'SL' THEN isnull(so_order_no.OH_USER_PUTIN,'') WHEN DET_LEDGER = 'PL' THEN isnull(po_order_no.POH_USER_PUTIN,'') ELSE '' END AS [Ord User Ent], 
CASE WHEN DET_LEDGER = 'SL' THEN isnull(so_order_no.OH_DATE_PUTIN,0) WHEN DET_LEDGER = 'PL' THEN isnull(po_order_no.POH_DATE_PUTIN,0) ELSE '' END AS [Ord Date Ent], 
--projects
isnull(CH_NAME,'') as [Proj Name], isnull(CH_SORT,'') as [Proj Sort], isnull(CH_ACCOUNT,'') as [Proj Cust],
isnull(CH_USER1,'') as [Proj User1], isnull(CH_USER2,'') as [Proj User2], isnull(CH_USER3,'') as [Proj User3], 
isnull(CH_USER4,'') as [Proj User4], isnull(CH_USER5,'') as [Proj User5], isnull(CH_USER6,'') as [Proj User6], 
isnull(CH_DATE_USER1,0) as [Proj Date1], isnull(CH_DATE_USER2,0) as [Proj Date2], isnull(CH_DATE_USER3,0) as [Proj Date3], 
--project cost centres
isnull(CC_NAME,'') as [Ctr Name], isnull(CC_USER_SUBTOT,'') as [Ctr SubTot],
--price records
isnull(DET_PRICE_CODE,'') as [Res Code], isnull(PRNAME,'') as [Res Name],
--stock records
isnull(DET_STOCK_CODE,'') as [Stk Code], isnull(STKNAME,'') as [Stk Name]
from NRVatL1 
inner join nom_accts on NRVatL1.NOMINAL_CODE = nom_accts.NCODE
inner join mh on nom_accts.NMAJORHEADCODE = mh.MH_CODE
inner join sysyear on NRVatL1.DET_NOM_YEAR_LINK = sysyear.YEAR_PRIMARY
left outer join ncat1 on nom_accts.NCATEGORYCODE1 = ncat1.NL_CAT_CODE1
left outer join ncat2 on nom_accts.NCATEGORYCODE2 = ncat2.NL_CAT_CODE2
left outer join ncat3 on nom_accts.NCATEGORYCODE3 = ncat3.NL_CAT_CODE3
left outer join ncat4 on nom_accts.NCATEGORYCODE4 = ncat4.NL_CAT_CODE4
left outer join ncat5 on nom_accts.NCATEGORYCODE5 = ncat5.NL_CAT_CODE5
left outer join ncat6 on nom_accts.NCATEGORYCODE6 = ncat6.NL_CAT_CODE6
left outer join ncat7 on nom_accts.NCATEGORYCODE7 = ncat7.NL_CAT_CODE7
left outer join ncat8 on nom_accts.NCATEGORYCODE8 = ncat8.NL_CAT_CODE8
left outer join projects on NRVatL1.DET_COSTHEADER = projects.CH_CODE
left outer join centres on NRVatL1.DET_COSTHEADER = centres.CC_COPYHEADER and NRVatL1.DET_COSTCENTRE = centres.CC_CODE 
left outer join customers on NRVatL1.DET_ACCOUNT = customers.CUCODE and DET_LEDGER = 'SL'
left outer join suppliers on NRVatL1.DET_ACCOUNT = suppliers.SUCODE and DET_LEDGER = 'PL'
left outer join po_order_no on NRVatL1.DET_ORDER_LINK = POD_PRIMARY
left outer join so_order_no on NRVatL1.DET_ORDER_LINK = OD_PRIMARY
left outer join price on NRVatL1.DET_PRICE_CODE = price.PRCODE
left outer join stock on NRVatL1.DET_STOCK_CODE = stock.STKCODE
left outer join vat on NRVatL1.DET_VAT_RETURN_PRIMARY = vat.TAXAUDIT_PRIMARY
left outer join sl_trans on NRVatL1.DET_HEADER_KEY = sl_trans.ST_HEADER_KEY
left outer join pl_trans on NRVatL1.DET_HEADER_KEY = pl_trans.PT_HEADER_KEY
left outer join nl_trans on NRVatL1.DET_HEADER_KEY = nl_trans.NT_HEADER_KEY

